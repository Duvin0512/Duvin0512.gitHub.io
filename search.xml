<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>换电脑或重置电脑后如何迁移hexo博客</title>
      <link href="/2022/09/28/blog_2/"/>
      <url>/2022/09/28/blog_2/</url>
      
        <content type="html"><![CDATA[<ul><li>备份旧电脑博客文件</li><li>准备工作环境</li><li>将备份文件迁移至新电脑</li><li>下载hexo的git工具</li></ul><a id="more"></a><h2 id="1-备份旧电脑博客文件"><a href="#1-备份旧电脑博客文件" class="headerlink" title="1. 备份旧电脑博客文件"></a>1. 备份旧电脑博客文件</h2><p>找到旧电脑中博客文件所在的文件夹，删除node_modules文件夹，将其余文件全部备份。<br>    <img src="/images/blog_1.png" alt="博客所在文件夹"></p><h2 id="2-准备新电脑工作环境"><a href="#2-准备新电脑工作环境" class="headerlink" title="2. 准备新电脑工作环境"></a>2. 准备新电脑工作环境</h2><h3 id="2-1-下载安装git并配置ssh"><a href="#2-1-下载安装git并配置ssh" class="headerlink" title="2.1 下载安装git并配置ssh"></a>2.1 下载安装git并配置ssh</h3><h4 id="2-1-1-git下载地址：https-git-scm-com-downloads"><a href="#2-1-1-git下载地址：https-git-scm-com-downloads" class="headerlink" title="2.1.1 git下载地址：https://git-scm.com/downloads"></a>2.1.1 git下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></h4><p>下载安装完成后，打开git bash设置用户，注意这个不是登录，是给电脑设置一个用户，等上传博客的时候，告诉远程仓库是谁上传的。</p><p><code>git config --global user.name &quot;你的名字&quot;git config --global user.email &quot;你的邮箱&quot;</code></p><h4 id="2-1-2-创建SSH-KEY"><a href="#2-1-2-创建SSH-KEY" class="headerlink" title="2.1.2 创建SSH KEY"></a>2.1.2 创建SSH KEY</h4><p>首先使用<code>~/.ssh</code>或者<code>~/.ssh ls</code>命令来查询电脑上是否有.ssh文件夹</p><p>（若电脑已有.ssh文件夹，则可跳过这一步）接着在git bash中输入<code>$ ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code><br>会出现一系列提示语句：</p><p><strong>Generating public/private rsa key pair.</strong><br><strong>Enter file in which to save the key (/c/Users/DUVIN/.ssh/id_rsa):</strong><br>输入一个文件名，用于保存刚才生成的SSH key代码。可以直接回车，会默认生成id_rsa和id_rsa.pub两个秘钥文件。</p><p>创建好.ssh这个文件夹，会提示：<br><strong>Created directory ‘/c/Users/DUVIN/.ssh’.</strong></p><p><strong>Enter passphrase (empty for no passphrase):</strong><br>输入密码，如果设置了密码，在使用ssh传输文件的时候，需要输入该密码。建议不用设置，直接回车。</p><p><strong>Enter same passphrase again:</strong><br>再输一次密码以此确认。若上一步没设置密码，直接回车即可。</p><p>至此秘钥设置完成：<br><strong>Your identification has been saved in /c/Users/…/.ssh/id_rsa</strong><br><strong>Your public key has been saved in /c/Users/…/.ssh/id_rsa.pub</strong></p><p>最后还将展示设置好的秘钥（不可透露给他人）：<br>    <img src="/images/blog_2.png" alt="设置ssh"></p><p>此时SSH KEY设置成功，使用<code>~/.ssh</code>查询.ssh文件所在位置。</p><h4 id="2-1-3-添加SSH-KEY到Github"><a href="#2-1-3-添加SSH-KEY到Github" class="headerlink" title="2.1.3 添加SSH KEY到Github"></a>2.1.3 添加SSH KEY到Github</h4><p>打开GitHub账户，进入设置，选择SSH and GPG keys<br>    <img src="/images/blog_3.png" alt=""><br>    <img src="/images/blog_4.png" alt=""></p><p>点击右上角新建一个SSH KEY，title随便写，也可以不写。根据上面查询到的.ssh文件路径，用记事本打开id_rsa.pub文件，将其全选复制粘贴到Key中。<br>    <img src="/images/blog_5.png" alt=""></p><h4 id="2-1-4-测试该SSH-KEY"><a href="#2-1-4-测试该SSH-KEY" class="headerlink" title="2.1.4 测试该SSH KEY"></a>2.1.4 测试该SSH KEY</h4><p>在git bash中输入<code>$ ssh -T git@github.com</code>，按照出现的提示输入yes，当看到如图最后一行提示则表示SSH设置成功。<br>    <img src="/images/blog_6.png" alt=""></p><h3 id="2-2-安装node-js"><a href="#2-2-安装node-js" class="headerlink" title="2.2 安装node.js"></a>2.2 安装node.js</h3><p>在官网<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a> 下载长期支持版，一路next</p><h3 id="2-3-安装hexo"><a href="#2-3-安装hexo" class="headerlink" title="2.3 安装hexo"></a>2.3 安装hexo</h3><p>在git bash中输入<code>npm install hexo-cli -g</code>,如果显示无法识别npm命令也可打开cmd输入该命令安装。<br>    <img src="/images/blog_7.png" alt=""></p><h2 id="3-将备份文件迁移至新电脑"><a href="#3-将备份文件迁移至新电脑" class="headerlink" title="3.将备份文件迁移至新电脑"></a>3.将备份文件迁移至新电脑</h2><p>将拷贝下来的文件夹复制到自己想放的位置即可。然后进入复制好的文件中，打开git bash，输入<code>npm install</code>安装依赖。<br>执行完毕后该文件夹中原先删除的node_modules文件夹又再次出现了。</p><h2 id="4-下载hexo的git工具"><a href="#4-下载hexo的git工具" class="headerlink" title="4. 下载hexo的git工具"></a>4. 下载hexo的git工具</h2><p>输入命令<code>npm install hexo-deployer-git --save</code><br>下载完成后，输入<code>hexo clean</code>清除缓存，再输入<code>hexo g -d</code>重新部署提交博客就完成了。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/25/hello-world/"/>
      <url>/2022/09/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Matlab_01 基本操作与矩阵输入</title>
      <link href="/2022/04/21/Matlab01/"/>
      <url>/2022/04/21/Matlab01/</url>
      
        <content type="html"><![CDATA[<ul><li>MATLAB as caculator</li><li>Array operation</li></ul><a id="more"></a><h1 id="MATLAB-as-caculator"><a href="#MATLAB-as-caculator" class="headerlink" title="MATLAB as caculator"></a>MATLAB as caculator</h1><h2 id="运算优先级"><a href="#运算优先级" class="headerlink" title="运算优先级"></a>运算优先级</h2><ul><li>从左到右次序 先乘除后加减</li><li>优先级<ol><li>Parenthesis ()</li><li>Power (ˆ)</li><li>Multiplication and division (*,/)</li><li>Addition and subtraction (+,-)</li></ol></li></ul><h3 id="常用数学方法语法"><a href="#常用数学方法语法" class="headerlink" title="常用数学方法语法"></a>常用数学方法语法</h3><p><a href="https://ww2.mathworks.cn/help/matlab/elementary-math.html?lang=en" target="_blank" rel="noopener">https://ww2.mathworks.cn/help/matlab/elementary-math.html?lang=en</a></p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p><img src="/images/ml_1.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">cos</span>(((<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>)^<span class="number">3</span>/<span class="number">5</span>)^<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.0050</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">sin</span>(<span class="built_in">pi</span>^<span class="number">0.5</span>)+<span class="built_in">log</span>(<span class="built_in">tan</span>(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.4228</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="number">2</span>^(<span class="number">3.5</span>*<span class="number">1.7</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">61.8199</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">exp</span>(<span class="built_in">sin</span>(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.5804</span></span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ol><li>变量使用前不需要声明</li><li>大小写敏感</li></ol><p><img src="/images/ml_2.png" alt=""></p><ol start="3"><li>变量名开头不能有数字</li></ol><p><img src="/images/ml_3.png" alt=""></p><ol start="4"><li>保留字和关键字不能用作变量</li></ol><p><img src="/images/ml_4.png" alt=""></p><h3 id="变量混乱使用的例子"><a href="#变量混乱使用的例子" class="headerlink" title="变量混乱使用的例子"></a>变量混乱使用的例子</h3><p>原本cos是一个三角函数，但由于将cos定义为一个变量，此时cos是指代This string这个字符串，而并非是cos这个三角函数。cos(8)是指字符串的第8个字符。</p><p><img src="/images/ml_5.png" alt=""></p><p>当出现这种情况时，要将错误使用的关键字或保留字从工作区删除，需要使用过<code>clear XXX</code>命令删除指定的变量，当<code>clear</code>不跟具体变量时是指将工作区里的所有变量删除，此时可能会引起计算数据丢失。</p><p><img src="/images/ml_6.png" alt=""></p><h3 id="查询变量类型"><a href="#查询变量类型" class="headerlink" title="查询变量类型"></a>查询变量类型</h3><p>在MATLAB中，可以使用<code>who</code>命令来查询变量，<code>whos</code>命令则可以显示变量更多的信息，如变量类型等。</p><p><img src="/images/ml_7.png" alt=""></p><p>还可以直接双击工作区具体的变量查询详细信息。</p><p><img src="/images/ml_8.png" alt=""></p><h3 id="变量格式"><a href="#变量格式" class="headerlink" title="变量格式"></a>变量格式</h3><table><thead><tr><th>short</th><th>long</th><th>shortE</th><th>longE</th><th>bank</th><th>hex</th><th>rat</th></tr></thead></table><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><p><img src="/images/ml_9.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="number">3</span>/<span class="number">13</span>+<span class="number">4</span>/<span class="number">14</span>+<span class="number">5</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.8498</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; format long</span><br><span class="line">&gt;&gt; <span class="number">3</span>/<span class="number">13</span>+<span class="number">4</span>/<span class="number">14</span>+<span class="number">5</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.849816849816850</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; format <span class="built_in">rat</span></span><br><span class="line">&gt;&gt; <span class="number">3</span>/<span class="number">13</span>+<span class="number">4</span>/<span class="number">14</span>+<span class="number">5</span>/<span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">232</span>/<span class="number">273</span></span><br></pre></td></tr></table></figure><p><img src="/images/ml_10.png" alt=""></p><h3 id="命令有无；的区别"><a href="#命令有无；的区别" class="headerlink" title="命令有无；的区别"></a>命令有无；的区别</h3><p>当命令没有分号时，MATLAB会将运算结果呈现出来，而当加了；之后，则不显示运算结果，当计算数据比较多的时候，相对感觉整洁。</p><p><img src="/images/ml_11.png" alt=""></p><h1 id="Array-operation"><a href="#Array-operation" class="headerlink" title="Array operation"></a>Array operation</h1><h2 id="Array-Vector-and-Matrix"><a href="#Array-Vector-and-Matrix" class="headerlink" title="Array(Vector and Matrix)"></a>Array(Vector and Matrix)</h2><ul><li>行向量row vertor</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br></pre></td></tr></table></figure><ul><li>列向量column vector</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b=[<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>;<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p><img src="/images/ml_12.png" alt=""></p><ul><li>矩阵输入</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span> <span class="number">21</span> <span class="number">6</span>;<span class="number">5</span> <span class="number">17</span> <span class="number">9</span>;<span class="number">31</span> <span class="number">2</span> <span class="number">7</span>]</span><br></pre></td></tr></table></figure><p><img src="/images/ml_13.png" alt=""></p><h3 id="Array-Indexing"><a href="#Array-Indexing" class="headerlink" title="Array Indexing"></a>Array Indexing</h3><ul><li>方法一Indexing</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span> <span class="number">3</span>],[<span class="number">1</span> <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">6</span>       </span><br><span class="line">      <span class="number">31</span>              <span class="number">7</span></span><br></pre></td></tr></table></figure><ul><li>方法二Indexing<br>矩阵是按列存储的。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">9</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span> <span class="number">3</span> <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>             <span class="number">31</span>             <span class="number">17</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span> <span class="number">3</span>; <span class="number">1</span> <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>             <span class="number">31</span>       </span><br><span class="line">       <span class="number">1</span>             <span class="number">31</span></span><br></pre></td></tr></table></figure><h3 id="矩阵元素替换"><a href="#矩阵元素替换" class="headerlink" title="矩阵元素替换"></a>矩阵元素替换</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A(<span class="number">1</span>,<span class="number">2</span>)=<span class="number">76</span></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>             <span class="number">76</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">5</span>             <span class="number">17</span>              <span class="number">9</span>       </span><br><span class="line">      <span class="number">31</span>              <span class="number">2</span>              <span class="number">7</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">3</span>,<span class="number">2</span>)=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>             <span class="number">76</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">5</span>             <span class="number">17</span>              <span class="number">9</span>       </span><br><span class="line">      <span class="number">31</span>              <span class="number">0</span>              <span class="number">7</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span> <span class="number">2</span>],[<span class="number">2</span> <span class="number">3</span>])=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">0</span>              <span class="number">0</span>       </span><br><span class="line">       <span class="number">5</span>              <span class="number">0</span>              <span class="number">0</span>       </span><br><span class="line">      <span class="number">31</span>              <span class="number">0</span>              <span class="number">7</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">3</span>,:)=[]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">0</span>              <span class="number">0</span>       </span><br><span class="line">       <span class="number">5</span>              <span class="number">0</span>              <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Colon-operator"><a href="#Colon-operator" class="headerlink" title="Colon operator"></a>Colon operator</h3><table><thead><tr><th>j:k</th><th>j:i:k</th></tr></thead><tbody><tr><td>[j,j+1,j+2,…,k]</td><td>[j,j+i,j+2i,…,k]</td></tr></tbody></table><h3 id="Array-concatenation"><a href="#Array-concatenation" class="headerlink" title="Array concatenation"></a>Array concatenation</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span>;<span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">&gt;&gt; B=[<span class="number">9</span> <span class="number">9</span>;<span class="number">9</span> <span class="number">9</span>];</span><br><span class="line">&gt;&gt; F=[A B]</span><br><span class="line"></span><br><span class="line">F =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>              <span class="number">9</span>              <span class="number">9</span>       </span><br><span class="line">       <span class="number">3</span>              <span class="number">4</span>              <span class="number">9</span>              <span class="number">9</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; F=[A;B]</span><br><span class="line"></span><br><span class="line">F =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>       </span><br><span class="line">       <span class="number">3</span>              <span class="number">4</span>       </span><br><span class="line">       <span class="number">9</span>              <span class="number">9</span>       </span><br><span class="line">       <span class="number">9</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="Array-manipulation"><a href="#Array-manipulation" class="headerlink" title="Array manipulation"></a>Array manipulation</h3><ul><li>运算符<br><code>+ - * / ^ . &#39;</code></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">4</span>; <span class="number">9</span> <span class="number">8</span> <span class="number">7</span>];</span><br><span class="line">&gt;&gt; B=[<span class="number">3</span> <span class="number">3</span> <span class="number">3</span>;<span class="number">2</span> <span class="number">4</span> <span class="number">9</span>;<span class="number">1</span> <span class="number">3</span> <span class="number">1</span>];</span><br><span class="line">&gt;&gt; a=<span class="number">2</span>;</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x1=A+a</span><br><span class="line"></span><br><span class="line">x1 =</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>              <span class="number">4</span>              <span class="number">5</span>       </span><br><span class="line">       <span class="number">6</span>              <span class="number">7</span>              <span class="number">6</span>       </span><br><span class="line">      <span class="number">11</span>             <span class="number">10</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x2=A/a</span><br><span class="line"></span><br><span class="line">x2 =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">2</span>            <span class="number">1</span>              <span class="number">3</span>/<span class="number">2</span>     </span><br><span class="line">       <span class="number">2</span>              <span class="number">5</span>/<span class="number">2</span>            <span class="number">2</span>       </span><br><span class="line">       <span class="number">9</span>/<span class="number">2</span>            <span class="number">4</span>              <span class="number">7</span>/<span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x3=A./a</span><br><span class="line"></span><br><span class="line">x3 =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">2</span>            <span class="number">1</span>              <span class="number">3</span>/<span class="number">2</span>     </span><br><span class="line">       <span class="number">2</span>              <span class="number">5</span>/<span class="number">2</span>            <span class="number">2</span>       </span><br><span class="line">       <span class="number">9</span>/<span class="number">2</span>            <span class="number">4</span>              <span class="number">7</span>/<span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x4=A^a</span><br><span class="line"></span><br><span class="line">x4 =</span><br><span class="line"></span><br><span class="line">      <span class="number">36</span>             <span class="number">36</span>             <span class="number">32</span>       </span><br><span class="line">      <span class="number">60</span>             <span class="number">65</span>             <span class="number">60</span>       </span><br><span class="line">     <span class="number">104</span>            <span class="number">114</span>            <span class="number">108</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x5=A.^a</span><br><span class="line"></span><br><span class="line">x5 =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">4</span>              <span class="number">9</span>       </span><br><span class="line">      <span class="number">16</span>             <span class="number">25</span>             <span class="number">16</span>       </span><br><span class="line">      <span class="number">81</span>             <span class="number">64</span>             <span class="number">49</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; C=A'</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">4</span>              <span class="number">9</span>       </span><br><span class="line">       <span class="number">2</span>              <span class="number">5</span>              <span class="number">8</span>       </span><br><span class="line">       <span class="number">3</span>              <span class="number">4</span>              <span class="number">7</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; y1=A+B</span><br><span class="line"></span><br><span class="line">y1 =</span><br><span class="line"></span><br><span class="line">       <span class="number">4</span>              <span class="number">5</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">6</span>              <span class="number">9</span>             <span class="number">13</span>       </span><br><span class="line">      <span class="number">10</span>             <span class="number">11</span>              <span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; y2=A*B</span><br><span class="line"></span><br><span class="line">y2 =</span><br><span class="line"></span><br><span class="line">      <span class="number">10</span>             <span class="number">20</span>             <span class="number">24</span>       </span><br><span class="line">      <span class="number">26</span>             <span class="number">44</span>             <span class="number">61</span>       </span><br><span class="line">      <span class="number">50</span>             <span class="number">80</span>            <span class="number">106</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; y3=A.*B</span><br><span class="line"></span><br><span class="line">y3 =</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>              <span class="number">6</span>              <span class="number">9</span>       </span><br><span class="line">       <span class="number">8</span>             <span class="number">20</span>             <span class="number">36</span>       </span><br><span class="line">       <span class="number">9</span>             <span class="number">24</span>              <span class="number">7</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; y4=A/B</span><br><span class="line"></span><br><span class="line">y4 =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">14</span>           <span class="number">2</span>/<span class="number">7</span>            <span class="number">3</span>/<span class="number">14</span>    </span><br><span class="line">       <span class="number">7</span>/<span class="number">6</span>            <span class="number">0</span>              <span class="number">1</span>/<span class="number">2</span>     </span><br><span class="line">     <span class="number">137</span>/<span class="number">42</span>          <span class="number">-2</span>/<span class="number">7</span>           <span class="number">-3</span>/<span class="number">14</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; y5=A./B</span><br><span class="line"></span><br><span class="line">y5 =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">3</span>            <span class="number">2</span>/<span class="number">3</span>            <span class="number">1</span>       </span><br><span class="line">       <span class="number">2</span>              <span class="number">5</span>/<span class="number">4</span>            <span class="number">4</span>/<span class="number">9</span>     </span><br><span class="line">       <span class="number">9</span>              <span class="number">8</span>/<span class="number">3</span>            <span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="特殊矩阵"><a href="#特殊矩阵" class="headerlink" title="特殊矩阵"></a>特殊矩阵</h3><ul><li>单位矩阵<code>eye(n)</code></li><li>零矩阵<code>zeros(n1,n2)</code></li><li>全1矩阵<code>ones(n1,n2)</code></li><li>对角矩阵<code>diag()</code></li></ul><h3 id="矩阵的特殊方法"><a href="#矩阵的特殊方法" class="headerlink" title="矩阵的特殊方法"></a>矩阵的特殊方法</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">0</span> <span class="number">5</span> <span class="number">6</span>;<span class="number">7</span> <span class="number">0</span> <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>              <span class="number">3</span>       </span><br><span class="line">       <span class="number">0</span>              <span class="number">5</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">7</span>              <span class="number">0</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">max</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">7</span>              <span class="number">5</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">max</span>(<span class="built_in">max</span>(A))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">min</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">0</span>              <span class="number">0</span>              <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; sum(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">8</span>              <span class="number">7</span>             <span class="number">18</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">mean</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">8</span>/<span class="number">3</span>            <span class="number">7</span>/<span class="number">3</span>            <span class="number">6</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">sort</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">0</span>              <span class="number">0</span>              <span class="number">3</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">7</span>              <span class="number">5</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">sortrows</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">0</span>              <span class="number">5</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>              <span class="number">3</span>       </span><br><span class="line">       <span class="number">7</span>              <span class="number">0</span>              <span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">size</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>              <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">length</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">find</span>(A==<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
            <tag> Matlab初阶+中阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python——数据类型</title>
      <link href="/2020/07/14/python02/"/>
      <url>/2020/07/14/python02/</url>
      
        <content type="html"><![CDATA[<ul><li>引子</li><li>数字</li><li>字符串</li><li>列表</li><li>元组</li><li>字典</li><li>集合</li><li>数据类型总结</li></ul><a id="more"></a><h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>1 什么是数据？</p><p>x=10，10是我们要存储的数据</p><p>2 为何数据要分不同的类型</p><p>数据是用来表示状态的，不同的状态就应该用不同的类型的数据去表示</p><p>3 数据类型</p><ul><li>数字（整形，长整形，浮点型，复数）</li><li>字符串</li><li>字节串：在介绍字符编码时介绍字节bytes类型</li><li>列表</li><li>元组</li><li>字典</li><li>集合</li></ul><h1 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h1><p>整型与浮点型</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#整型int</span></span><br><span class="line">　　<span class="comment">#作用：年纪，等级，身份证号，qq号等整型数字相关</span></span><br><span class="line">　　<span class="comment">#定义：</span></span><br><span class="line">　　　　age=<span class="number">10</span> <span class="comment">#本质age=int(10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#浮点型float</span></span><br><span class="line">　　<span class="comment">#作用：薪资，身高，体重，体质参数等浮点数相关</span></span><br><span class="line"></span><br><span class="line">    salary=<span class="number">3000.3</span> <span class="comment">#本质salary=float(3000.3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#二进制，十进制，八进制，十六进制</span></span><br></pre></td></tr></table></figure><p>其他数字类型（了解）</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#长整形（了解）</span></span><br><span class="line">    在python2中（python3中没有长整形的概念）：</span><br><span class="line">    &gt;&gt;&gt; num=<span class="number">2L</span></span><br><span class="line">    &gt;&gt;&gt; type(num)</span><br><span class="line">    &lt;type <span class="string">'long'</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#复数（了解）</span></span><br><span class="line">    &gt;&gt;&gt; x=<span class="number">1</span><span class="number">-2j</span></span><br><span class="line">    &gt;&gt;&gt; x.real</span><br><span class="line">    <span class="number">1.0</span></span><br><span class="line">    &gt;&gt;&gt; x.imag</span><br><span class="line">    <span class="number">-2.0</span></span><br></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：名字，性别，国籍，地址等描述信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义：在单引号\双引号\三引号内，由一串字符组成</span></span><br><span class="line">name=<span class="string">'egon'</span></span><br></pre></td></tr></table></figure><p>需要掌握的操作</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、strip,lstrip,rstrip</span></span><br><span class="line"><span class="comment">#2、lower,upper</span></span><br><span class="line"><span class="comment">#3、startswith,endswith</span></span><br><span class="line"><span class="comment">#4、format的三种玩法</span></span><br><span class="line"><span class="comment">#5、split,rsplit</span></span><br><span class="line"><span class="comment">#6、join</span></span><br><span class="line"><span class="comment">#7、replace</span></span><br><span class="line"><span class="comment">#8、isdigit</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#strip</span></span><br><span class="line">name=<span class="string">'*egon**'</span></span><br><span class="line">print(name.strip(<span class="string">'*'</span>))</span><br><span class="line">print(name.lstrip(<span class="string">'*'</span>))</span><br><span class="line">print(name.rstrip(<span class="string">'*'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#lower,upper</span></span><br><span class="line">name=<span class="string">'egon'</span></span><br><span class="line">print(name.lower())</span><br><span class="line">print(name.upper())</span><br><span class="line"></span><br><span class="line"><span class="comment">#startswith,endswith</span></span><br><span class="line">name=<span class="string">'alex_SB'</span></span><br><span class="line">print(name.endswith(<span class="string">'SB'</span>))</span><br><span class="line">print(name.startswith(<span class="string">'alex'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#format的三种玩法</span></span><br><span class="line">res=<span class="string">'&#123;&#125; &#123;&#125; &#123;&#125;'</span>.format(<span class="string">'egon'</span>,<span class="number">18</span>,<span class="string">'male'</span>)</span><br><span class="line">res=<span class="string">'&#123;1&#125; &#123;0&#125; &#123;1&#125;'</span>.format(<span class="string">'egon'</span>,<span class="number">18</span>,<span class="string">'male'</span>)</span><br><span class="line">res=<span class="string">'&#123;name&#125; &#123;age&#125; &#123;sex&#125;'</span>.format(sex=<span class="string">'male'</span>,name=<span class="string">'egon'</span>,age=<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#split</span></span><br><span class="line">name=<span class="string">'root:x:0:0::/root:/bin/bash'</span></span><br><span class="line">print(name.split(<span class="string">':'</span>)) <span class="comment">#默认分隔符为空格</span></span><br><span class="line">name=<span class="string">'C:/a/b/c/d.txt'</span> <span class="comment">#只想拿到顶级目录</span></span><br><span class="line">print(name.split(<span class="string">'/'</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">name=<span class="string">'a|b|c'</span></span><br><span class="line">print(name.rsplit(<span class="string">'|'</span>,<span class="number">1</span>)) <span class="comment">#从右开始切分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#join</span></span><br><span class="line">tag=<span class="string">' '</span></span><br><span class="line">print(tag.join([<span class="string">'egon'</span>,<span class="string">'say'</span>,<span class="string">'hello'</span>,<span class="string">'world'</span>])) <span class="comment">#可迭代对象必须都是字符串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#replace</span></span><br><span class="line">name=<span class="string">'alex say :i have one tesla,my name is alex'</span></span><br><span class="line">print(name.replace(<span class="string">'alex'</span>,<span class="string">'SB'</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#isdigit：可以判断bytes和unicode类型,是最常用的用于于判断字符是否为"数字"的方法</span></span><br><span class="line">age=input(<span class="string">'&gt;&gt;: '</span>)</span><br><span class="line">print(age.isdigit())</span><br></pre></td></tr></table></figure><p>其他操作（了解即可）</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、find,rfind,index,rindex,count</span></span><br><span class="line"><span class="comment">#2、center,ljust,rjust,zfill</span></span><br><span class="line"><span class="comment">#3、expandtabs</span></span><br><span class="line"><span class="comment">#4、captalize,swapcase,title</span></span><br><span class="line"><span class="comment">#5、is数字系列</span></span><br><span class="line"><span class="comment">#6、is其他</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#find,rfind,index,rindex,count</span></span><br><span class="line">name=<span class="string">'egon say hello'</span></span><br><span class="line">print(name.find(<span class="string">'o'</span>,<span class="number">1</span>,<span class="number">3</span>)) <span class="comment">#顾头不顾尾,找不到则返回-1不会报错,找到了则显示索引</span></span><br><span class="line"><span class="comment"># print(name.index('e',2,4)) #同上,但是找不到会报错</span></span><br><span class="line">print(name.count(<span class="string">'e'</span>,<span class="number">1</span>,<span class="number">3</span>)) <span class="comment">#顾头不顾尾,如果不指定范围则查找所有</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#center,ljust,rjust,zfill</span></span><br><span class="line">name=<span class="string">'egon'</span></span><br><span class="line">print(name.center(<span class="number">30</span>,<span class="string">'-'</span>))</span><br><span class="line">print(name.ljust(<span class="number">30</span>,<span class="string">'*'</span>))</span><br><span class="line">print(name.rjust(<span class="number">30</span>,<span class="string">'*'</span>))</span><br><span class="line">print(name.zfill(<span class="number">50</span>)) <span class="comment">#用0填充</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#expandtabs</span></span><br><span class="line">name=<span class="string">'egon\thello'</span></span><br><span class="line">print(name)</span><br><span class="line">print(name.expandtabs(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#captalize,swapcase,title</span></span><br><span class="line">print(name.capitalize()) <span class="comment">#首字母大写</span></span><br><span class="line">print(name.swapcase()) <span class="comment">#大小写翻转</span></span><br><span class="line">msg=<span class="string">'egon say hi'</span></span><br><span class="line">print(msg.title()) <span class="comment">#每个单词的首字母大写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#is数字系列</span></span><br><span class="line"><span class="comment">#在python3中</span></span><br><span class="line">num1=<span class="string">b'4'</span> <span class="comment">#bytes</span></span><br><span class="line">num2=<span class="string">u'4'</span> <span class="comment">#unicode,python3中无需加u就是unicode</span></span><br><span class="line">num3=<span class="string">'四'</span> <span class="comment">#中文数字</span></span><br><span class="line">num4=<span class="string">'Ⅳ'</span> <span class="comment">#罗马数字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#isdigt:bytes,unicode</span></span><br><span class="line">print(num1.isdigit()) <span class="comment">#True</span></span><br><span class="line">print(num2.isdigit()) <span class="comment">#True</span></span><br><span class="line">print(num3.isdigit()) <span class="comment">#False</span></span><br><span class="line">print(num4.isdigit()) <span class="comment">#False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#isdecimal:uncicode</span></span><br><span class="line"><span class="comment">#bytes类型无isdecimal方法</span></span><br><span class="line">print(num2.isdecimal()) <span class="comment">#True</span></span><br><span class="line">print(num3.isdecimal()) <span class="comment">#False</span></span><br><span class="line">print(num4.isdecimal()) <span class="comment">#False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#isnumberic:unicode,中文数字,罗马数字</span></span><br><span class="line"><span class="comment">#bytes类型无isnumberic方法</span></span><br><span class="line">print(num2.isnumeric()) <span class="comment">#True</span></span><br><span class="line">print(num3.isnumeric()) <span class="comment">#True</span></span><br><span class="line">print(num4.isnumeric()) <span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#三者不能判断浮点数</span></span><br><span class="line">num5=<span class="string">'4.3'</span></span><br><span class="line">print(num5.isdigit())</span><br><span class="line">print(num5.isdecimal())</span><br><span class="line">print(num5.isnumeric())</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">总结:</span></span><br><span class="line"><span class="string">    最常用的是isdigit,可以判断bytes和unicode类型,这也是最常见的数字应用场景</span></span><br><span class="line"><span class="string">    如果要判断中文数字或罗马数字,则需要用到isnumeric</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#is其他</span></span><br><span class="line">print(<span class="string">'===&gt;'</span>)</span><br><span class="line">name=<span class="string">'egon123'</span></span><br><span class="line">print(name.isalnum()) <span class="comment">#字符串由字母或数字组成</span></span><br><span class="line">print(name.isalpha()) <span class="comment">#字符串只由字母组成</span></span><br><span class="line"></span><br><span class="line">print(name.isidentifier())</span><br><span class="line">print(name.islower())</span><br><span class="line">print(name.isupper())</span><br><span class="line">print(name.isspace())</span><br><span class="line">print(name.istitle())</span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：多个装备，多个爱好，多门课程，多个女朋友等</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义：[]内可以有多个任意类型的值，逗号分隔</span></span><br><span class="line">my_girl_friends=[<span class="string">'alex'</span>,<span class="string">'wupeiqi'</span>,<span class="string">'yuanhao'</span>,<span class="number">4</span>,<span class="number">5</span>] <span class="comment">#本质my_girl_friends=list([...])</span></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">l=list(<span class="string">'abc'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ps:反向步长</span></span><br><span class="line">l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#正向步长</span></span><br><span class="line">l[<span class="number">0</span>:<span class="number">3</span>:<span class="number">1</span>] <span class="comment">#[1, 2, 3]</span></span><br><span class="line"><span class="comment">#反向步长</span></span><br><span class="line">l[<span class="number">2</span>::<span class="number">-1</span>] <span class="comment">#[3, 2, 1]</span></span><br><span class="line"><span class="comment">#列表翻转</span></span><br><span class="line">l[::<span class="number">-1</span>] <span class="comment">#[6, 5, 4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure><p>　　</p><h1 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：存多个值，对比列表来说，元组不可变（是可以当做字典的key的），主要是用来读</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义：与列表类型比，只不过[]换成()</span></span><br><span class="line">age=(<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>)本质age=tuple((<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>))</span><br></pre></td></tr></table></figure><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：存多个值,key-value存取，取值速度快</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义：key必须是不可变类型，value可以是任意类型</span></span><br><span class="line">info=&#123;<span class="string">'name'</span>:<span class="string">'egon'</span>,<span class="string">'age'</span>:<span class="number">18</span>,<span class="string">'sex'</span>:<span class="string">'male'</span>&#125; <span class="comment">#本质info=dict(&#123;....&#125;)</span></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">info=dict(name=<span class="string">'egon'</span>,age=<span class="number">18</span>,sex=<span class="string">'male'</span>)</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">info=dict([[<span class="string">'name'</span>,<span class="string">'egon'</span>],(<span class="string">'age'</span>,<span class="number">18</span>)])</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">&#123;&#125;.fromkeys((<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="string">'sex'</span>),<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作用：去重，关系运算，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义：</span></span><br><span class="line">            知识点回顾</span><br><span class="line">            可变类型是不可hash类型</span><br><span class="line">            不可变类型是可hash类型</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义集合:</span></span><br><span class="line">            集合：可以包含多个元素，用逗号分割，</span><br><span class="line">            集合的元素遵循三个原则：</span><br><span class="line">             <span class="number">1</span>：每个元素必须是不可变类型(可hash，可作为字典的key)</span><br><span class="line">             <span class="number">2</span>:没有重复的元素</span><br><span class="line">             <span class="number">3</span>：无序</span><br><span class="line"></span><br><span class="line">注意集合的目的是将不同的值存放到一起，不同的集合间用来做关系运算，无需纠结于集合中单个值</span><br></pre></td></tr></table></figure><h1 id="数据类型总结"><a href="#数据类型总结" class="headerlink" title="数据类型总结"></a>数据类型总结</h1><p>按存储空间的占用分（从低到高）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数字</span><br><span class="line">字符串</span><br><span class="line">集合：无序，即无序存索引相关信息</span><br><span class="line">元组：有序，需要存索引相关信息，不可变</span><br><span class="line">列表：有序，需要存索引相关信息，可变，需要处理数据的增删改</span><br><span class="line">字典：无序，需要存key与value映射的相关信息，可变，需要处理数据的增删改</span><br></pre></td></tr></table></figure><p>按存值个数区分</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>标量／原子类型</td><td>数字，字符串</td></tr><tr><td>容器类型</td><td>列表，元组，字典</td></tr></tbody></table><p>按可变不可变区分</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>可变</td><td>列表，字典</td></tr><tr><td>不可变</td><td>数字，字符串，元组</td></tr></tbody></table><p>按访问顺序区分</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>直接访问</td><td>数字</td></tr><tr><td>顺序访问（序列类型）</td><td>字符串，列表，元组</td></tr><tr><td>key值访问（映射类型）</td><td>字典</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python——部分语法</title>
      <link href="/2020/07/12/python01/"/>
      <url>/2020/07/12/python01/</url>
      
        <content type="html"><![CDATA[<ul><li>变量</li><li>用户与程序交互</li><li>基本数据类型</li><li>格式化输出</li><li>基本运算符</li><li>流程控制之if…else</li><li>流程控制之while循环</li><li>流程控制之for循环</li></ul><a id="more"></a><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h2><p>变量即变化的量，核心是“变”与“量”二字，变即变化，量即衡量状态。</p><h2 id="为什么要有变量"><a href="#为什么要有变量" class="headerlink" title="为什么要有变量"></a>为什么要有变量</h2><p>程序执行的本质就是一系列状态的变化，变是程序执行的直接体现，所以我们需要有一种机制能够反映或者说是保存下来程序执行时状态以及状态的变化。</p><p>比如：<br>    英雄的等级为1，打怪升级(变)为10<br>    僵尸的存活状态True，被植物打死了，于是变为False<br>    人的名字为egon，也可以修改为Egon</p><p>变量名(相当于门牌号，指向值所在的空间)，等号，变量值<br>name=’Egon’<br>sex=’male’<br>age=18<br>level=10</p><h2 id="变量的定义规范"><a href="#变量的定义规范" class="headerlink" title="变量的定义规范"></a>变量的定义规范</h2><ol><li>变量名只能是 字母、数字或下划线的任意组合</li><li>变量名的第一个字符不能是数字</li><li>关键字不能声明为变量名[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</li></ol><h2 id="定义方式"><a href="#定义方式" class="headerlink" title="定义方式"></a>定义方式</h2><ol><li>驼峰体<br> AgeOfOldboy = 56<br> NumberOfStudents = 80</li><li>下划线(推荐使用)<br> age_of_oldboy = 56<br> number_of_students = 80</li></ol><p>定义变量名不好的方式</p><ol><li>变量名为中文、拼音</li><li>变量名过长</li><li>变量名词不达意</li></ol><p>定义变量会有：id，type，value</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 等号比较的是value，</span></span><br><span class="line"><span class="comment">#2 is比较的是id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#强调：</span></span><br><span class="line"><span class="comment">#1. id相同，意味着type和value必定相同</span></span><br><span class="line"><span class="comment">#2. value相同type肯定相同，但id可能不同,如下</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="string">'Info Egon:18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=<span class="string">'Info Egon:18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>id(x)</span><br><span class="line"><span class="number">4376607152</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>id(y)</span><br><span class="line"><span class="number">4376607408</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x == y</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x <span class="keyword">is</span> y</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、在交互式模式下</span></span><br><span class="line"><span class="comment">#Python实现int的时候有个小整数池。为了避免因创建相同的值而重复申请内存空间所带来的效率问题， Python解释器会在启动时创建出小整数池，范围是[-5,256]，该范围内的小整数对象是全局解释器范围内被重复使用，永远不会被GC回收</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每创建一个-5到256之间的整数，都是直接从这个池里直接拿走一个值，例如</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>id(y)</span><br><span class="line"><span class="number">4297641184</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x+=<span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>id(x)</span><br><span class="line"><span class="number">4297641184</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在pycharm中</span></span><br><span class="line"><span class="comment">#但在pycharm中运行python程序，pycharm出于对性能的考虑，会扩大小整数池的范围，其他的字符串等不可变类型也都包含在内一便采用相同的方式处理了，我们只需要记住这是一种优化机制，至于范围到底多大，无需细究</span></span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量即指不变的量，如pai 3.141592653…, 或在程序运行过程中不会改变的量<br>举例，假如老男孩老师的年龄会变，那这就是个变量，但在一些情况下，他的年龄不会变了，那就是常量。在Python中没有一个专门的语法代表常量，程序员约定俗成用变量名全部大写代表常量<br>AGE_OF_OLDBOY = 56</p><p>ps:在c语言中有专门的常量定义语法，const int count = 60;一旦定义为常量，更改即会报错</p><h1 id="用户与程序交互"><a href="#用户与程序交互" class="headerlink" title="用户与程序交互"></a>用户与程序交互</h1><p>古时候，我们去银行取钱，需要有一个银行业务员等着我们把自己的账号密码输入给他，然后他去进行验证，成功后，我们再将取款金额输入/告诉他</p><p>骄傲的现代人，会为客户提供一台ATM机（就是一台计算机），让ATM机跟用户交互，从而取代人力。然而机器是死的，我们必须为其编写程序来运行，这就要求我们的编程语言中能够有一种能与用户交互，接收用户输入数据的机制</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在python3中</span></span><br><span class="line">input：用户输入任何值，都存成字符串类型</span><br><span class="line"></span><br><span class="line"><span class="comment">#在python2中</span></span><br><span class="line">input：用户输入什么类型，就存成什么类型</span><br><span class="line">raw_input：等于python3的input</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>随着学习的深入，用不了多久，你就可以写复杂的上千甚至上万行的代码啦，有些代码你花了很久写出来，过了些天再回去看，发现竟然看不懂了，这太正常了。 另外，你以后在工作中会发现，一个项目多是由几个甚至几十个开发人员一起做，你要调用别人写的代码，别人也要用你的，如果代码不加注释，你自己都看不懂，更别说别人了，这产会挨打的。所以为了避免这种尴尬的事情发生，一定要增加你代码的可读性。</p><p>代码注释分单行和多行注释， 单行注释用#，多行注释可以用三对双引号””” “””</p><p>代码注释的原则：</p><ol><li>不用全部加注释，只需要在自己觉得重要或不好理解的部分加注释即可</li><li>注释可以用中文或英文，但不要用拼音</li></ol><h1 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h1><h2 id="什么是数据？为何要有多种类型的数据？"><a href="#什么是数据？为何要有多种类型的数据？" class="headerlink" title="什么是数据？为何要有多种类型的数据？"></a>什么是数据？为何要有多种类型的数据？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#数据即变量的值，如age&#x3D;18，18则是我们保存的数据。</span><br><span class="line">#变量的是用来反映&#x2F;保持状态以及状态变化的，毫无疑问针对不同的状态就应该用不同类型的数据去标识</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">概括地说，编程语言的划分方式有以下三种</span><br><span class="line"></span><br><span class="line">1、编译型or解释型</span><br><span class="line"></span><br><span class="line">2、强类型or弱类型</span><br><span class="line">2.1 强类型语言： 数据类型不可以被忽略的语言</span><br><span class="line">即变量的数据类型一旦被定义，那就不会再改变，除非进行强转。</span><br><span class="line">在python中，例如：name &#x3D; &#39;egon&#39;，这个变量name在被赋值的那一刻，数据类型就被确定死了，是字符型，值为&#39;egon&#39;。</span><br><span class="line"></span><br><span class="line">2.2 弱类型语言：数据类型可以被忽略的语言</span><br><span class="line">比如linux中的shell中定义一个变量，是随着调用方式的不同，数据类型可随意切换的那种。</span><br><span class="line"></span><br><span class="line">3、动态型or静态型</span><br><span class="line">3.1 动态语言 ：运行时才进行数据类型检查</span><br><span class="line">即在变量赋值时，就确定了变量的数据类型，不用事先给变量指定数据类型</span><br><span class="line"></span><br><span class="line">3.2 静态语言：需要事先给变量进行数据类型定义</span><br><span class="line"></span><br><span class="line">所以综上所述，Python是一门解释型的强类型动态语言</span><br></pre></td></tr></table></figure><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#int整型</span><br><span class="line">定义：age&#x3D;10 #age&#x3D;int(10)</span><br><span class="line">用于标识：年龄，等级，身份证号，qq号，个数</span><br><span class="line"></span><br><span class="line">#float浮点型</span><br><span class="line">定义：salary&#x3D;3.1 #salary&#x3D;float(3.1)</span><br><span class="line">用于标识：工资，身高，体重，</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#int（整型）</span></span><br><span class="line"><span class="comment">#在32位机器上，整数的位数为32位，取值范围为-2**31～2**31-1，即-2147483648～2147483647</span></span><br><span class="line"><span class="comment">#在64位系统上，整数的位数为64位，取值范围为-2**63～2**63-1，即-9223372036854775808～9223372036854775807</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#long（长整型）</span></span><br><span class="line"><span class="comment">#跟C语言不同，Python的长整数没有指定位宽，即：Python没有限制长整数数值的大小，但实际上由于机器内存有限，我们使用的长整数数值不可能无限大。</span></span><br><span class="line"><span class="comment">#注意，自从Python2.2起，如果整数发生溢出，Python会自动将整数数据转换为长整数，所以如今在长整数数据后面不加字母L也不会导致严重后果了。</span></span><br><span class="line"><span class="comment">#注意：在Python3里不再有long类型了，全都是int</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a= <span class="number">2</span>**<span class="number">64</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(a)  <span class="comment">#type()是查看数据类型的方法</span></span><br><span class="line">&lt;type <span class="string">'long'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">2</span>**<span class="number">60</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(b)</span><br><span class="line">&lt;type <span class="string">'int'</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#complex复数型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=<span class="number">1</span><span class="number">-2j</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.imag</span><br><span class="line"><span class="number">-2.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.real</span><br><span class="line"><span class="number">1.0</span></span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在python中，加了引号的字符就是字符串类型，python并没有字符类型。</span><br><span class="line">定义：name&#x3D;&#39;egon&#39; #name&#x3D;str(&#39;egon&#39;)</span><br><span class="line">用于标识：描述性的内容，如姓名，性别，国籍，种族</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单引号、双引号、多引号区别</span></span><br><span class="line"><span class="comment">#单双引号没有任何区别，只有下面这种情况，需要考虑单双的配合</span></span><br><span class="line">msg = <span class="string">"My name is Egon , I'm 18 years old!"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#多引号什么作用呢？作用就是多行字符串必须用多引号</span></span><br><span class="line">msg = <span class="string">'''</span></span><br><span class="line"><span class="string">鹅鹅鹅，</span></span><br><span class="line"><span class="string">曲项向天歌，</span></span><br><span class="line"><span class="string">白毛浮绿水，</span></span><br><span class="line"><span class="string">红掌拨清波。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数字可以进行加减乘除等运算，字符串也能，但只能进行"相加"和"相乘"运算。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name=<span class="string">'egon'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age=<span class="string">'18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name+age <span class="comment">#相加其实就是简单拼接</span></span><br><span class="line"><span class="string">'egon18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name*<span class="number">5</span></span><br><span class="line"><span class="string">'egonegonegonegonegon'</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#注意1：字符串相加的效率不高</span><br><span class="line">字符串1+字符串3，并不会在字符串1的基础上加字符串2，而是申请一个全新的内存空间存入字符串1和字符串3，相当字符串1与字符串3的空间被复制了一次，</span><br><span class="line"></span><br><span class="line">#注意2：只能字符串加字符串，不能字符串加其他类型</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在[]内用逗号分隔，可以存放n个任意类型的值</span></span><br><span class="line"><span class="comment">#定义：</span></span><br><span class="line">students=[<span class="string">'egon'</span>,<span class="string">'alex'</span>,<span class="string">'wupeiqi'</span>,] <span class="comment">#students=list(['egon','alex','wupeiqi',])</span></span><br><span class="line"><span class="comment">#用于标识：存储多个值的情况，比如一个人有多个爱好</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#存放多个学生的信息：姓名，年龄，爱好</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>students_info=[[<span class="string">'egon'</span>,<span class="number">18</span>,[<span class="string">'play'</span>,]],[<span class="string">'alex'</span>,<span class="number">18</span>,[<span class="string">'play'</span>,<span class="string">'sleep'</span>]]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>students_info[<span class="number">0</span>][<span class="number">2</span>][<span class="number">0</span>] <span class="comment">#取出第一个学生的第一个爱好</span></span><br><span class="line"><span class="string">'play'</span></span><br></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为何还要用字典？</span></span><br><span class="line"><span class="comment">#存放一个人的信息：姓名，性别，年龄，很明显是多个值，既然是存多个值，我们完全可以基于刚刚学习的列表去存放，如下</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>info=[<span class="string">'egon'</span>,<span class="string">'male'</span>,<span class="number">18</span>]</span><br><span class="line"><span class="comment">#定义列表的目的不单单是为了存，还要考虑取值，如果我想取出这个人的年龄，可以用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>info[<span class="number">2</span>]</span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="comment">#但这是基于我们已经知道在第3个位置存放的是年龄的前提下，我们才知道索引2对应的是年龄</span></span><br><span class="line"><span class="comment">#即：</span></span><br><span class="line">        <span class="comment">#name, sex, age</span></span><br><span class="line">info=[<span class="string">'egon'</span>,<span class="string">'male'</span>,<span class="number">18</span>]</span><br><span class="line"><span class="comment">#而这完全只是一种假设，并没有真正意义上规定第三个位置存放的是年龄，于是我们需要寻求一种，即可以存放多个任意类型的值，又可以硬性规定值的映射关系的类型，比如key=value，这就用到了字典</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在&#123;&#125;内用逗号分隔，可以存放多个key:value的值，value可以是任意类型</span></span><br><span class="line"><span class="comment">#定义：</span></span><br><span class="line">info=&#123;<span class="string">'name'</span>:<span class="string">'egon'</span>,<span class="string">'age'</span>:<span class="number">18</span>,<span class="string">'sex'</span>:<span class="number">18</span>&#125; <span class="comment">#info=dict(&#123;'name':'egon','age':18,'sex':18&#125;)</span></span><br><span class="line"><span class="comment">#用于标识：存储多个值的情况，每个值都有唯一一个对应的key，可以更为方便高效地取值</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">info=&#123;</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'egon'</span>,</span><br><span class="line">    <span class="string">'hobbies'</span>:[<span class="string">'play'</span>,<span class="string">'sleep'</span>],</span><br><span class="line">    <span class="string">'company_info'</span>:&#123;</span><br><span class="line">        <span class="string">'name'</span>:<span class="string">'Oldboy'</span>,</span><br><span class="line">        <span class="string">'type'</span>:<span class="string">'education'</span>,</span><br><span class="line">        <span class="string">'emp_num'</span>:<span class="number">40</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">print(info[<span class="string">'company_info'</span>][<span class="string">'name'</span>]) <span class="comment">#取公司名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">students=[</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'alex'</span>,<span class="string">'age'</span>:<span class="number">38</span>,<span class="string">'hobbies'</span>:[<span class="string">'play'</span>,<span class="string">'sleep'</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'egon'</span>,<span class="string">'age'</span>:<span class="number">18</span>,<span class="string">'hobbies'</span>:[<span class="string">'read'</span>,<span class="string">'sleep'</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'wupeiqi'</span>,<span class="string">'age'</span>:<span class="number">58</span>,<span class="string">'hobbies'</span>:[<span class="string">'music'</span>,<span class="string">'read'</span>,<span class="string">'sleep'</span>]&#125;,</span><br><span class="line">]</span><br><span class="line">print(students[<span class="number">1</span>][<span class="string">'hobbies'</span>][<span class="number">1</span>]) <span class="comment">#取第二个学生的第二个爱好</span></span><br></pre></td></tr></table></figure><h2 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#布尔值，一个True一个False</span></span><br><span class="line"><span class="comment">#计算机俗称电脑，即我们编写程序让计算机运行时，应该是让计算机无限接近人脑，或者说人脑能干什么，计算机就应该能干什么，人脑的主要作用是数据运行与逻辑运算，此处的布尔类型就模拟人的逻辑运行，即判断一个条件成立时，用True标识，不成立则用False标识</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="number">5</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &gt; b <span class="comment">#不成立就是False,即假</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &lt; b <span class="comment">#成立就是True, 即真</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#接下来就可以根据条件结果来干不同的事情了：</span></span><br><span class="line"><span class="keyword">if</span> a &gt; b</span><br><span class="line">   print(a <span class="keyword">is</span> bigger than b )</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   print(a <span class="keyword">is</span> smaller than b )</span><br><span class="line"><span class="comment">#上面是伪代码，但意味着，计算机已经可以像人脑一样根据判断结果不同，来执行不同的动作。</span></span><br></pre></td></tr></table></figure><h2 id="布尔类型的重点知识！！！："><a href="#布尔类型的重点知识！！！：" class="headerlink" title="布尔类型的重点知识！！！："></a>布尔类型的重点知识！！！：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#所有数据类型都自带布尔值</span><br><span class="line">1、None，0，空（空字符串，空列表，空字典等）三种情况下布尔值为False</span><br><span class="line">2、其余均为真</span><br></pre></td></tr></table></figure><h2 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h2><ol><li><p>可变类型：在id不变的情况下，value可以变，则称为可变类型，如列表，字典</p></li><li><p>不可变类型：value一旦改变，id也改变，则称为不可变类型（id变，意味着创建了新的内存空间）</p></li></ol><h1 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h1><p>程序中经常会有这样场景：要求用户输入信息，然后打印成固定的格式</p><p>比如要求用户输入用户名和年龄，然后打印如下格式：</p><p>My name is xxx，my age is xxx.</p><p>很明显，用逗号进行字符串拼接，只能把用户输入的名字和年龄放到末尾，无法放到指定的xxx位置，而且数字也必须经过str(数字)的转换才能与字符串进行拼接。</p><p>这就用到了占位符，如：%s、%d</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#%s字符串占位符：可以接收字符串，也可接收数字</span></span><br><span class="line">print(<span class="string">'My name is %s,my age is %s'</span> %(<span class="string">'egon'</span>,<span class="number">18</span>))</span><br><span class="line"><span class="comment">#%d数字占位符：只能接收数字</span></span><br><span class="line">print(<span class="string">'My name is %s,my age is %d'</span> %(<span class="string">'egon'</span>,<span class="number">18</span>))</span><br><span class="line">print(<span class="string">'My name is %s,my age is %d'</span> %(<span class="string">'egon'</span>,<span class="string">'18'</span>)) <span class="comment">#报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#接收用户输入，打印成指定格式</span></span><br><span class="line">name=input(<span class="string">'your name: '</span>)</span><br><span class="line">age=input(<span class="string">'your age: '</span>) <span class="comment">#用户输入18,会存成字符串18,无法传给%d</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'My name is %s,my age is %s'</span> %(name,age))</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：</span></span><br><span class="line"><span class="comment">#print('My name is %s,my age is %d' %(name,age)) #age为字符串类型,无法传给%d,所以会报错</span></span><br></pre></td></tr></table></figure><h1 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h1><p>计算机可以进行的运算有很多种，运算按种类可分为算数运算、比较运算、逻辑运算、赋值运算、成员运算、身份运算、位运算</p><ol><li><p>算数运算</p><p> 以下假设变量：a=10，b=20</p><p> <img src="/images/py1.png" alt=""></p></li><li><p>比较运算</p><p> 以下假设变量：a=10，b=20</p><p> <img src="/images/py2.png" alt=""></p></li><li><p>赋值运算</p><p> 以下假设变量：a=10，b=20</p><p> <img src="/images/py3.png" alt=""></p></li><li><p>逻辑运算</p><p> <img src="/images/py4.png" alt=""></p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1、三者的优先级关系：not&gt;and&gt;or，同一优先级默认从左往右计算。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span>&gt;<span class="number">4</span> <span class="keyword">and</span> <span class="number">4</span>&gt;<span class="number">3</span> <span class="keyword">or</span> <span class="number">1</span>==<span class="number">3</span> <span class="keyword">and</span> <span class="string">'x'</span> == <span class="string">'x'</span> <span class="keyword">or</span> <span class="number">3</span> &gt;<span class="number">3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2、最好使用括号来区别优先级，其实意义与上面的一样</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">原理为：</span></span><br><span class="line"><span class="string">(1) not的优先级最高，就是把紧跟其后的那个条件结果取反，所以not与紧跟其后的条件不可分割</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(2) 如果语句中全部是用and连接，或者全部用or连接，那么按照从左到右的顺序依次计算即可</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(3) 如果语句中既有and也有or，那么先用括号把and的左右两个条件给括起来，然后再进行运算</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">3</span>&gt;<span class="number">4</span> <span class="keyword">and</span> <span class="number">4</span>&gt;<span class="number">3</span>) <span class="keyword">or</span> (<span class="number">1</span>==<span class="number">3</span> <span class="keyword">and</span> <span class="string">'x'</span> == <span class="string">'x'</span>) <span class="keyword">or</span> <span class="number">3</span> &gt;<span class="number">3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、短路运算：逻辑运算的结果一旦可以确定，那么就以当前处计算到的值作为最终结果返回</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> <span class="keyword">and</span> <span class="number">0</span> <span class="keyword">or</span> <span class="string">''</span> <span class="keyword">and</span> <span class="number">0</span> <span class="keyword">or</span> <span class="string">'abc'</span> <span class="keyword">or</span> <span class="string">'egon'</span> == <span class="string">'dsb'</span> <span class="keyword">and</span> <span class="number">333</span> <span class="keyword">or</span> <span class="number">10</span> &gt; <span class="number">4</span></span><br><span class="line">我们用括号来明确一下优先级</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">10</span> <span class="keyword">and</span> <span class="number">0</span>) <span class="keyword">or</span> (<span class="string">''</span> <span class="keyword">and</span> <span class="number">0</span>) <span class="keyword">or</span> <span class="string">'abc'</span> <span class="keyword">or</span> (<span class="string">'egon'</span> == <span class="string">'dsb'</span> <span class="keyword">and</span> <span class="number">333</span>) <span class="keyword">or</span> <span class="number">10</span> &gt; <span class="number">4</span></span><br><span class="line">短路：       <span class="number">0</span>      <span class="string">''</span>            <span class="string">'abc'</span></span><br><span class="line">            假     假              真</span><br><span class="line"></span><br><span class="line">返回：                            <span class="string">'abc'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4、短路运算面试题：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span> <span class="keyword">or</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span> <span class="keyword">and</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="number">1</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="身份运算"><a href="#身份运算" class="headerlink" title="身份运算"></a>身份运算</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#is比较的是id</span></span><br><span class="line"><span class="comment">#而==比较的是值</span></span><br></pre></td></tr></table></figure><h1 id="流程控制之if…else"><a href="#流程控制之if…else" class="headerlink" title="流程控制之if…else"></a>流程控制之if…else</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果：成绩&gt;=90，那么：优秀</span></span><br><span class="line"><span class="comment"># 如果成绩&gt;=80且&lt;90,那么：良好</span></span><br><span class="line"><span class="comment"># 如果成绩&gt;=70且&lt;80,那么：普通</span></span><br><span class="line"><span class="comment"># 其他情况：很差</span></span><br><span class="line"></span><br><span class="line">score=input(<span class="string">'&gt;&gt;: '</span>)</span><br><span class="line">score=int(score)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">'优秀'</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">'良好'</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</span><br><span class="line">    print(<span class="string">'普通'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'很差'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="keyword">if</span> 条件<span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">　　　　缩进的代码块</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">elif</span> 条件<span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">　　　　缩进的代码块</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">elif</span> 条件<span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">　　　　缩进的代码块</span><br><span class="line"></span><br><span class="line">　　......</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">else</span>:　　</span><br><span class="line"></span><br><span class="line">　　　　缩进的代码块</span><br></pre></td></tr></table></figure><h1 id="流程控制之while循环"><a href="#流程控制之while循环" class="headerlink" title="流程控制之while循环"></a>流程控制之while循环</h1><ol><li><p>为何要用循环</p><p> 如何做到不用写重复代码又能让程序重复一段代码多次呢？ 循环语句</p></li><li><p>条件循环：while，语法如下</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件:</span><br><span class="line">    <span class="comment"># 循环体</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果条件为真，那么循环体则执行，执行完毕后再次循环，重新判断条件。。。</span></span><br><span class="line">    <span class="comment"># 如果条件为假，那么循环体不执行,循环终止</span></span><br></pre></td></tr></table></figure> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印0-10</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">10</span>:</span><br><span class="line">    print(<span class="string">'loop'</span>,count)</span><br><span class="line">    count+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打印0-10之间的偶数</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> count%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'loop'</span>,count)</span><br><span class="line">    count+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打印0-10之间的奇数</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> count%<span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'loop'</span>,count)</span><br><span class="line">    count+=<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>死循环</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">'count'</span>,num)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    num+=<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>循环嵌套与tag</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    　　tag=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    　　<span class="keyword">while</span> tag:</span><br><span class="line"></span><br><span class="line">    　　　　......</span><br><span class="line"></span><br><span class="line">    　　　　<span class="keyword">while</span> tag:</span><br><span class="line"></span><br><span class="line">    　　　　　　........</span><br><span class="line"></span><br><span class="line">    　　　　　　<span class="keyword">while</span> tag:</span><br><span class="line"></span><br><span class="line">    　　　　　　　　tag=<span class="literal">False</span></span><br></pre></td></tr></table></figure> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#练习，要求如下：</span></span><br><span class="line">    <span class="number">1</span> 循环验证用户输入的用户名与密码</span><br><span class="line">    <span class="number">2</span> 认证通过后，运行用户重复执行命令</span><br><span class="line">    <span class="number">3</span> 当用户输入命令为quit时，则退出整个程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#实现一：</span></span><br><span class="line">name=<span class="string">'egon'</span></span><br><span class="line">password=<span class="string">'123'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    inp_name=input(<span class="string">'用户名: '</span>)</span><br><span class="line">    inp_pwd=input(<span class="string">'密码: '</span>)</span><br><span class="line">    <span class="keyword">if</span> inp_name == name <span class="keyword">and</span> inp_pwd == password:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            cmd=input(<span class="string">'&gt;&gt;: '</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cmd:<span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> cmd == <span class="string">'quit'</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'run &lt;%s&gt;'</span> %cmd)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'用户名或密码错误'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实现二：使用tag</span></span><br><span class="line">name=<span class="string">'egon'</span></span><br><span class="line">password=<span class="string">'123'</span></span><br><span class="line"></span><br><span class="line">tag=<span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> tag:</span><br><span class="line">    inp_name=input(<span class="string">'用户名: '</span>)</span><br><span class="line">    inp_pwd=input(<span class="string">'密码: '</span>)</span><br><span class="line">    <span class="keyword">if</span> inp_name == name <span class="keyword">and</span> inp_pwd == password:</span><br><span class="line">        <span class="keyword">while</span> tag:</span><br><span class="line">            cmd=input(<span class="string">'&gt;&gt;: '</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cmd:<span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> cmd == <span class="string">'quit'</span>:</span><br><span class="line">                tag=<span class="literal">False</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            print(<span class="string">'run &lt;%s&gt;'</span> %cmd)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'用户名或密码错误'</span>)</span><br></pre></td></tr></table></figure></li><li><p>break与continue</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#break用于退出本层循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"123"</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"456"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#continue用于退出本次循环，继续下一次循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"123"</span></span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"456"</span></span><br></pre></td></tr></table></figure></li><li><p>while+else</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#与其它语言else 一般只与if 搭配不同，在Python 中还有个while ...else 语句，while 后面的else 作用是指，当while 循环正常执行完，中间没有被break 中止的话，就会执行else后面的语句</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">5</span> :</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    print(<span class="string">"Loop"</span>,count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"循环正常执行完啦"</span>)</span><br><span class="line">print(<span class="string">"-----out of while loop ------"</span>)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="comment"># Loop 1</span></span><br><span class="line"><span class="comment"># Loop 2</span></span><br><span class="line"><span class="comment"># Loop 3</span></span><br><span class="line"><span class="comment"># Loop 4</span></span><br><span class="line"><span class="comment"># Loop 5</span></span><br><span class="line"><span class="comment"># Loop 6</span></span><br><span class="line"><span class="comment"># 循环正常执行完啦</span></span><br><span class="line"><span class="comment"># -----out of while loop ------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果执行过程中被break啦，就不会执行else的语句啦</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">5</span> :</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">3</span>:<span class="keyword">break</span></span><br><span class="line">    print(<span class="string">"Loop"</span>,count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"循环正常执行完啦"</span>)</span><br><span class="line">print(<span class="string">"-----out of while loop ------"</span>)</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Loop 1</span></span><br><span class="line"><span class="comment"># Loop 2</span></span><br><span class="line"><span class="comment"># -----out of while loop ------</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="流程控制之for循环"><a href="#流程控制之for循环" class="headerlink" title="流程控制之for循环"></a>流程控制之for循环</h1><ol><li><p>迭代式循环：for，语法如下</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    　　<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line"></span><br><span class="line">    　　　　缩进的代码块</span><br></pre></td></tr></table></figure></li><li><p>break与continue（同上）</p></li><li><p>循环嵌套</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        print(<span class="string">'%s*%s=%s'</span> %(i,j,i*j),end=<span class="string">' '</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分析</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">             #max_level=5</span></span><br><span class="line"><span class="string">    *        #current_level=1，空格数=4，*号数=1</span></span><br><span class="line"><span class="string">   ***       #current_level=2,空格数=3,*号数=3</span></span><br><span class="line"><span class="string">  *****      #current_level=3,空格数=2,*号数=5</span></span><br><span class="line"><span class="string"> *******     #current_level=4,空格数=1,*号数=7</span></span><br><span class="line"><span class="string">*********    #current_level=5,空格数=0,*号数=9</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#数学表达式</span></span><br><span class="line"><span class="string">空格数=max_level-current_level</span></span><br><span class="line"><span class="string">*号数=2*current_level-1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实现</span></span><br><span class="line">max_level=<span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> current_level <span class="keyword">in</span> range(<span class="number">1</span>,max_level+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(max_level-current_level):</span><br><span class="line">        print(<span class="string">' '</span>,end=<span class="string">''</span>) <span class="comment">#在一行中连续打印多个空格</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>*current_level<span class="number">-1</span>):</span><br><span class="line">        print(<span class="string">'*'</span>,end=<span class="string">''</span>) <span class="comment">#在一行中连续打印多个空格</span></span><br><span class="line">    print()</span><br></pre></td></tr></table></figure></li><li><p>for+else</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyhton基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多任务——协程</title>
      <link href="/2020/07/03/python-socket05/"/>
      <url>/2020/07/03/python-socket05/</url>
      
        <content type="html"><![CDATA[<ul><li>迭代器</li><li>生成器</li><li>协程-yield</li><li>协程-greenlet</li><li>协程-gevent</li><li>进程、线程、协程区别</li><li>案例:并发下载器</li></ul><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>djago01</title>
      <link href="/2020/06/30/djago01/"/>
      <url>/2020/06/30/djago01/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多线程——进程</title>
      <link href="/2020/06/30/python-socket04/"/>
      <url>/2020/06/30/python-socket04/</url>
      
        <content type="html"><![CDATA[<ul><li>进程以及状态</li><li>进程的创建-multiprocessing</li><li>进程、线程对比</li><li>进程间通信-Queue</li><li>进程的创建进程池Pool</li><li>案例:文件夹copy器(多进程版)</li></ul><a id="more"></a><h1 id="进程以及状态"><a href="#进程以及状态" class="headerlink" title="进程以及状态"></a>进程以及状态</h1><ol><li><p>进程<br> 程序：例如xxx.py这是程序，是一个静态的</p><p> 进程：一个程序运行起来后，代码+用到的资源 称之为进程，它是操作系统分配资源的基本单元。</p><p> 不仅可以通过线程完成多任务，进程也是可以的</p></li><li><p>进程的状态<br> 工作中，任务数往往大于cpu的核数，即一定有一些任务正在执行，而另外一些任务在等待cpu进行执行，因此导致了有了不同的状态</p><p> <img src="/images/socket4_1.png" alt=""></p><ul><li>就绪态：运行的条件都已经慢去，正在等在cpu执行</li><li>执行态：cpu正在执行其功能</li><li>等待态：等待某些条件满足，例如一个程序sleep了，此时就处于等待态</li></ul></li></ol><h1 id="进程的创建-multiprocessing"><a href="#进程的创建-multiprocessing" class="headerlink" title="进程的创建-multiprocessing"></a>进程的创建-multiprocessing</h1><p>multiprocessing模块就是跨平台版本的多进程模块，提供了一个Process类来代表一个进程对象，这个对象可以理解为是一个独立的进程，可以执行另外的事情</p><ol><li><p>2个while循环一起执行</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""子进程要执行的代码"""</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"----2----"</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    p = Process(target=run_proc)</span><br><span class="line">    p.start()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"----1----"</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 说明</p><p> 创建子进程时，只需要传入一个执行函数和函数的参数，创建一个Process实例，用start()方法启动</p></li><li><p>进程pid</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""子进程要执行的代码"""</span></span><br><span class="line">    print(<span class="string">'子进程运行中，pid=%d...'</span> % os.getpid())  <span class="comment"># os.getpid获取当前进程的进程号</span></span><br><span class="line">    print(<span class="string">'子进程将要结束...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'父进程pid: %d'</span> % os.getpid())  <span class="comment"># os.getpid获取当前进程的进程号</span></span><br><span class="line">    p = Process(target=run_proc)</span><br><span class="line">    p.start()</span><br></pre></td></tr></table></figure></li><li><p>Process语法结构如下：</p><p> Process([group [, target [, name [, args [, kwargs]]]]])</p><p> target：如果传递了函数的引用，可以任务这个子进程就执行这里的代码<br> args：给target指定的函数传递的参数，以元组的方式传递<br> kwargs：给target指定的函数传递命名参数<br> name：给进程设定一个名字，可以不设定<br> group：指定进程组，大多数情况下用不到<br> Process创建的实例对象的常用方法：</p><p> start()：启动子进程实例（创建子进程）<br> is_alive()：判断进程子进程是否还在活着<br> join([timeout])：是否等待子进程执行结束，或等待多少秒<br> terminate()：不管任务是否完成，立即终止子进程<br> Process创建的实例对象的常用属性：</p><p> name：当前进程的别名，默认为Process-N，N为从1开始递增的整数<br> pid：当前进程的pid（进程号）</p></li><li><p>给子进程指定的函数传递参数</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span><span class="params">(name, age, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        print(<span class="string">'子进程运行中，name= %s,age=%d ,pid=%d...'</span> % (name, age, os.getpid()))</span><br><span class="line">        print(kwargs)</span><br><span class="line">        sleep(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    p = Process(target=run_proc, args=(<span class="string">'test'</span>,<span class="number">18</span>), kwargs=&#123;<span class="string">"m"</span>:<span class="number">20</span>&#125;)</span><br><span class="line">    p.start()</span><br><span class="line">    sleep(<span class="number">1</span>)  <span class="comment"># 1秒中之后，立即结束子进程</span></span><br><span class="line">    p.terminate()</span><br><span class="line">    p.join()</span><br></pre></td></tr></table></figure><p> 运行结果:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">子进程运行中，name&#x3D; test,age&#x3D;18 ,pid&#x3D;45097...</span><br><span class="line">&#123;&#39;m&#39;: 20&#125;</span><br><span class="line">子进程运行中，name&#x3D; test,age&#x3D;18 ,pid&#x3D;45097...</span><br><span class="line">&#123;&#39;m&#39;: 20&#125;</span><br><span class="line">子进程运行中，name&#x3D; test,age&#x3D;18 ,pid&#x3D;45097...</span><br><span class="line">&#123;&#39;m&#39;: 20&#125;</span><br><span class="line">子进程运行中，name&#x3D; test,age&#x3D;18 ,pid&#x3D;45097...</span><br><span class="line">&#123;&#39;m&#39;: 20&#125;</span><br><span class="line">子进程运行中，name&#x3D; test,age&#x3D;18 ,pid&#x3D;45097...</span><br><span class="line">&#123;&#39;m&#39;: 20&#125;</span><br></pre></td></tr></table></figure></li><li><p>进程间不同享全局变量</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">nums = [<span class="number">11</span>, <span class="number">22</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""子进程要执行的代码"""</span></span><br><span class="line">    print(<span class="string">"in process1 pid=%d ,nums=%s"</span> % (os.getpid(), nums))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        nums.append(i)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">"in process1 pid=%d ,nums=%s"</span> % (os.getpid(), nums))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""子进程要执行的代码"""</span></span><br><span class="line">    print(<span class="string">"in process2 pid=%d ,nums=%s"</span> % (os.getpid(), nums))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    p1 = Process(target=work1)</span><br><span class="line">    p1.start()</span><br><span class="line">    p1.join()</span><br><span class="line"></span><br><span class="line">    p2 = Process(target=work2)</span><br><span class="line">    p2.start()</span><br></pre></td></tr></table></figure><p> 运行结果:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">in process1 pid&#x3D;11349 ,nums&#x3D;[11, 22]</span><br><span class="line">in process1 pid&#x3D;11349 ,nums&#x3D;[11, 22, 0]</span><br><span class="line">in process1 pid&#x3D;11349 ,nums&#x3D;[11, 22, 0, 1]</span><br><span class="line">in process1 pid&#x3D;11349 ,nums&#x3D;[11, 22, 0, 1, 2]</span><br><span class="line">in process2 pid&#x3D;11350 ,nums&#x3D;[11, 22]</span><br></pre></td></tr></table></figure></li></ol><h1 id="进程、线程对比"><a href="#进程、线程对比" class="headerlink" title="进程、线程对比"></a>进程、线程对比</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>进程，能够完成多任务，比如 在一台电脑上能够同时运行多个QQ<br>线程，能够完成多任务，比如 一个QQ中的多个聊天窗口</p><h2 id="定义的不同"><a href="#定义的不同" class="headerlink" title="定义的不同"></a>定义的不同</h2><p><strong>进程是系统进行资源分配和调度的一个独立单位.</strong></p><p>线程是进程的一个实体,<strong>是CPU调度和分派的基本单位</strong>,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源.</p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>一个程序至少有一个进程,一个进程至少有一个线程.<br>线程的划分尺度小于进程(资源比进程少)，使得多线程程序的并发性高。<br>进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率<br>线线程不能够独立执行，必须依存在进程中<br>可以将进程理解为工厂中的一条流水线，而其中的线程就是这个流水线上的工人</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。</p><h1 id="进程间通信-Queue"><a href="#进程间通信-Queue" class="headerlink" title="进程间通信-Queue"></a>进程间通信-Queue</h1><p>Process之间有时需要通信，操作系统提供了很多机制来实现进程间的通信。</p><ol><li><p>Queue的使用</p><p> 可以使用multiprocessing模块的Queue实现多进程之间的数据传递，Queue本身是一个消息列队程序，首先用一个小实例来演示一下Queue的工作原理：</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue</span><br><span class="line">q=Queue(<span class="number">3</span>) <span class="comment">#初始化一个Queue对象，最多可接收三条put消息</span></span><br><span class="line">q.put(<span class="string">"消息1"</span>)</span><br><span class="line">q.put(<span class="string">"消息2"</span>)</span><br><span class="line">print(q.full())  <span class="comment">#Fale</span></span><br><span class="line">q.put(<span class="string">"消息3"</span>)</span><br><span class="line">print(q.full()) <span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#因为消息列队已满下面的try都会抛出异常，第一个try会等待2秒后再抛出异常，第二个Try会立刻抛出异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    q.put(<span class="string">"消息4"</span>,<span class="literal">True</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"消息列队已满，现有消息数量:%s"</span>%q.qsize())</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    q.put_nowait(<span class="string">"消息4"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"消息列队已满，现有消息数量:%s"</span>%q.qsize())</span><br><span class="line"></span><br><span class="line"><span class="comment">#推荐的方式，先判断消息列队是否已满，再写入</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> q.full():</span><br><span class="line">    q.put_nowait(<span class="string">"消息4"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取消息时，先判断消息列队是否为空，再读取</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> q.empty():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(q.qsize()):</span><br><span class="line">        print(q.get_nowait())</span><br></pre></td></tr></table></figure><p> 运行结果:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">False</span><br><span class="line">True</span><br><span class="line">消息列队已满，现有消息数量:3</span><br><span class="line">消息列队已满，现有消息数量:3</span><br><span class="line">消息1</span><br><span class="line">消息2</span><br><span class="line">消息3</span><br></pre></td></tr></table></figure><p> <strong>说明</strong></p><p> 初始化Queue()对象时（例如：q=Queue()），若括号中没有指定最大可接收的消息数量，或数量为负值，那么就代表可接受的消息数量没有上限（直到内存的尽头）；</p><ul><li><p>Queue.qsize()：返回当前队列包含的消息数量；</p></li><li><p>Queue.empty()：如果队列为空，返回True，反之False ；</p></li><li><p>Queue.full()：如果队列满了，返回True,反之False；</p></li><li><p>Queue.get([block[, timeout]])：获取队列中的一条消息，然后将其从列队中移除，block默认值为True；</p><p>1）如果block使用默认值，且没有设置timeout（单位秒），消息列队如果为空，此时程序将被阻塞（停在读取状态），直到从消息列队读到消息为止，如果设置了timeout，则会等待timeout秒，若还没读取到任何消息，则抛出”Queue.Empty”异常；</p><p>2）如果block值为False，消息列队如果为空，则会立刻抛出”Queue.Empty”异常；</p></li><li><p>Queue.get_nowait()：相当Queue.get(False)；</p></li><li><p>Queue.put(item,[block[, timeout]])：将item消息写入队列，block默认值为True；</p><p>1）如果block使用默认值，且没有设置timeout（单位秒），消息列队如果已经没有空间可写入，此时程序将被阻塞（停在写入状态），直到从消息列队腾出空间为止，如果设置了timeout，则会等待timeout秒，若还没空间，则抛出”Queue.Full”异常；</p><p>2）如果block值为False，消息列队如果没有空间可写入，则会立刻抛出”Queue.Full”异常；</p></li><li><p>Queue.put_nowait(item)：相当Queue.put(item, False)；</p></li></ul></li><li><p>Queue实例</p><p> 我们以Queue为例，在父进程中创建两个子进程，一个往Queue里写数据，一个从Queue里读数据：</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(q)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]:</span><br><span class="line">        print(<span class="string">'Put %s to queue...'</span> % value)</span><br><span class="line">        q.put(value)</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(q)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> q.empty():</span><br><span class="line">            value = q.get(<span class="literal">True</span>)</span><br><span class="line">            print(<span class="string">'Get %s from queue.'</span> % value)</span><br><span class="line">            time.sleep(random.random())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 父进程创建Queue，并传给各个子进程：</span></span><br><span class="line">    q = Queue()</span><br><span class="line">    pw = Process(target=write, args=(q,))</span><br><span class="line">    pr = Process(target=read, args=(q,))</span><br><span class="line">    <span class="comment"># 启动子进程pw，写入:</span></span><br><span class="line">    pw.start()</span><br><span class="line">    <span class="comment"># 等待pw结束:</span></span><br><span class="line">    pw.join()</span><br><span class="line">    <span class="comment"># 启动子进程pr，读取:</span></span><br><span class="line">    pr.start()</span><br><span class="line">    pr.join()</span><br><span class="line">    <span class="comment"># pr进程里是死循环，无法等待其结束，只能强行终止:</span></span><br><span class="line">    print(<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'所有数据都写入并且读完'</span>)</span><br></pre></td></tr></table></figure></li></ol><p>运行结果：</p><h1 id="进程的创建进程池Pool"><a href="#进程的创建进程池Pool" class="headerlink" title="进程的创建进程池Pool"></a>进程的创建进程池Pool</h1><h2 id="进程池Pool"><a href="#进程池Pool" class="headerlink" title="进程池Pool"></a>进程池Pool</h2><p>当需要创建的子进程数量不多时，可以直接利用multiprocessing中的Process动态成生多个进程，但如果是上百甚至上千个目标，手动的去创建进程的工作量巨大，此时就可以用到multiprocessing模块提供的Pool方法。</p><p>初始化Pool时，可以指定一个最大进程数，当有新的请求提交到Pool中时，如果池还没有满，那么就会创建一个新的进程用来执行该请求；但如果池中的进程数已经达到指定的最大值，那么该请求就会等待，直到池中有进程结束，才会用之前的进程来执行新的任务，请看下面的实例：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">worker</span><span class="params">(msg)</span>:</span></span><br><span class="line">    t_start = time.time()</span><br><span class="line">    print(<span class="string">"%s开始执行,进程号为%d"</span> % (msg,os.getpid()))</span><br><span class="line">    <span class="comment"># random.random()随机生成0~1之间的浮点数</span></span><br><span class="line">    time.sleep(random.random()*<span class="number">2</span>)</span><br><span class="line">    t_stop = time.time()</span><br><span class="line">    print(msg,<span class="string">"执行完毕，耗时%0.2f"</span> % (t_stop-t_start))</span><br><span class="line"></span><br><span class="line">po = Pool(<span class="number">3</span>)  <span class="comment"># 定义一个进程池，最大进程数3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="comment"># Pool().apply_async(要调用的目标,(传递给目标的参数元祖,))</span></span><br><span class="line">    <span class="comment"># 每次循环将会用空闲出来的子进程去调用目标</span></span><br><span class="line">    po.apply_async(worker,(i,))</span><br><span class="line"></span><br><span class="line">print(<span class="string">"----start----"</span>)</span><br><span class="line">po.close()  <span class="comment"># 关闭进程池，关闭后po不再接收新的请求</span></span><br><span class="line">po.join()  <span class="comment"># 等待po中所有子进程执行完成，必须放在close语句之后</span></span><br><span class="line">print(<span class="string">"-----end-----"</span>)</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">----start----</span><br><span class="line">0开始执行,进程号为21466</span><br><span class="line">1开始执行,进程号为21468</span><br><span class="line">2开始执行,进程号为21467</span><br><span class="line">0 执行完毕，耗时1.01</span><br><span class="line">3开始执行,进程号为21466</span><br><span class="line">2 执行完毕，耗时1.24</span><br><span class="line">4开始执行,进程号为21467</span><br><span class="line">3 执行完毕，耗时0.56</span><br><span class="line">5开始执行,进程号为21466</span><br><span class="line">1 执行完毕，耗时1.68</span><br><span class="line">6开始执行,进程号为21468</span><br><span class="line">4 执行完毕，耗时0.67</span><br><span class="line">7开始执行,进程号为21467</span><br><span class="line">5 执行完毕，耗时0.83</span><br><span class="line">8开始执行,进程号为21466</span><br><span class="line">6 执行完毕，耗时0.75</span><br><span class="line">9开始执行,进程号为21468</span><br><span class="line">7 执行完毕，耗时1.03</span><br><span class="line">8 执行完毕，耗时1.05</span><br><span class="line">9 执行完毕，耗时1.69</span><br><span class="line">-----end-----</span><br></pre></td></tr></table></figure><p>multiprocessing.Pool常用函数解析：</p><ul><li>apply_async(func[, args[, kwds]]) ：使用非阻塞方式调用func（并行执行，堵塞方式必须等待上一个进程退出才能执行下一个进程），args为传递给func的参数列表，kwds为传递给func的关键字参数列表；</li><li>close()：关闭Pool，使其不再接受新的任务；</li><li>terminate()：不管任务是否完成，立即终止；</li><li>join()：主进程阻塞，等待子进程的退出， 必须在close或terminate之后使用；</li></ul><h2 id="进程池中的Queue"><a href="#进程池中的Queue" class="headerlink" title="进程池中的Queue"></a>进程池中的Queue</h2><p>如果要使用Pool创建进程，就需要使用multiprocessing.Manager()中的Queue()，而不是multiprocessing.Queue()，否则会得到一条如下的错误信息：</p><p>RuntimeError: Queue objects should only be shared between processes through inheritance.</p><p>下面的实例演示了进程池中的进程如何通信：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改import中的Queue为Manager</span></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Manager,Pool</span><br><span class="line"><span class="keyword">import</span> os,time,random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reader</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">"reader启动(%s),父进程为(%s)"</span> % (os.getpid(), os.getppid()))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(q.qsize()):</span><br><span class="line">        print(<span class="string">"reader从Queue获取到消息：%s"</span> % q.get(<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writer</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">"writer启动(%s),父进程为(%s)"</span> % (os.getpid(), os.getppid()))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"itcast"</span>:</span><br><span class="line">        q.put(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"(%s) start"</span> % os.getpid())</span><br><span class="line">    q = Manager().Queue()  <span class="comment"># 使用Manager中的Queue</span></span><br><span class="line">    po = Pool()</span><br><span class="line">    po.apply_async(writer, (q,))</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">1</span>)  <span class="comment"># 先让上面的任务向Queue存入数据，然后再让下面的任务开始从中取数据</span></span><br><span class="line"></span><br><span class="line">    po.apply_async(reader, (q,))</span><br><span class="line">    po.close()</span><br><span class="line">    po.join()</span><br><span class="line">    print(<span class="string">"(%s) End"</span> % os.getpid())</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(11095) start</span><br><span class="line">writer启动(11097),父进程为(11095)</span><br><span class="line">reader启动(11098),父进程为(11095)</span><br><span class="line">reader从Queue获取到消息：i</span><br><span class="line">reader从Queue获取到消息：t</span><br><span class="line">reader从Queue获取到消息：c</span><br><span class="line">reader从Queue获取到消息：a</span><br><span class="line">reader从Queue获取到消息：s</span><br><span class="line">reader从Queue获取到消息：t</span><br><span class="line">(11095) End</span><br></pre></td></tr></table></figure><h1 id="案例-文件夹copy器-多进程版"><a href="#案例-文件夹copy器-多进程版" class="headerlink" title="案例:文件夹copy器(多进程版)"></a>案例:文件夹copy器(多进程版)</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy_file</span><span class="params">(queue, file_name,source_folder_name,  dest_folder_name)</span>:</span></span><br><span class="line">    <span class="string">"""copy文件到指定的路径"""</span></span><br><span class="line">    f_read = open(source_folder_name + <span class="string">"/"</span> + file_name, <span class="string">"rb"</span>)</span><br><span class="line">    f_write = open(dest_folder_name + <span class="string">"/"</span> + file_name, <span class="string">"wb"</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line">        content = f_read.read(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">if</span> content:</span><br><span class="line">            f_write.write(content)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    f_read.close()</span><br><span class="line">    f_write.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送已经拷贝完毕的文件名字</span></span><br><span class="line">    queue.put(file_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 获取要复制的文件夹</span></span><br><span class="line">    source_folder_name = input(<span class="string">"请输入要复制文件夹名字:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 整理目标文件夹</span></span><br><span class="line">    dest_folder_name = source_folder_name + <span class="string">"[副本]"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建目标文件夹</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        os.mkdir(dest_folder_name)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span>  <span class="comment"># 如果文件夹已经存在，那么创建会失败</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取这个文件夹中所有的普通文件名</span></span><br><span class="line">    file_names = os.listdir(source_folder_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建Queue</span></span><br><span class="line">    queue = multiprocessing.Manager().Queue()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建进程池</span></span><br><span class="line">    pool = multiprocessing.Pool(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">        <span class="comment"># 向进程池中添加任务</span></span><br><span class="line">        pool.apply_async(copy_file, args=(queue, file_name, source_folder_name, dest_folder_name))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 主进程显示进度</span></span><br><span class="line">    pool.close()</span><br><span class="line"></span><br><span class="line">    all_file_num = len(file_names)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        file_name = queue.get()</span><br><span class="line">        <span class="keyword">if</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            file_names.remove(file_name)</span><br><span class="line"></span><br><span class="line">        copy_rate = (all_file_num-len(file_names))*<span class="number">100</span>/all_file_num</span><br><span class="line">        print(<span class="string">"\r%.2f...(%s)"</span> % (copy_rate, file_name) + <span class="string">" "</span>*<span class="number">50</span>, end=<span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> copy_rate &gt;= <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多任务——线程</title>
      <link href="/2020/06/29/python-socket03/"/>
      <url>/2020/06/29/python-socket03/</url>
      
        <content type="html"><![CDATA[<ul><li>线程⭐</li><li>线程-注意点</li><li>多线程-共享全局变量⭐</li><li>多线程-共享全局变量-问题</li><li>同步</li><li>互斥锁⭐</li><li>死锁</li><li>案例:多任务版udp聊天器</li></ul><a id="more"></a><h1 id="线程⭐"><a href="#线程⭐" class="headerlink" title="线程⭐"></a>线程⭐</h1><p>python的thread模块是比较底层的模块，python的threading模块是对thread做了一些包装的，可以更加方便的被使用</p><ol><li><p>使用threading模块单线程执行</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"你好！"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> <span class="number">1</span> <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        Hello()</span><br></pre></td></tr></table></figure><p> 多线程执行</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"你好！"</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> <span class="number">1</span> <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        t = threading.Thread(target=Hello)</span><br><span class="line">        t.satrt()</span><br></pre></td></tr></table></figure><p> 说明</p><pre><code>1. 可以明显看出使用了多线程并发的操作，花费时间要短很多2. 当调用start() 时，才会真正的创建线程，并且开始执行</code></pre></li><li><p>主线程会等待所有的子线程结束后才结束</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, ctime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">"正在唱歌...%d"</span>%i)</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dance</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        print(<span class="string">"正在跳舞...%d"</span>%i)</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">'---开始---:%s'</span>%ctime())</span><br><span class="line"></span><br><span class="line">    t1 = threading. Thread( target=sing)</span><br><span class="line">    t2 = threading. Thread( target=dance)</span><br><span class="line"></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#sleep(5) #屏蔽此行代码,程序会立马结束</span></span><br><span class="line">    print(<span class="string">'---结束---:%s'</span>%ctime())</span><br></pre></td></tr></table></figure></li><li><p>查看线程数量</p></li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, ctime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">"正在唱歌...%d"</span>%i)</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dance</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        print(<span class="string">"正在跳舞...%d"</span>%i)</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">'---开始---:%s'</span>%ctime())</span><br><span class="line"></span><br><span class="line">    t1 = threading. Thread( target=sing)</span><br><span class="line">    t2 = threading. Thread( target=dance)</span><br><span class="line"></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        length = len(threading.enumerate())</span><br><span class="line">        print(<span class="string">'当前运行的线程数为: %d'</span>%length)</span><br><span class="line">        <span class="keyword">if</span> length&lt;=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/socket3_1.png" alt="运行结果"></p><h1 id="线程-注意点"><a href="#线程-注意点" class="headerlink" title="线程-注意点"></a>线程-注意点</h1><ol><li><p>线程执行代码的封装</p><p> 通过上一小节，能够看出，通过使用threading模块能完成多任务的程序开发，为了让每个线程的封装性更完美，所以使用threading模块时，往往会定义一个新的子类class，只要继承threading。Thread就可以了，然后重写run方法</p><p> 示例如下:</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            msg = <span class="string">"I'm "</span>+self.name+<span class="string">' @ '</span>+str(i) <span class="comment">#name 属性中保存的是当前线程的名字</span></span><br><span class="line">            print(msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    t = MyThread()</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure></li></ol><h1 id="多线程-共享全局变量⭐"><a href="#多线程-共享全局变量⭐" class="headerlink" title="多线程-共享全局变量⭐"></a>多线程-共享全局变量⭐</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">g_num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g__num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        g_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"----in work1, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_num</span><br><span class="line">    print(<span class="string">"----in work2, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"---线程创建之前g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line">t1 = Thread(target=work1)</span><br><span class="line">t1.start()</span><br><span class="line"></span><br><span class="line"><span class="comment">#延时一会，保证t1线程中的事情做完</span></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">t2 = Thread(target=work2)</span><br><span class="line">t2.start()</span><br></pre></td></tr></table></figure><h2 id="列表当做实参传递到线程中"><a href="#列表当做实参传递到线程中" class="headerlink" title="列表当做实参传递到线程中"></a>列表当做实参传递到线程中</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work1</span><span class="params">(nums)</span>:</span></span><br><span class="line">    nums.append(<span class="number">44</span>)</span><br><span class="line">    print(<span class="string">"----in work1---"</span> ,nums)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work2</span><span class="params">(nums)</span>:</span></span><br><span class="line">    <span class="comment">#延时一会，保证t1线程中的事情做完</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"----in work2---"</span> ,nums)</span><br><span class="line"></span><br><span class="line">g_nums = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>]</span><br><span class="line"></span><br><span class="line">t1 = Thread(target=work1, args=(g_nums,))</span><br><span class="line">t1.start()</span><br><span class="line"></span><br><span class="line">t2 = Thread(target=work2, args=(g_nums,))</span><br><span class="line">t2.start()</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">----in work1--- [11, 22, 33, 44]</span><br><span class="line">----in work2--- [11, 22, 33, 44]</span><br></pre></td></tr></table></figure><p>总结:</p><ul><li>在一个进程内的所有线程共享全局变量，很方便在多个线程间共享数据</li><li>缺点就是，线程是对全局变量随意遂改可能造成多线程之间对全局变量的混乱(即线程非安全)</li></ul><h1 id="多线程-共享全局变量-问题"><a href="#多线程-共享全局变量-问题" class="headerlink" title="多线程-共享全局变量-问题"></a>多线程-共享全局变量-问题</h1><p>多线程开发可能遇到的问题</p><p>假设两个线程t1和t2都要对全局变量g_num(默认是0)进行加1运算，t1和t2都各对g_num加10次，g_num的最终的结果应该为20</p><p>但是由于是多线程同时操作，有可能出现下面情况:</p><ol><li>在g_num=0时,t1取得g_num=0.此时系统把t1调度为”sleeping”状态，把t2转换为”running”状态,t2也获得g_num=0</li><li>然后t2对得到的值进行加1并赋给g_num,使得g_num=1</li><li>然后系统又把t2调度为”sleeping”,把t1转为”running”.线程t1又把它之前得到的0加1后赋值给<br>g_num</li><li>这样导致虽然t1和t2都对g_num加1,但结果仍然是g_num=1</li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">g_num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work1</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        g_num += <span class="number">1</span></span><br><span class="line">    print(<span class="string">"----in work1, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work2</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        g_num += <span class="number">1</span></span><br><span class="line">    print(<span class="string">"----in work2, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    t1 = threading.Thread( target=work1, args=(<span class="number">1000000</span>,))</span><br><span class="line">    t2 = threading.Thread( target=work2, args=(<span class="number">1000000</span>,))</span><br><span class="line"></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#等待上面的2个线程执行完毕.</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="/images/socket3_2.png" alt="运行结果"></p><h1 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h1><h2 id="同步的概念"><a href="#同步的概念" class="headerlink" title="同步的概念"></a>同步的概念</h2><p>同步就是协同步调，按预定的先后次序进行运行</p><p>如进程、线程同步，可理解为进程或线程A和B一块配合，A执行到一定程度时要依靠B的某个结果，于是<br>停下来，示意B运行；B执行，再将结果给A；A再继续操作</p><h2 id="解决线程同时修改全局变量的方式"><a href="#解决线程同时修改全局变量的方式" class="headerlink" title="解决线程同时修改全局变量的方式"></a>解决线程同时修改全局变量的方式</h2><ol><li>系统调用t1，然后获取到g_num的值为0，此时上一把锁，即不允许其他线程操作g_num</li><li>t1对g_num的值进行+1</li><li>t1解锁，此时g_num的值为1，其他的线程就可以使用g_num了，而且是g_num的值不是0而是1</li><li>同理其他线程在对g_num进行修改时，都要先上锁，处理完后再解锁，在上锁的整个过程中不允许其<br>他线程访问，就保证了数据的正确性</li></ol><h1 id="互斥锁⭐"><a href="#互斥锁⭐" class="headerlink" title="互斥锁⭐"></a>互斥锁⭐</h1><p>当多个线程几乎同时修改某一个共享数据的时候，需要进行同步控制</p><p>线程同步能够保证多个线程安全访问竞争资源，最简单的同步机制是引入互斥锁</p><p>互斥锁为资源引入一个状态:锁定/非锁定</p><p>某个线程要更改共享数据时，先将其锁定，此时资源的状态为“锁定”，其他线程不能更改；直到该线程释放资源，将资源的状态变成“非锁定”，其他的线程才能再次锁定该资源。互斥锁保证了每次只有一个线程进行写入操作，从而保证了多线程情况下数据的正确性。</p><p>threading模块中定义了Lock类，可以方便的处理锁定:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建锁</span></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="comment">#锁定</span></span><br><span class="line">mutex.acquire()</span><br><span class="line"></span><br><span class="line"><span class="comment">#释放</span></span><br><span class="line">mutex.release( )</span><br></pre></td></tr></table></figure><p>注意:</p><ul><li>如果这个锁之前是没有上锁的，那么acquire不会堵塞</li><li>如果在调用acquire对这个锁上锁之前它已经被其他线程上了锁，那么此时acquire会堵塞，直到这个锁被解锁为止</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">g_num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work1</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_num</span><br><span class="line">    <span class="comment"># 上锁如果之前没有被上锁，那么此时上锁成功</span></span><br><span class="line">    <span class="comment"># 如果上锁之前已经被上锁了，那么此时就会堵塞在这里，直到这个锁被解开位置</span></span><br><span class="line">    mutex.acquire()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        g_num += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 解锁</span></span><br><span class="line">    mutex.release()</span><br><span class="line">    print(<span class="string">"----in work1, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work2</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_num</span><br><span class="line">    mutex.acquire()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        g_num += <span class="number">1</span></span><br><span class="line">    mutex.release()</span><br><span class="line">    print(<span class="string">"----in work2, g_num is %d---"</span>%g_num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个互斥锁，默认是没有上锁的</span></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    t1 = threading.Thread(target=work1, args=(<span class="number">1000000</span>,))</span><br><span class="line">    t2 = threading.Thread(target=work2, args=(<span class="number">1000000</span>,))</span><br><span class="line"></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#等待上面的2个线程执行完毕.</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="/images/socket3_3.png" alt="运行结果"></p><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><ol><li><p>死锁<br> 在线程间共享多个资源的时候，如果两个线程分别占有一部分资源并且同时等待对方的资源，就会造成死锁</p><p> 尽管死锁很少发生，但一旦发生就会造成应用的停止响应.下面看一个死锁的例子:</p> <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThreadl</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 对mutexA上锁</span></span><br><span class="line">        mutexA.acquire()</span><br><span class="line">        <span class="comment"># mutexA上锁后，延时1秒，等待另外那个线程把mutexB上锁</span></span><br><span class="line">        print(self.name+<span class="string">'----do1---up----'</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 此时会堵塞，因为这个mutexB已经被另外的线程抢先上锁了</span></span><br><span class="line">        mutexB.acquire( )</span><br><span class="line">        print(self.name+<span class="string">'----do1---down----'</span>)</span><br><span class="line">        mutexB.release()</span><br><span class="line">        <span class="comment"># 对mutexA解锁</span></span><br><span class="line">        mutexA.release()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 对mutexB上锁</span></span><br><span class="line">        mutexB.acquire()</span><br><span class="line">        <span class="comment"># mutexB上锁后，延时1秒，等待另外那个线程把mutexA上锁</span></span><br><span class="line">        print(self.name+<span class="string">'----do2---up----'</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 此时会堵塞，因为这个mutexA已经被另外的线程抢先上锁了</span></span><br><span class="line">        mutexA.acquire()</span><br><span class="line">        print(self.name+<span class="string">'----do2---down----'</span>)</span><br><span class="line">        mutexA.release()</span><br><span class="line">        <span class="comment"># 对mutexB解锁</span></span><br><span class="line">        mutexB.release()</span><br><span class="line"></span><br><span class="line">mutexA = threading.Lock()</span><br><span class="line">mutexB = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    t1 = MyThread1()</span><br><span class="line">    t2 = MyThread2()</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br></pre></td></tr></table></figure></li><li><p>避免死锁</p></li></ol><ul><li>程序设计时要尽量避免(银行家算法)</li><li>添加超时时间等</li></ul><h2 id="附录-银行家算法"><a href="#附录-银行家算法" class="headerlink" title="附录-银行家算法"></a>附录-银行家算法</h2><p>[背景知识]</p><p>一个银行家如何将一定数目的资金安全地借给若干个客户，使这些客户既能借到钱完成要干的事，同时银行家又能收回全部资金而不至于破产，这就是银行家问题。这个问题同操作系统中资源分配问题十分相似:银行家就像一个操作系统，客户就像运行的进程，银行家的资金就是系统的资源。</p><p>[问题的描述]</p><p>一个银行家拥有一定数量的资金，有若干个客户要贷款。每个客户须在一开始就声明他所需贷款的总额。若该客户贷款总额不超过银行家的资金总数，银行家可以接收客户的要求。客户贷款是以每次一个资金单位(如1万RMB等)的方式进行的，客户在借满所需的全部单位款额之前可能会等待，但银行家须保证这种等待是有限的，可完成的。</p><p>例如:有三个客户C1，C2，C3，向银行家借款，该银行家的资金总额为10个资金单位，其中C1客户要借<br>9个资金单位，C2客户要借3个资金单位，C3客户要借8个资金单位，总计20个资金单位。某一时刻的状态<br>如图所示。</p><p><img src="/images/socket3_4.png" alt="如图"></p><p>对于a图的状态，按照安全序列的要求，我们选的第一个客户应满足该客户所需的贷款小于等于银行家当前所剩余的钱款，可以看出只有C2客户能被满足: C2客户需1个资金单位，小于银行家手中的2个资金单位，于是银行家把1个资金单位借给C2客户，使之完成工作并归还所借的3个资金单位的钱，进入b图。</p><p>同理，银行家把4个资金单位借给C3客户，使其完成工作，在c图中，只剩一个客户C1，它需7个资金单位，这时银行家有8个资金单位，所以C1也能顺利借到钱并完成工作。最后(见图d)银行家收回全部10个资金单位，保证不赔本。那么客户序列{C1，C2，C3}就是个安全序列，按照这个序列贷款，银行家才是安全的。</p><p>否则的话，若在图b状态时，银行家把手中的4个资金单位借给了C1，则出现不安全状态；这时C1，C3均<br>不能完成工作，而银行家手中又没有钱了，系统陷入僵持局面，银行家也不能收回投资。</p><p>综上所述，银行家算法是从当前状态出发，逐个按安全序列检查各客户谁能完成其工作，然后假定其完成工作且归还全部贷款，再进而检查下一个能完成工作的客户，…。如果所有客户都能完成工作，则找到一个安全序列，银行家才是安全的。</p><h1 id="案例-多任务版udp聊天器"><a href="#案例-多任务版udp聊天器" class="headerlink" title="案例:多任务版udp聊天器"></a>案例:多任务版udp聊天器</h1><p><img src="/images/socket3_5.png" alt="如图"></p><p>说明</p><blockquote><ul><li>编写一个有2个线程的程序</li><li>线程1用来接收数据然后显示</li><li>线程2用来检测键盘数据然后通过udp发送数据</li></ul></blockquote><p>要求</p><blockquote><ol><li>实现上述要求</li><li>总结多任务程序的特点</li></ol></blockquote><p>参考代码:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recv_msg</span><span class="params">(udp_socket)</span>:</span></span><br><span class="line">    <span class="string">"""接收数据并显示"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#接收数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        recv_data = udp_socket.recvfrom( <span class="number">1024</span>)</span><br><span class="line">        print(recv_data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_msg</span><span class="params">(udp_socket, dest_ip, dest_port)</span>:</span></span><br><span class="line">    <span class="string">"""发送数据"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        send_data = input(<span class="string">"输入要发送的数据:"</span>)</span><br><span class="line">        udp_socket.sendto(send_data.encode(<span class="string">"utf-8"</span>), (dest_ip, dest_port))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""完成udp聊天器的整体控制"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1.创建套接字</span></span><br><span class="line">    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.绑定本地信息</span></span><br><span class="line">    udp_socket.bind((<span class="string">""</span>, <span class="number">7890</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3.获取对方的ip</span></span><br><span class="line">    dest_ip = input(<span class="string">" 请输入对方的ip:"</span>)</span><br><span class="line">    dest_port = int(input(<span class="string">"请输入对方的port:"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.创建2个线程，去执行相应的功能</span></span><br><span class="line">    t_recv = threading.Thread(target=recv_msg, args=(udp_socket,))</span><br><span class="line">    t_send = threading.Thread(target=send_msg, args=(udp_socket, dest_ip, dest_port))</span><br><span class="line">    t_recv.start()</span><br><span class="line">    t_send.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络——TCP</title>
      <link href="/2020/06/28/python-socket02/"/>
      <url>/2020/06/28/python-socket02/</url>
      
        <content type="html"><![CDATA[<ul><li>tcp简介</li><li>tcp网络程序-客户端⭐</li><li>tcp网络程序-服务器⭐</li><li>tcp注意点⭐</li><li>案例:文件下载器</li><li>tcp的3次握手</li><li>tcp的4次挥手</li><li>tcp长连接和短连接</li><li>wireshark的使用</li><li>tcp/ip简介</li></ul><a id="more"></a><h1 id="TCP简介"><a href="#TCP简介" class="headerlink" title="TCP简介"></a>TCP简介</h1><h2 id="TCP介绍"><a href="#TCP介绍" class="headerlink" title="TCP介绍"></a>TCP介绍</h2><p>TCP协议，传输控制协议(英语: Transmission Control Protocol，缩写为TCP)是一种面向连接的、可靠的、基于字节流的传输层通信协议，由IETF的RFC 793定义。</p><p>TCP通信需要经过<strong>创建连接、数据传送、终止连接</strong>三个步骤。</p><p>TCP通信模型中，在通信开始之前，一定要先建立相关的链接，才能发送数据，类似于生活中，”<strong>打电话</strong>“</p><h2 id="TCP特点"><a href="#TCP特点" class="headerlink" title="TCP特点"></a>TCP特点</h2><ol><li><p>面向连接<br> 通信双方必须先建立连接才能进行数据的传输，双方都必须为该连接分配必要的系统内核资源，以管理连接的状态和连接上的传输。</p><p> 双方间的数据传输都可以通过这一个连接进行。</p><p> 完成数据交换后，双方必须断开此连接，以释放系统资源。</p><p> 这种连接是一对一的，因此TCP不适用于广播的应用程序，基于广播的应用程序请使用UDP协议。</p></li><li><p>可靠传输</p><ol><li><p>TCP采用发送应答机制<br>TCP发送的每个报文段都必须得到接收方的应答才认为这个TCP报文段传输成功</p></li><li><p>超时重传<br>发送端发出一个报文段之后就后动定时器，如果在定时时间内没有收到应答就重新发送这个报文段。</p><p>TCP为了保证不发生丢包，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。</p><p>然后接收端实体对已成功收到的包发回一个相应的确认(ACK); 如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据包就被假设为已丢失将会被进行重传。</p></li><li><p>错误校验<br>TCP用一个校验和函数来检验数据是否有错误;在发送和接收时都要计算校验和。</p></li><li><p>流量控制和阻塞管理<br>流量控制用来避免主机发送得过快而使接收方来不及完全收下。</p></li></ol></li></ol><h3 id="TCP与UDP的不同点"><a href="#TCP与UDP的不同点" class="headerlink" title="TCP与UDP的不同点"></a>TCP与UDP的不同点</h3><ul><li>面向连接(确认有创建三方交握，连接已创建才作传输。)</li><li>有序数据传输</li><li>重发丢失的数据包</li><li>舍弃重复的数据包</li><li>无差错的数据传输</li><li>阻塞流量控制</li></ul><h2 id="udp通信模型"><a href="#udp通信模型" class="headerlink" title="udp通信模型"></a>udp通信模型</h2><p>udp通信模型中，在通信开始之前，不需要建立相关的链接，只需要发送数据即可，类似于生活中，”<strong>写信</strong>“</p><p><img src="/images/socket2_1.png" alt="udp通信模型"></p><h2 id="TCP通信模型"><a href="#TCP通信模型" class="headerlink" title="TCP通信模型"></a>TCP通信模型</h2><p>udp通信模型中，在通信开始之前，一定要先建立相关的链接，才能发送数据，类似于生活中，”<strong>打电话</strong>“</p><p><img src="/images/socket2_2.png" alt="tcp通信模型"></p><h1 id="tcp网络程序-客户端"><a href="#tcp网络程序-客户端" class="headerlink" title="tcp网络程序-客户端"></a>tcp网络程序-客户端</h1><h2 id="tcp客户端构建流程"><a href="#tcp客户端构建流程" class="headerlink" title="tcp客户端构建流程"></a>tcp客户端构建流程</h2><p>tcp的客户端要比服务器端简单很多，如果说服务器端是需要自己买手机、查手机卡、设置铃声、等待别人打电话流程的话，那么客户端就只需要找一个电话亭，拿起电话拨打即可，流程要少很多</p><p>示例代码:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建socket</span></span><br><span class="line">tcp_client_socket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目的信息</span></span><br><span class="line">server_ip = input(<span class="string">"请输入服务器ip:"</span>)</span><br><span class="line">server_port = int(input(<span class="string">"请输入服务器port:"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接服务器</span></span><br><span class="line">tcp_client_socket.connect((server_ip, server_port))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提示用户输入数据</span></span><br><span class="line">send_data = input(<span class="string">"请输入要发送的数据:"</span>)</span><br><span class="line">tcp_client_socket.send(send_data.encode(<span class="string">"gbk"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收对方发送过来的数据，最大接收1024个字节</span></span><br><span class="line">recvData = tcp_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">print(<span class="string">'接收到的数据为:'</span>，recvData.decode(<span class="string">'gbk'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭套接字</span></span><br><span class="line">tcp_client_socket.close()</span><br></pre></td></tr></table></figure><h1 id="tcp网络程序-服务器"><a href="#tcp网络程序-服务器" class="headerlink" title="tcp网络程序-服务器"></a>tcp网络程序-服务器</h1><h2 id="生活中的电话机"><a href="#生活中的电话机" class="headerlink" title="生活中的电话机"></a>生活中的电话机</h2><p>如果想让别人能更够打通咱们的电话获取相应服务的话，需要做以下几件事情:</p><ol><li>买个手机</li><li>插上手机卡</li><li>设计手机为正常接听状态(即能够响铃)</li><li>静静的等着别人拨打</li></ol><h2 id="tcp服务器"><a href="#tcp服务器" class="headerlink" title="tcp服务器"></a>tcp服务器</h2><p>如同上面的电话机过程一样，在程序中，如果想要完成一个tcp服务器的功能，需要的流程如下:</p><ol><li>socket创建一个套接字</li><li>bind绑定ip和port</li><li>listen使套接字变为可以被动链接</li><li>accept等待客户端的链接</li><li>recv/send接收发送数据</li></ol><p>一个很简单的tcp服务器如下:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建socket</span></span><br><span class="line">tcp_server_socket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地信息</span></span><br><span class="line">address = (<span class="string">''</span>，<span class="number">7788</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定</span></span><br><span class="line">tcp_server_socket.bind(address)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用socket创建的套接字默认的属性是主动的， 使用listen将其变为被动的，这样就可以接收别人的链接了</span></span><br><span class="line">tcp_server_socket.listen(<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有新的客户端来链接服务器，那么就产生一个新的套接字专门为这个客户端服务</span></span><br><span class="line"><span class="comment"># client_socket用来为这个客户端服务</span></span><br><span class="line"><span class="comment"># tcp_server_socket就可以省下来专门等待其他新客户端的链接</span></span><br><span class="line">client_socket, clientAddr = tcp_server_socket.accept()</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收对方发送过来的数据</span></span><br><span class="line">recv_data = client_socket.recv(<span class="number">1024</span>) <span class="comment"># 接收1024个字节</span></span><br><span class="line">print(<span class="string">'接收到的数据为:'</span>, recv_data.decode(<span class="string">'gbk'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送一些数据到客户端</span></span><br><span class="line">client_socket.send(<span class="string">"thank you !"</span>.encode(<span class="string">'gbk'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭为这个客户端服务的套接字，只要关闭了，就意味着为不能再为这个客户端服务了。</span></span><br><span class="line">client_socket.close()</span><br></pre></td></tr></table></figure><p>循环为客户端服务并且循环为同一个客户端服务多次：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1.创建套接字 socket</span></span><br><span class="line">    tcp_server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.绑定本地信息 bind</span></span><br><span class="line">    tcp_server_socket.bind((<span class="string">""</span>, <span class="number">7890</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3.让默认的套接字由主动变为被动 listen</span></span><br><span class="line">    tcp_server_socket.listen(<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"等待一个新的客户端的到来..."</span>)</span><br><span class="line">        <span class="comment"># 4.等待客户端的连接 accept</span></span><br><span class="line">        new_client_socket, client_addr = tcp_server_socket.accept()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"一个新的客户端已经到来%s"</span> % str(client_addr))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 接收客户端发送过来的请求</span></span><br><span class="line">            recv_data = new_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">            print(<span class="string">"客户端送过来的请求是：%s"</span> % recv_data.decode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果recv解堵塞，那么有2种方式：</span></span><br><span class="line">            <span class="comment"># 1.客户端发送过来数据</span></span><br><span class="line">            <span class="comment"># 2.客户端调用close导致recv解堵塞</span></span><br><span class="line">            <span class="keyword">if</span> recv_data:</span><br><span class="line">                <span class="comment"># 回送一部分数据给客户端</span></span><br><span class="line">                new_client_socket.send(<span class="string">"hello你好"</span>.encode(<span class="string">"utf-8"</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 关闭套接字</span></span><br><span class="line">        new_client_socket.close()</span><br><span class="line">        print(<span class="string">"已经为这个客户端服务完成..."</span>)</span><br><span class="line"></span><br><span class="line">    tcp_server_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="/images/socket2_5.png" alt="Ubuntu终端"></p><h1 id="tcp注意点"><a href="#tcp注意点" class="headerlink" title="tcp注意点"></a>tcp注意点</h1><ol><li>tcp服务器一般情况下都需要绑定，否则客户端找不到这个服务器</li><li>tp客户端一般不绑定，因为是主动链接服务器，所以只要确定好服务器的ip、port等信息就好，本地客户端可以随机</li><li>tcp服务器中通过listen可以将socket创建出来的主动套接字变为被动的，这是做tcp服务器时必须要做的</li><li>当客户端需要链接服务器时，就需要使用connect进行链接，udp是不需要链接的而是直接发送，但是tcp必须先链接，只有链接成功才能通信</li><li>当一个tcp客户端连接服务器时，服务器端会有1个新的套接字，这个套接字用来标记这个客户端，单独为这个客户端服务</li><li>listen后 的套接字是被动套接字，用来接收新的客户端的链接请求的，而accept返回的新套接字是标记这个新客户端的</li><li>关闭listen后的套接字意味着被动套接字关闭了，会导致新的客户端不能够链接服务器，但是之前已经链接成功的客户端正常通信</li><li>关闭accept返回的套接字意味着这个客户端已经服务完毕</li><li>当客户端的套接字调用close后，服务器端会recv解堵塞，并且返回的长度为0，因此服务器可以通过返回数据的长度来区别客户端是否已经下线</li></ol><h1 id="案例-文件下载器"><a href="#案例-文件下载器" class="headerlink" title="案例:文件下载器"></a>案例:文件下载器</h1><p>服务器 参考代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_file_2_cliebt</span><span class="params">(new_client_socket, client_addr)</span>:</span></span><br><span class="line">    <span class="comment"># 1.接收客户端需要下载的文件名</span></span><br><span class="line">    <span class="comment"># 接收客户端发送过来的要下载的文件名</span></span><br><span class="line">    file_name = new_client_socket.recv(<span class="number">1024</span>).decode(<span class="string">"UTF-8"</span>)</span><br><span class="line">    print(<span class="string">"客户端(%s)需要下载的文件是：%s"</span> % str(client_addr), file_name)</span><br><span class="line"></span><br><span class="line">    file_content = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># 2.打开这个文件，读取数据</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = open(file_name, <span class="string">"rb"</span>)</span><br><span class="line">        file_content = f.read()</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ret:</span><br><span class="line">        print(<span class="string">"没有要下载的文件(%s)"</span> % file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3.发送文件的数据给客户端</span></span><br><span class="line">    <span class="keyword">if</span> file_content:</span><br><span class="line">        new_client_socket.send(file_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1.创建套接字 socket</span></span><br><span class="line">    tcp_server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.绑定本地信息 bind</span></span><br><span class="line">    tcp_server_socket.bind((<span class="string">""</span>, <span class="number">7890</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3.让默认的套接字由主动变为被动 listen</span></span><br><span class="line">    tcp_server_socket.listen(<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 4.等待客户端的连接 accept</span></span><br><span class="line">        new_client_socket, client_addr = tcp_server_socket.accept()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用发送文件函数，完成为客户端服务</span></span><br><span class="line">        send_file_2_cliebt(new_client_socket, client_addr)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 6.关闭套接字</span></span><br><span class="line">        new_client_socket.close()</span><br><span class="line">    tcp_server_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>客户端 参考代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#创建socket</span></span><br><span class="line">    tcp_client_socket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#目的信息</span></span><br><span class="line">    server_ip = input(<span class="string">"请输入服务器ip:"</span>)</span><br><span class="line">    server_port = int( input(<span class="string">"请输入服务器port:"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#链接服务器</span></span><br><span class="line">    tcp_client_socket.connect((server_ip, server_port))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#输入需要下载的文件名</span></span><br><span class="line">    file_name = input(<span class="string">"请输入要下载的文件名:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送文件下载请求</span></span><br><span class="line">    tcp_client_socket.send(file_name.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#接收对方发送过来的数据，最大接收1024个字节(1K)</span></span><br><span class="line">    recv_data = tcp_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print('接收到的数据为:'，recv. data. decodel'utf-8'))</span></span><br><span class="line">    <span class="comment">#如果接收到数据再创建文件↓否则不创建</span></span><br><span class="line">    <span class="keyword">if</span> recv_data:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"[接收]"</span>+file_name, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(recv_data)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#关闭套接字</span></span><br><span class="line">    tcp_client_socket. close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="tcp的3次握手"><a href="#tcp的3次握手" class="headerlink" title="tcp的3次握手"></a>tcp的3次握手</h1><h1 id="tcp的4次挥手"><a href="#tcp的4次挥手" class="headerlink" title="tcp的4次挥手"></a>tcp的4次挥手</h1><h1 id="tcp长连接和短连接"><a href="#tcp长连接和短连接" class="headerlink" title="tcp长连接和短连接"></a>tcp长连接和短连接</h1><h1 id="wireshark的使用"><a href="#wireshark的使用" class="headerlink" title="wireshark的使用"></a>wireshark的使用</h1><h1 id="tcp-ip简介"><a href="#tcp-ip简介" class="headerlink" title="tcp/ip简介"></a>tcp/ip简介</h1>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络——UDP</title>
      <link href="/2020/06/23/python-socket01/"/>
      <url>/2020/06/23/python-socket01/</url>
      
        <content type="html"><![CDATA[<ol><li>tcp/ip协议介绍</li><li>ip地址的分类</li><li>端⼝、端⼝号</li><li>socket ⭐</li><li>udp通信 ⭐</li><li>udp聊天器 ⭐</li></ol><a id="more"></a><h1 id="⽹络通信概述"><a href="#⽹络通信概述" class="headerlink" title="⽹络通信概述"></a>⽹络通信概述</h1><h2 id="1-什么是⽹络"><a href="#1-什么是⽹络" class="headerlink" title="1. 什么是⽹络"></a>1. 什么是⽹络</h2><p><strong>说明</strong></p><p>⽹络就是⼀种辅助双⽅或者多⽅能够连接在⼀起的⼯具</p><h2 id="2-使⽤⽹络的⽬的"><a href="#2-使⽤⽹络的⽬的" class="headerlink" title="2. 使⽤⽹络的⽬的"></a>2. 使⽤⽹络的⽬的</h2><p>为了联通多⽅然后进⾏通信⽤的，即把数据从⼀⽅传递给另外⼀⽅。之前编写的程序都是单机的，即不能和其他电脑上的程序进⾏通信。为了让在不同的电脑上运⾏的软件，之间能够互相传递数据，就需要借助⽹络的功能</p><h3 id="⼩总结"><a href="#⼩总结" class="headerlink" title="⼩总结"></a>⼩总结</h3><ul><li>使⽤⽹络能够把多⽅链接在⼀起，然后可以进⾏数据传递</li><li>所谓的⽹络编程就是，让在不同的电脑上的软件能够进⾏数据传递，即进程之间的通信</li></ul><p><img src="/images/socket_1.png" alt="网络通信过程"></p><h1 id="tcp-ip简介"><a href="#tcp-ip简介" class="headerlink" title="tcp/ip简介"></a>tcp/ip简介</h1><h2 id="1-计算机⽹络沟通⽤什么"><a href="#1-计算机⽹络沟通⽤什么" class="headerlink" title="1. 计算机⽹络沟通⽤什么"></a>1. 计算机⽹络沟通⽤什么</h2><p>不同的计算机只需要能够联⽹（有线⽆线都可以）那么就可以相互进⾏传递数据</p><p>计算机都遵守的⽹络通信协议叫做<code>TCP/IP协议</code></p><h2 id="2-TCP-IP协议-族"><a href="#2-TCP-IP协议-族" class="headerlink" title="2. TCP/IP协议(族)"></a>2. TCP/IP协议(族)</h2><p>早期的计算机⽹络，都是由各⼚商⾃⼰规定⼀套协议，IBM、Apple和 Microsoft都有各⾃的⽹络协议，互不兼容</p><p>为了把全世界的所有不同类型的计算机都连接起来，就必须规定⼀套全球通⽤的协议，为了实现互联⽹这个⽬标，互联⽹协议簇（Internet Protocol Suite）就是通⽤协议标准。</p><p>因为互联⽹协议包含了上百种协议标准，但是最重要的两个协议是TCP和IP协议，所以，⼤家把互联⽹的协议简称TCP/IP协议。</p><p>常⽤的⽹络协议如下图所示：</p><p><img src="/images/socket_2.png" alt="常⽤的⽹络协议"></p><p>说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">⽹际层也称为：⽹络层</span><br><span class="line">⽹络接⼝层也称为：链路层</span><br></pre></td></tr></table></figure><h1 id="端⼝"><a href="#端⼝" class="headerlink" title="端⼝"></a>端⼝</h1><h2 id="1-什么是端⼝"><a href="#1-什么是端⼝" class="headerlink" title="1. 什么是端⼝"></a>1. 什么是端⼝</h2><p>端⼝就好⼀个房⼦的⻔，是出⼊这间房⼦的必经之路。</p><p>如果⼀个进程需要收发⽹络数据，那么就需要有这样的端⼝.在linux系统中，端⼝可以有65536（2的16次⽅）个之多！既然有这么多，操作系统为了统⼀管理，所以进⾏了编号，这就是端⼝号</p><h2 id="2-端⼝号"><a href="#2-端⼝号" class="headerlink" title="2. 端⼝号"></a>2. 端⼝号</h2><p>端⼝是通过端⼝号来标记的，端⼝号只有整数，范围是从0到65535</p><h2 id="3-端⼝是怎样分配的"><a href="#3-端⼝是怎样分配的" class="headerlink" title="3. 端⼝是怎样分配的"></a>3. 端⼝是怎样分配的</h2><p>端⼝号不是随意使⽤的，⽽是按照⼀定的规定进⾏分配。</p><h3 id="3-1-知名端⼝（Well-Known-Ports）"><a href="#3-1-知名端⼝（Well-Known-Ports）" class="headerlink" title="3.1 知名端⼝（Well Known Ports）"></a>3.1 知名端⼝（Well Known Ports）</h3><p>知名端⼝是众所周知的端⼝号，范围从0到1023</p><p>80端⼝分配给HTTP服务 21端⼝分配给FTP服务</p><p>可以理解为，⼀些常⽤的功能使⽤的号码是固定的，好⽐电话号码110、 10086、10010⼀样</p><p>⼀般情况下，如果⼀个程序需要使⽤知名端⼝的需要有root权限</p><h3 id="3-2-动态端⼝（Dynamic-Ports）"><a href="#3-2-动态端⼝（Dynamic-Ports）" class="headerlink" title="3.2 动态端⼝（Dynamic Ports）"></a>3.2 动态端⼝（Dynamic Ports）</h3><p>动态端⼝的范围是从1024到65535</p><p>之所以称为动态端⼝，是因为它⼀般不固定分配某种服务，⽽是动态分配。</p><p>动态分配是指当⼀个系统进程或应⽤程序进程需要⽹络通信时，它向主机申请⼀个端⼝，主机从可⽤的端⼝号中分配⼀个供它使⽤。</p><p>当这个进程关闭时，同时也就释放了所占⽤的端⼝号。</p><h3 id="3-3-怎样查看端⼝"><a href="#3-3-怎样查看端⼝" class="headerlink" title="3.3 怎样查看端⼝?"></a>3.3 怎样查看端⼝?</h3><p>⽤“netstat－an”查看端⼝状态</p><h3 id="4-⼩总结"><a href="#4-⼩总结" class="headerlink" title="4. ⼩总结"></a>4. ⼩总结</h3><p>⼀台拥有IP地址的主机可以提供许多服务，⽐如HTTP（万维⽹服务）、FTP（⽂件传输）、SMTP（电⼦邮件）等，这些服务完全可以通过1个IP地址来实现。那么，主机是怎样区分不同的⽹络服务呢？显然不能只靠IP地址，因为IP地址与⽹络服务的关系是⼀对多的关系。 实际上是通过“<code>IP地址+端⼝号</code>”来区分不同的服务的。需要注意的是，端⼝并不是⼀⼀对应的。⽐如你的电脑作为客户机访问⼀台WWW服务器时，WWW服务器使⽤“80”端⼝与你的电脑通信，但你的电脑则可能使⽤“3457”这样的端⼝。</p><h1 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h1><h2 id="1-ip地址的作⽤"><a href="#1-ip地址的作⽤" class="headerlink" title="1. ip地址的作⽤"></a>1. ip地址的作⽤</h2><p>ip地址：⽤来在⽹络中标记⼀台电脑的⼀串数字，⽐如192.168.1.1；在本地局域⽹上是惟⼀的。</p><h2 id="2-ip地址的分类"><a href="#2-ip地址的分类" class="headerlink" title="2. ip地址的分类"></a>2. ip地址的分类</h2><p>每⼀个IP地址包括两部分：⽹络地址和主机地址</p><p><img src="/images/socket_3.png" alt="IP地址的类别"></p><h3 id="2-1-A类IP地址"><a href="#2-1-A类IP地址" class="headerlink" title="2.1 A类IP地址"></a>2.1 A类IP地址</h3><p>⼀个A类IP地址由1字节的⽹络地址和3字节主机地址组成，⽹络地址的最⾼位必须是“0”，</p><p>地址范围1.0.0.1-126.255.255.254</p><p>⼆进制表示为：00000001 00000000 00000000 00000001 - 01111110 11111111 11111111 11111110</p><p>可⽤的A类⽹络有126个，每个⽹络能容纳1677214个主机</p><h3 id="2-2-B类IP地址"><a href="#2-2-B类IP地址" class="headerlink" title="2.2 B类IP地址"></a>2.2 B类IP地址</h3><p>⼀个B类IP地址由2个字节的⽹络地址和2个字节的主机地址组成，⽹络地址 的最⾼位必须是“10”，</p><p>地址范围128.1.0.1-191.255.255.254</p><p>⼆进制表示为：10000000 00000001 00000000 00000001 - 10111111 11111111 11111111 11111110</p><p>可⽤的B类⽹络有16384个，每个⽹络能容纳65534主机</p><h3 id="2-3-C类IP地址"><a href="#2-3-C类IP地址" class="headerlink" title="2.3 C类IP地址"></a>2.3 C类IP地址</h3><p>⼀个C类IP地址由3字节的⽹络地址和1字节的主机地址组成，⽹络地址的最 ⾼位必须是“110”</p><p>范围192.0.1.1-223.255.255.254</p><p>⼆进制表示为：11000000 00000000 00000001 00000001 - 11011111 11111111 11111110 11111110</p><p>C类⽹络可达2097152个，每个⽹络能容纳254个主机</p><h3 id="2-4-D类地址⽤于多点⼴播"><a href="#2-4-D类地址⽤于多点⼴播" class="headerlink" title="2.4 D类地址⽤于多点⼴播"></a>2.4 D类地址⽤于多点⼴播</h3><p>D类IP地址第⼀个字节以“1110”开始，它是⼀个专⻔保留的地址。</p><p>它并不指向特定的⽹络，⽬前这⼀类地址被⽤在多点⼴播（Multicast）中</p><p>多点⼴播地址⽤来⼀次寻址⼀组计算机</p><p>地址范围224.0.0.1-239.255.255.254</p><h3 id="2-5-E类IP地址"><a href="#2-5-E类IP地址" class="headerlink" title="2.5 E类IP地址"></a>2.5 E类IP地址</h3><p>以“1111”开始，为将来使⽤保留</p><p>E类地址保留，仅作实验和开发⽤</p><h3 id="2-6-私有ip"><a href="#2-6-私有ip" class="headerlink" title="2.6 私有ip"></a>2.6 私有ip</h3><p>在这么多⽹络IP中，国际规定有⼀部分IP地址是⽤于我们的局域⽹使⽤，也就是属于私⽹IP，不在公⽹中使⽤的，它们的范围是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.0～10.255.255.255</span><br><span class="line"></span><br><span class="line">172.16.0.0～172.31.255.255</span><br><span class="line"></span><br><span class="line">192.168.0.0～192.168.255.255</span><br></pre></td></tr></table></figure><h3 id="2-7-注意"><a href="#2-7-注意" class="headerlink" title="2.7 注意"></a>2.7 注意</h3><p>IP地址127．0．0．1~127．255．255．255⽤于回路测试，</p><p>如：127.0.0.1可以代表本机IP地址，⽤<code>http://127.0.0.1</code>就可以测试本机 中配置的Web服务器。</p><h1 id="⼦⽹掩码"><a href="#⼦⽹掩码" class="headerlink" title="⼦⽹掩码"></a>⼦⽹掩码</h1><p>要想理解什么是⼦⽹掩码，就不能不了解IP地址的构成。互联⽹是由许多⼩型⽹络构成的，每个⽹络上都有许多主机，这样便构成了⼀个有层次的结构。IP地址在设计时就考虑到地址分配的层次特点，将每个IP地址都分割成<strong>⽹络号和主机号</strong>两部分，以便于IP地址的寻址操作。</p><p>如果不指定，就不知道哪些位是⽹络号、哪些是主机号，这就需要通过⼦⽹掩码来实现。</p><p>⼦⽹掩码不能单独存在，它必须结合IP地址⼀起使⽤。</p><p>⼦⽹掩码只有⼀个作⽤，就是将某个IP地址划分成⽹络地址和主机地址两部分</p><p>⼦⽹掩码的设定必须遵循⼀定的规则。</p><p>与IP地址相同，⼦⽹掩码的⻓度也是32位，</p><p>左边是⽹络位，⽤⼆进制数字“1”表示； 右边是主机位，⽤⼆进制数字“0”表示。</p><p>假设IP地址为“192.168.1.1”⼦⽹掩码为“255.255.255.0”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">其中，“1”有24个，代表与此相对应的IP地址左边24位是⽹络号；</span><br><span class="line">“0”有8个，代表与此相对应的IP地址右边8位是主机号。</span><br><span class="line">这样，⼦⽹掩码就确定了⼀个IP地址的32位⼆进制数字中哪些是⽹络号、哪些是主机号。</span><br><span class="line">这对于采⽤TCP&#x2F;IP协议的⽹络来说⾮常重要，只有通过⼦⽹掩码，才能表明⼀台主机所在的⼦⽹。</span><br></pre></td></tr></table></figure><p>最常⽤的两种⼦⽹掩码</p><p>⼦⽹掩码是“255.255.255.0”的⽹络：</p><p>最后⾯⼀个数字可以在0~255范围内任意变化，因此可以提供256个IP地址。但是实际可⽤的IP地址数量是256-2，即254个，因为主机号不能全是“0”或全是“1”。</p><p>主机号全为0，表示⽹络号</p><p>主机号全为1，表示⽹络⼴播</p><p><strong>注意</strong></p><p>如果将⼦⽹掩码设置过⼤，也就是说⼦⽹范围扩⼤，那么，根据⼦⽹寻径规则，很可能发往和本地主机不在同⼀⼦⽹内的⽬标主机的数据，会因为错误的判断⽽认为⽬标主机是在同⼀⼦⽹内，那么，数据包将在本⼦⽹内循环，直到超时并抛弃，使数据不能正确到达⽬标主机，导致⽹络传输错误；</p><p>如果将⼦⽹掩码设置得过⼩，那么就会将本来属于同⼀⼦⽹内的机器之间的通信当做是跨⼦⽹传输，数据包都交给缺省⽹关处理，这样势必增加缺省⽹关(⽂章下⽅有解释)的负担，造成⽹络效率下降。</p><p>因此，⼦⽹掩码应该根据⽹络的规模进⾏设置。如果⼀个⽹络的规模不超过254台电脑，采⽤“255.255.255.0”作为⼦⽹掩码就可以了，现在⼤多数局域⽹都不会超过这个数字，因此“255.255.255.0”是最常⽤的IP地址⼦⽹掩码；假如在⼀所⼤学具有1500多台电脑，这种规模的局域⽹可以使⽤“255.255.0.0”。</p><h1 id="socket简介"><a href="#socket简介" class="headerlink" title="socket简介"></a>socket简介</h1><h2 id="1-本地的进程间通信（IPC）有很多种⽅式，例-如"><a href="#1-本地的进程间通信（IPC）有很多种⽅式，例-如" class="headerlink" title="1. 本地的进程间通信（IPC）有很多种⽅式，例 如"></a>1. 本地的进程间通信（IPC）有很多种⽅式，例 如</h2><ul><li>队列</li><li>同步（互斥锁、条件变量等）</li></ul><p>以上通信⽅式都是在⼀台机器上不同进程之间的通信⽅式</p><h2 id="2-⽹络中进程之间如何通信"><a href="#2-⽹络中进程之间如何通信" class="headerlink" title="2. ⽹络中进程之间如何通信"></a>2. ⽹络中进程之间如何通信</h2><p>⾸要解决的问题是如何唯⼀标识⼀个进程，否则通信⽆从谈起！</p><p>在本地可以通过进程PID来唯⼀标识⼀个进程，但是在⽹络中这是⾏不通的。</p><p>其实TCP/IP协议族已经帮我们解决了这个问题，⽹络层的“ip地址”可以唯⼀ 标识⽹络中的主机，⽽传输层的“协议+端⼝”可以唯⼀标识主机中的应⽤程序（进程）。</p><p>这样利⽤<code>ip地址，协议，端⼝</code>就可以标识⽹络的进程了，⽹络中的进程通信 就可以利⽤这个标志与其它进程进⾏交互</p><h2 id="3-什么是socket"><a href="#3-什么是socket" class="headerlink" title="3. 什么是socket"></a>3. 什么是socket</h2><p>socket(简称<strong>套接字</strong>)是进程间通信的⼀种⽅式，它与其他进程间通信的⼀个主要不同是：</p><p>它能实现不同主机间的进程间通信，我们⽹络上各种各样的服务⼤多都是基于Socket来完成通信的</p><p>例如浏览⽹⻚、QQ聊天、收发email等等</p><h2 id="4-创建socket"><a href="#4-创建socket" class="headerlink" title="4. 创建socket"></a>4. 创建socket</h2><p>在Python中使⽤socket模块的函数socket就可以完成：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket.socket(AddressFamily,Type)</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>函数socket.socket创建⼀个socket，返回该socket的描述符，该函数带有两个参数：</p><ul><li>Address Family：可以选择AF_INET（⽤于Internet进程间通信）或者 AF_UNIX（⽤于同⼀台机器进程间通信）,实际⼯作中常⽤AF_INET</li><li>Type：套接字类型，可以是SOCK_STREAM（流式套接字，主要⽤于 TCP 协议）或者 SOCK_DGRAM（数据报套接字，主要⽤于UDP协议）</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//创建⼀个tcp socket（tcp套接字）</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Socket Created'</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//创建⼀个udp socket（udp套接字）</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Socket Created'</span></span><br></pre></td></tr></table></figure><h1 id="UDP介绍"><a href="#UDP介绍" class="headerlink" title="UDP介绍"></a>UDP介绍</h1><p>UDP————⽤户数据报协议，是⼀个⽆连接的简单的⾯向数据报的运输层协议。UDP不提供可靠性，它只是把应⽤程序传给IP层的数据报发送出去，但是并不能保证它们能到达⽬的地。由于UDP在传输数据报前不⽤在客户和服务器之间建⽴⼀个连接，且没有超时重发等机制，故⽽传输速度很快。</p><p>UDP是⼀种⾯向⽆连接的协议，每个数据报都是⼀个独⽴的信息，包括完整的源地址或⽬的地址，它在⽹络上以任何可能的路径传往⽬的地，因此能否到达⽬的地，到达⽬的地的时间以及内容的正确性都是不能被保证的。</p><h2 id="UDP特点"><a href="#UDP特点" class="headerlink" title="UDP特点"></a>UDP特点</h2><p>UDP是⾯向⽆连接的通讯协议，UDP数据包括⽬的端⼝号和源端⼝号信息， 由于通讯不需要连接，所以可以实现⼴播发送。UDP传输数据时有⼤⼩限 制，每个被传输的数据报必须限定在64KB之内。UDP是⼀个不可靠的协 议，发送⽅所发送的数据报并不⼀定以相同的次序到达接收⽅。</p><p>【适⽤情况】</p><p>UDP是⾯向消息的协议，通信时不需要建⽴连接，数据的传输⾃然是不可靠 的，UDP⼀般⽤于多点通信和实时的数据业务，⽐如</p><ul><li>语⾳⼴播</li><li>视频</li><li>QQ</li><li>TFTP(简单⽂件传送)</li><li>SNMP(简单⽹络管理协议)</li><li>RIP(路由信息协议，如报告股票市场，航空信息）</li><li>DNS(域名解释）</li></ul><p><code>注重速度流畅</code></p><p>UDP操作简单，⽽且仅需要较少的监护，因此通常⽤于局域⽹⾼可靠性的分散系统中client/server应⽤程序。例如视频会议系统，并不要求⾳频视频数据绝对的正确，只要保证连贯性就可以了，这种情况下显然使⽤UDP会更合理⼀些。</p><h2 id="udp⽹络程序-发送数据"><a href="#udp⽹络程序-发送数据" class="headerlink" title="udp⽹络程序-发送数据"></a>udp⽹络程序-发送数据</h2><p>创建⼀个udp客户端程序的流程是简单，具体步骤如下：</p><ol><li>创建客户端套接字</li><li>发送数据</li><li>关闭套接字</li></ol><p><img src="/images/socket_4.png" alt=""></p><p>代码如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 创建套接字</span></span><br><span class="line">udpSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 准备接收⽅的地址</span></span><br><span class="line">sendAddr = (<span class="string">'192.168.0.102'</span>, <span class="number">8080</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 从键盘获取数据</span></span><br><span class="line">sendData = input(<span class="string">"请输⼊要发送的数据:"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 发送数据到指定的电脑上</span></span><br><span class="line">udpSocket.sendto(sendData, sendAddr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. 关闭套接字</span></span><br><span class="line">udpSocket.close()</span><br></pre></td></tr></table></figure><p>运⾏现象：<br>在Ubuntu中运⾏脚本：</p><p><img src="/images/socket_5.png" alt=""></p><p>在windows中运⾏“⽹络调试助⼿”：</p><p><img src="/images/socket_6.png" alt=""></p><h3 id="带有推出功能的循环发送数据"><a href="#带有推出功能的循环发送数据" class="headerlink" title="带有推出功能的循环发送数据"></a>带有推出功能的循环发送数据</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建一个udp套接字</span></span><br><span class="line">udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.从键盘获取数据</span></span><br><span class="line">    send_data = input(<span class="string">"请输入要发送的数据: "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#如果输入的数据是exit,那么就退出程序</span></span><br><span class="line">    <span class="keyword">if</span> send_data ==<span class="string">"exit"</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#可以使用套接字收发数据</span></span><br><span class="line">    <span class="comment"># udp_socket.sendto("hahahah",对方的ip以及port)</span></span><br><span class="line">    <span class="comment"># udp_socket.sendto( b"hahahah------1----", ("192. 168.0.102", 8080))</span></span><br><span class="line">    udp_socket.sendto(send_data.encode(<span class="string">"utf-8"</span>), (<span class="string">"192.168.0.102"</span>, <span class="number">8080</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.关闭套接字</span></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><h2 id="udp⽹络程序-接收数据"><a href="#udp⽹络程序-接收数据" class="headerlink" title="udp⽹络程序-接收数据"></a>udp⽹络程序-接收数据</h2><p>创建⼀个udp客户端程序的流程是简单，具体步骤如下：</p><ol><li>创建客户端套接字</li><li>绑定本地自己的信息（ip和port）</li><li>接收数据</li><li>关闭套接字</li></ol><p>代码如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 创建套接字</span></span><br><span class="line">udp_socket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.绑定本地的相关信息</span></span><br><span class="line">local_addr = (<span class="string">""</span>, <span class="number">7788</span>)</span><br><span class="line">udp_socket.bind(local_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 接收数据</span></span><br><span class="line">recv_data = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line"><span class="comment"># recv_data这个变量中存储的是一个元组(接收到的数据，(发送方的ip, port))</span></span><br><span class="line">recv_msg = recv_data[<span class="number">0</span>] <span class="comment"># 存储接收的数据</span></span><br><span class="line">send_addr = recv_data[i] <span class="comment"># 存储发送方的地址信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印接收到的数据</span></span><br><span class="line"><span class="comment"># print(recv_ data )</span></span><br><span class="line"><span class="comment"># print("%s:%s" % (str(send_addr), recv_msg.decode("utf-8")))</span></span><br><span class="line">print(<span class="string">"%s:%s"</span> % (str(send_addr), recv_msg.decode(<span class="string">"gbk"</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.关闭套接字</span></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><p>运⾏现象：<br>在Ubuntu中运⾏脚本：</p><p><img src="/images/socket_8.png" alt=""></p><p>在windows中运⾏“⽹络调试助⼿”：</p><p><img src="/images/socket_9.png" alt=""></p><h3 id="循环接收并显示数据"><a href="#循环接收并显示数据" class="headerlink" title="循环接收并显示数据"></a>循环接收并显示数据</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 创建套接字</span></span><br><span class="line">udp_socket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.绑定本地的相关信息</span></span><br><span class="line">local_addr = (<span class="string">""</span>, <span class="number">7788</span>)</span><br><span class="line">udp_socket.bind(local_addr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#3. 接收数据</span></span><br><span class="line">    recv_data = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># recv_data这个变量中存储的是一个元组(接收到的数据，(发送方的ip, port))</span></span><br><span class="line">    recv_msg = recv_data[<span class="number">0</span>] <span class="comment"># 存储接收的数据</span></span><br><span class="line">    send_addr = recv_data[i] <span class="comment"># 存储发送方的地址信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.打印接收到的数据</span></span><br><span class="line">    <span class="comment"># print(recv_ data )</span></span><br><span class="line">    <span class="comment"># print("%s:%s" % (str(send_addr), recv_msg.decode("utf-8")))</span></span><br><span class="line">    print(<span class="string">"%s:%s"</span> % (str(send_addr), recv_msg.decode(<span class="string">"gbk"</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. 关闭套接字</span></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><h1 id="udp⽹络程序-端⼝问题"><a href="#udp⽹络程序-端⼝问题" class="headerlink" title="udp⽹络程序-端⼝问题"></a>udp⽹络程序-端⼝问题</h1><h2 id="会变的端⼝号"><a href="#会变的端⼝号" class="headerlink" title="会变的端⼝号"></a>会变的端⼝号</h2><p>重新运⾏多次脚本，然后在“⽹络调试助⼿”中，看到的现象如下：</p><p><img src="/images/socket_7.png" alt=""></p><p>说明：</p><ul><li>每重新运⾏⼀次⽹络程序，上图中红圈中的数字，不⼀样的原因在于，这个数字标识这个⽹络程序，当重新运⾏时，如果没有确定到底⽤哪个，系统默认会随机分配</li><li>记住⼀点：这个⽹络程序在运⾏的过程中，这个就唯⼀标识这个程序，所以如果其他电脑上的⽹络程序如果想要向此程序发送数据，那么就需要向这个数字（即端⼝）标识的程序发送即可</li></ul><h1 id="使用同一个套接字收发数据"><a href="#使用同一个套接字收发数据" class="headerlink" title="使用同一个套接字收发数据"></a>使用同一个套接字收发数据</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个udp套接字</span></span><br><span class="line">udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取对方的ip/port</span></span><br><span class="line">dest_ip = input(<span class="string">"请输入对方的ip:"</span>)</span><br><span class="line">dest_port = int(input(<span class="string">"请输入对方的port:"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#从键盘获取数据</span></span><br><span class="line">send_data = input(<span class="string">"请输入要发送的数据: "</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以使用套接字收发数据</span></span><br><span class="line"><span class="comment"># udp_socket.sendto("hahahah", 对方的ip以及port)</span></span><br><span class="line"><span class="comment"># udp_socket.sendto(b"hahahah1----"，("192.168.0.102", 8080))</span></span><br><span class="line"><span class="comment"># udp_socket.sendto(send_data.encode("utf-8"), ("192.168.0.102", 8080))</span></span><br><span class="line">udp_socket.sendto(send_data.encode(<span class="string">"utf-8"</span>), (dest_ip, dest_port))</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收回送过来的数据</span></span><br><span class="line">recv_data = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">print(recv_data)</span><br><span class="line"><span class="comment">#关闭套接字</span></span><br><span class="line">udp_socket.close()</span><br></pre></td></tr></table></figure><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><ul><li>⼀个udp⽹络程序，可以不绑定，此时操作系统会随机进⾏分配⼀个端⼝，如果重新运⾏次程序端⼝可能会发⽣变化</li><li>⼀个udp⽹络程序，也可以绑定信息（ip地址，端⼝号），如果绑定成功，那么操作系统⽤这个端⼝号来进⾏区别收到的⽹络数据是否是此进程的</li></ul><h1 id="udp⽹络通信过程"><a href="#udp⽹络通信过程" class="headerlink" title="udp⽹络通信过程"></a>udp⽹络通信过程</h1><p><img src="/images/socket_10.png" alt=""></p><h1 id="udp总结"><a href="#udp总结" class="headerlink" title="udp总结"></a>udp总结</h1><h2 id="1-udp是TCP-IP协议族中的⼀种协议能够完成不同机器上的程序间的数据通信"><a href="#1-udp是TCP-IP协议族中的⼀种协议能够完成不同机器上的程序间的数据通信" class="headerlink" title="1. udp是TCP/IP协议族中的⼀种协议能够完成不同机器上的程序间的数据通信"></a>1. udp是TCP/IP协议族中的⼀种协议能够完成不同机器上的程序间的数据通信</h2><h2 id="2-udp服务器、客户端"><a href="#2-udp服务器、客户端" class="headerlink" title="2. udp服务器、客户端"></a>2. udp服务器、客户端</h2><ul><li>udp的服务器和客户端的区分：往往是通过<code>请求服务</code>和<code>提供服务</code>来进⾏区分</li><li>请求服务的⼀⽅称为：客户端</li><li>提供服务的⼀⽅称为：服务器</li></ul><h2 id="3-udp绑定问题"><a href="#3-udp绑定问题" class="headerlink" title="3. udp绑定问题"></a>3. udp绑定问题</h2><ul><li>⼀般情况下，服务器端，需要绑定端⼝，⽬的是为了让其他的客户端能够正确发送到此进程</li><li>客户端，⼀般不需要绑定，⽽是让操作系统随机分配，这样就不会因为 需要绑定的端⼝被占⽤⽽导致程序⽆法运⾏的情况</li></ul><h1 id="udp聊天器"><a href="#udp聊天器" class="headerlink" title="udp聊天器"></a>udp聊天器</h1><p>说明</p><blockquote><ul><li>在一个电脑中编写1个程序，有2个功能</li><li>1.获取键盘数据，并将其发送给对方</li><li>2.接收数据并显示</li><li>并且功能数据进行选择以上的2个功能调用</li></ul></blockquote><p>要求</p><blockquote><ol><li>实现上述程序</li></ol></blockquote><p>参考代码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_msg</span><span class="params">(udp_socket)</span>:</span></span><br><span class="line">    <span class="string">"""发送消息"""</span></span><br><span class="line">    <span class="comment">#获取要发送的内容</span></span><br><span class="line">    dest_ip = input(<span class="string">"请输入对方的ip:"</span>)</span><br><span class="line">    dest_port = int(input(<span class="string">"请输入对方的port:"</span> ))</span><br><span class="line">    send_data = input(<span class="string">"请输入要发送的消息:"</span>)</span><br><span class="line">    udp_socket.sendto(send_data.encode(<span class="string">"utf-8"</span>), (dest_ip, dest_port))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recv_msg</span><span class="params">(udp_socket)</span>:</span></span><br><span class="line">    <span class="string">"""接收数据"""</span></span><br><span class="line">    recv_data = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">"%s:%s"</span> % (str(recv_data[<span class="number">1</span>]), recv_data[<span class="number">0</span>].decode(<span class="string">"utf-8"</span>)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#创建套接字</span></span><br><span class="line">    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="comment">#绑定信息</span></span><br><span class="line">    udp_socket.bind((<span class="string">""</span>, <span class="number">7788</span>))</span><br><span class="line">    <span class="comment">#循环循环来进行处理事情</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"----Xxx聊天器-----"</span>)</span><br><span class="line">        print(<span class="string">"1:发送消息"</span>)</span><br><span class="line">        print(<span class="string">"2:接收消息"</span>)</span><br><span class="line">        print(<span class="string">"0:退出系统"</span>)</span><br><span class="line">        op = input(<span class="string">"请输入功能:"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> op==<span class="string">"1"</span>:</span><br><span class="line">            <span class="comment">#发送</span></span><br><span class="line">            send_msg(udp_socket)</span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">"2"</span>:</span><br><span class="line">            <span class="comment">#接收并显示</span></span><br><span class="line">            recv_msg(udp_socket)</span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">"0"</span> :</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"输入有误请重新输入..."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nane__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main( )</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客上传本地图片</title>
      <link href="/2020/06/18/blog_1/"/>
      <url>/2020/06/18/blog_1/</url>
      
        <content type="html"><![CDATA[<p>文章中如何插入图片</p><a id="more"></a><p>之前在写博客时不是很明确本地图片的上传方式。一直是将图片储存在<strong>有道云笔记</strong>中生成图片链接插入博客中。但之后发现每次刚部署发布的时候是成功的，可以显示图片。但是下一次打开的时候图片还是显示崩溃，之后发现可能是有道云笔记里的图片地址是变化的。</p><p>之后在网上找到一种方法：</p><ol><li><p>在博客文件夹下找到source文件夹，在source文件夹下新建一个images文件夹，将图片统一放在source/images文件夹中，之后通过markdown语法访问它们。</p><p> <img src="/images/test_1.png" alt="配置文件夹"></p></li><li><p>之后通过<code>hexo g,hexo d</code>命令部署上传,图片就可以上传正常显示了。</p><p> <img src="/images/test_2.png" alt="图片上传成功"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库大复习</title>
      <link href="/2020/06/14/Database21/"/>
      <url>/2020/06/14/Database21/</url>
      
        <content type="html"><![CDATA[<p>目录</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="一、为什么要学习数据库"><a href="#一、为什么要学习数据库" class="headerlink" title="一、为什么要学习数据库"></a>一、为什么要学习数据库</h3><h3 id="二、数据库的相关概念"><a href="#二、数据库的相关概念" class="headerlink" title="二、数据库的相关概念"></a>二、数据库的相关概念</h3><ul><li>DBMS</li><li>DB</li><li>SQL</li></ul><h3 id="三、数据库存储数据的特点"><a href="#三、数据库存储数据的特点" class="headerlink" title="三、数据库存储数据的特点"></a>三、数据库存储数据的特点</h3><h3 id="四、初始MySQL"><a href="#四、初始MySQL" class="headerlink" title="四、初始MySQL"></a>四、初始MySQL</h3><ul><li>MySQL产品的介绍</li><li>MySQL产品的安装 ★</li><li>MySQL服务的启动和停止 ★</li><li>MySQL服务的登录和退出 ★</li><li>MySQL的常见命令和语法规范</li></ul><h3 id="五、DQL语言的学习-★"><a href="#五、DQL语言的学习-★" class="headerlink" title="五、DQL语言的学习 ★"></a>五、DQL语言的学习 ★</h3><ul><li>基础查询 ★</li><li>条件查询 ★</li><li>排序查询 ★</li><li>常见函数 ★</li><li>分组函数 ★</li><li>分组查询 ★</li><li>连接查询 ★</li><li>子查询 √</li><li>分页查询 ★</li><li>union联合查询 √</li></ul><h3 id="六、DML语言的学习-★"><a href="#六、DML语言的学习-★" class="headerlink" title="六、DML语言的学习 ★"></a>六、DML语言的学习 ★</h3><ul><li>插入语句</li><li>修改语句</li><li>删除语句</li></ul><h3 id="七、DDL语言的学习"><a href="#七、DDL语言的学习" class="headerlink" title="七、DDL语言的学习"></a>七、DDL语言的学习</h3><ul><li>库和表的管理 √</li><li>常见数据类型介绍 √</li><li>常见约束 √</li></ul><h3 id="八、TCL语言的学习"><a href="#八、TCL语言的学习" class="headerlink" title="八、TCL语言的学习"></a>八、TCL语言的学习</h3><ul><li>事务和事务处理</li></ul><h3 id="九、视图的讲解-√"><a href="#九、视图的讲解-√" class="headerlink" title="九、视图的讲解 √"></a>九、视图的讲解 √</h3><h3 id="十、变量"><a href="#十、变量" class="headerlink" title="十、变量"></a>十、变量</h3><h3 id="十一、存储过程和函数"><a href="#十一、存储过程和函数" class="headerlink" title="十一、存储过程和函数"></a>十一、存储过程和函数</h3><h3 id="十二、流程控制结构"><a href="#十二、流程控制结构" class="headerlink" title="十二、流程控制结构"></a>十二、流程控制结构</h3>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程控制结构</title>
      <link href="/2020/06/13/Database20/"/>
      <url>/2020/06/13/Database20/</url>
      
        <content type="html"><![CDATA[<ul><li>顺序结构</li><li>分支结构</li><li>循环结构</li></ul><a id="more"></a><h2 id="流程控制结构"><a href="#流程控制结构" class="headerlink" title="流程控制结构"></a>流程控制结构</h2><p>顺序、分支、循环</p><h3 id="一、分支结构"><a href="#一、分支结构" class="headerlink" title="一、分支结构"></a>一、分支结构</h3><h4 id="1-if函数"><a href="#1-if函数" class="headerlink" title="1.if函数"></a>1.if函数</h4><p>语法：</p><p><code>if(条件,值1，值2)</code></p><p>功能：</p><p>实现双分支</p><p>应用在begin end中或外面</p><h4 id="2-case结构"><a href="#2-case结构" class="headerlink" title="2.case结构"></a>2.case结构</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况1：类似于switch</span></span><br><span class="line">case 变量或表达式</span><br><span class="line">when 值1 then 语句1;</span><br><span class="line">when 值2 then 语句2;</span><br><span class="line">...</span><br><span class="line">else 语句n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#情况2：</span></span><br><span class="line">case</span><br><span class="line">when 条件1 then 语句1;</span><br><span class="line">when 条件2 then 语句2;</span><br><span class="line">...</span><br><span class="line">else 语句n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>应用在begin end 中或外面</p><h4 id="3-if结构"><a href="#3-if结构" class="headerlink" title="3.if结构"></a>3.if结构</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if 条件1 then 语句1;</span><br><span class="line">elseif 条件2 then 语句2;</span><br><span class="line">....</span><br><span class="line">else 语句n;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br></pre></td></tr></table></figure><p>功能：</p><p>类似于多重if</p><p>只能应用在begin end 中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：创建函数，实现传入成绩，如果成绩&gt;90,返回A，如果成绩&gt;80,返回B，如果成绩&gt;60,返回C，否则返回D</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> test_if(score <span class="built_in">FLOAT</span>) <span class="keyword">RETURNS</span> <span class="built_in">CHAR</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> ch <span class="built_in">CHAR</span> <span class="keyword">DEFAULT</span> <span class="string">'A'</span>;</span><br><span class="line">IF score&gt;90 THEN SET ch='A';</span><br><span class="line">ELSE IF score&gt;80 THEN SET ch='B';</span><br><span class="line">ELSE IF score&gt;60 THEN SET ch='C';</span><br><span class="line">ELSE <span class="keyword">SET</span> ch=<span class="string">'D'</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">RETURN ch;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> test_if(<span class="number">87</span>)$</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：创建存储过程，如果工资&lt;2000,则删除，如果5000&gt;工资&gt;2000,则涨工资1000，否则涨工资500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_if_pro(<span class="keyword">IN</span> sal <span class="keyword">DOUBLE</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">IF</span> sal&lt;<span class="number">2000</span> <span class="keyword">THEN</span> <span class="keyword">DELETE</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> employees.salary=sal;</span><br><span class="line">ELSEIF sal&gt;=2000 AND sal&lt;5000 THEN UPDATE employees SET salary=salary+1000 WHERE employees.`salary`=sal;</span><br><span class="line">ELSE <span class="keyword">UPDATE</span> employees <span class="keyword">SET</span> salary=salary+<span class="number">500</span> <span class="keyword">WHERE</span> employees.<span class="string">`salary`</span>=sal;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_if_pro(<span class="number">2100</span>)$</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：创建函数，实现传入成绩，如果成绩&gt;90,返回A，如果成绩&gt;80,返回B，如果成绩&gt;60,返回C，否则返回D</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> test_case(score <span class="built_in">FLOAT</span>) <span class="keyword">RETURNS</span> <span class="built_in">CHAR</span></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> ch <span class="built_in">CHAR</span> <span class="keyword">DEFAULT</span> <span class="string">'A'</span>;</span><br><span class="line"></span><br><span class="line">CASE </span><br><span class="line">WHEN score&gt;90 THEN SET ch='A';</span><br><span class="line">WHEN score&gt;80 THEN SET ch='B';</span><br><span class="line">WHEN score&gt;60 THEN SET ch='C';</span><br><span class="line">ELSE <span class="keyword">SET</span> ch=<span class="string">'D'</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br><span class="line"></span><br><span class="line">RETURN ch;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> test_case(<span class="number">56</span>)$</span><br></pre></td></tr></table></figure><h3 id="二、循环结构"><a href="#二、循环结构" class="headerlink" title="二、循环结构"></a>二、循环结构</h3><p>分类：</p><p>while、loop、repeat</p><p>循环控制：</p><p>iterate类似于 continue，继续，结束本次循环，继续下一次</p><p>leave 类似于  break，跳出，结束当前所在的循环</p><h4 id="1-while"><a href="#1-while" class="headerlink" title="1.while"></a>1.while</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【标签:】while 循环条件 <span class="keyword">do</span></span><br><span class="line">循环体;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span>【 标签】;</span><br></pre></td></tr></table></figure><p>联想：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while(循环条件)&#123;</span><br><span class="line"></span><br><span class="line">循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-loop"><a href="#2-loop" class="headerlink" title="2.loop"></a>2.loop</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【标签:】loop</span><br><span class="line">循环体;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">loop</span> 【标签】;</span><br></pre></td></tr></table></figure><p>可以用来模拟简单的死循环</p><h4 id="3-repeat"><a href="#3-repeat" class="headerlink" title="3.repeat"></a>3.repeat</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">【标签：】repeat</span><br><span class="line">循环体;</span><br><span class="line">until 结束循环的条件</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">repeat</span> 【标签】;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.没有添加循环控制语句</span></span><br><span class="line"><span class="comment">#案例：批量插入，根据次数插入到admin表中多条记录</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> pro_while1$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> pro_while1(<span class="keyword">IN</span> insertCount <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">WHILE i&lt;=insertCount DO</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">admin</span>(username,<span class="string">`password`</span>) <span class="keyword">VALUES</span>(<span class="keyword">CONCAT</span>(<span class="string">'Rose'</span>,i),<span class="string">'666'</span>);</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> pro_while1(<span class="number">100</span>)$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int i=1;</span></span><br><span class="line"><span class="comment">while(i&lt;=insertcount)&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">i++;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2.添加leave语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#案例：批量插入，根据次数插入到admin表中多条记录，如果次数&gt;20则停止</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">admin</span>$</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> test_while1$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_while1(<span class="keyword">IN</span> insertCount <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">a:WHILE i&lt;=insertCount DO</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">admin</span>(username,<span class="string">`password`</span>) <span class="keyword">VALUES</span>(<span class="keyword">CONCAT</span>(<span class="string">'xiaohua'</span>,i),<span class="string">'0000'</span>);</span><br><span class="line">IF i&gt;=20 THEN LEAVE a;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span> a;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_while1(<span class="number">100</span>)$</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.添加iterate语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#案例：批量插入，根据次数插入到admin表中多条记录，只插入偶数次</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">admin</span>$</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> test_while1$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> test_while1(<span class="keyword">IN</span> insertCount <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">a:WHILE i&lt;=insertCount DO</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line">IF MOD(i,2)!=0 THEN ITERATE a;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">admin</span>(username,<span class="string">`password`</span>) <span class="keyword">VALUES</span>(<span class="keyword">CONCAT</span>(<span class="string">'xiaohua'</span>,i),<span class="string">'0000'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span> a;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> test_while1(<span class="number">100</span>)$</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int i=0;</span></span><br><span class="line"><span class="comment">while(i&lt;=insertCount)&#123;</span></span><br><span class="line"><span class="comment">i++;</span></span><br><span class="line"><span class="comment">if(i%2==0)&#123;</span></span><br><span class="line"><span class="comment">continue;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">插入</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存储过程和函数</title>
      <link href="/2020/06/13/Database19/"/>
      <url>/2020/06/13/Database19/</url>
      
        <content type="html"><![CDATA[<ul><li>存储过程</li><li>函数</li></ul><a id="more"></a><h1 id="存储过程和函数"><a href="#存储过程和函数" class="headerlink" title="存储过程和函数"></a>存储过程和函数</h1><p>存储过程和函数：类似于java中的方法</p><p>好处：</p><ol><li>提高代码的重用性</li><li>简化操作</li></ol><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><p>含义：</p><p>一组预先编译好的SQL语句的集合，理解成批处理语句</p><ol><li>提高代码的重用性</li><li>简化操作</li><li>减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</li></ol><h3 id="一、创建语法"><a href="#一、创建语法" class="headerlink" title="一、创建语法"></a>一、创建语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程名(参数列表)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">存储过程体（一组合法的<span class="keyword">SQL</span>语句）</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li><p>参数列表包含三部分</p><p> 参数模式  参数名  参数类型</p><p> 举例：</p><p> in stuname varchar(20)</p><p> 参数模式：</p><p> in：该参数可以作为输入，也就是该参数需要调用方传入值</p><p> out：该参数可以作为输出，也就是该参数可以作为返回值</p><p> inout：该参数既可以作为输入又可以作为输出，也就是该参数既需要传入值，又可以返回值</p></li><li><p>如果存储过程体仅仅只有一句话，begin end可以省略</p><p> 存储过程体中的每条sql语句的结尾要求必须加分号。</p><p> 存储过程的结尾可以使用 delimiter 重新设置</p><p> 语法：</p><p> delimiter 结束标记</p><p> 案例：</p><p> delimiter $</p></li></ol><h3 id="二、调用语法"><a href="#二、调用语法" class="headerlink" title="二、调用语法"></a>二、调用语法</h3><p><code>CALL 存储过程名(实参列表);</code></p><h4 id="1-空参列表"><a href="#1-空参列表" class="headerlink" title="1.空参列表"></a>1.空参列表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：插入到admin表中五条记录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">admin</span>;</span><br><span class="line"></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp1()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">admin</span>(username,<span class="string">`password`</span>) </span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'john1'</span>,<span class="string">'0000'</span>),(<span class="string">'lily'</span>,<span class="string">'0000'</span>),(<span class="string">'rose'</span>,<span class="string">'0000'</span>),(<span class="string">'jack'</span>,<span class="string">'0000'</span>),(<span class="string">'tom'</span>,<span class="string">'0000'</span>);</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> myp1()$</span><br></pre></td></tr></table></figure><h4 id="2-创建带in模式参数的存储过程"><a href="#2-创建带in模式参数的存储过程" class="headerlink" title="2.创建带in模式参数的存储过程"></a>2.创建带in模式参数的存储过程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：创建存储过程实现 根据女神名，查询对应的男神信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp2(<span class="keyword">IN</span> beautyName <span class="built_in">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.*</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.id = b.boyfriend_id</span><br><span class="line"><span class="keyword">WHERE</span> b.name=beautyName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> myp2(<span class="string">'柳岩'</span>)$</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2 ：创建存储过程实现，用户是否登录成功</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp4(<span class="keyword">IN</span> username <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">IN</span> <span class="keyword">PASSWORD</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">result</span> <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;<span class="comment">#声明并初始化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> <span class="keyword">result</span><span class="comment">#赋值</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">admin</span></span><br><span class="line"><span class="keyword">WHERE</span> admin.username = username</span><br><span class="line"><span class="keyword">AND</span> admin.password = <span class="keyword">PASSWORD</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="keyword">result</span>&gt;<span class="number">0</span>,<span class="string">'成功'</span>,<span class="string">'失败'</span>);<span class="comment">#使用</span></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> myp3(<span class="string">'张飞'</span>,<span class="string">'8888'</span>)$</span><br></pre></td></tr></table></figure><h4 id="3-创建out-模式参数的存储过程"><a href="#3-创建out-模式参数的存储过程" class="headerlink" title="3.创建out 模式参数的存储过程"></a>3.创建out 模式参数的存储过程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：根据输入的女神名，返回对应的男神名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp6(<span class="keyword">IN</span> beautyName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> boyName <span class="built_in">VARCHAR</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.boyname <span class="keyword">INTO</span> boyname</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span></span><br><span class="line">beauty b <span class="keyword">ON</span> b.boyfriend_id = bo.id</span><br><span class="line"><span class="keyword">WHERE</span> b.name=beautyName ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：根据输入的女神名，返回对应的男神名和魅力值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp7(<span class="keyword">IN</span> beautyName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> boyName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> usercp <span class="built_in">INT</span>) </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> boys.boyname ,boys.usercp <span class="keyword">INTO</span> boyname,usercp</span><br><span class="line"><span class="keyword">FROM</span> boys </span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span></span><br><span class="line">beauty b <span class="keyword">ON</span> b.boyfriend_id = boys.id</span><br><span class="line"><span class="keyword">WHERE</span> b.name=beautyName ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">CALL</span> myp7(<span class="string">'小昭'</span>,@<span class="keyword">name</span>,@cp)$</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">name</span>,@cp$</span><br></pre></td></tr></table></figure><h4 id="4-创建带inout模式参数的存储过程"><a href="#4-创建带inout模式参数的存储过程" class="headerlink" title="4.创建带inout模式参数的存储过程"></a>4.创建带inout模式参数的存储过程</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：传入a和b两个值，最终a和b都翻倍并返回</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> myp8(INOUT a <span class="built_in">INT</span> ,INOUT b <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> a=a*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">SET</span> b=b*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line"><span class="keyword">SET</span> @m=<span class="number">10</span>$</span><br><span class="line"><span class="keyword">SET</span> @n=<span class="number">20</span>$</span><br><span class="line"><span class="keyword">CALL</span> myp8(@m,@n)$</span><br><span class="line"><span class="keyword">SELECT</span> @m,@n$</span><br></pre></td></tr></table></figure><h3 id="三、删除存储过程"><a href="#三、删除存储过程" class="headerlink" title="三、删除存储过程"></a>三、删除存储过程</h3><p>语法：</p><p><code>drop procedure 存储过程名</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> p1;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> p2,p3;<span class="comment">#×</span></span><br></pre></td></tr></table></figure><h3 id="四、查看存储过程的信息"><a href="#四、查看存储过程的信息" class="headerlink" title="四、查看存储过程的信息"></a>四、查看存储过程的信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DESC myp2;×</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span>  myp2;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>含义：</p><p>一组预先编译好的SQL语句的集合，理解成批处理语句</p><ol><li>提高代码的重用性</li><li>简化操作</li><li>减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</li></ol><p><strong>区别：</strong></p><p><em>存储过程：</em></p><p>可以有0个返回，也可以有多个返回，适合做批量插入、批量更新</p><p><em>函数：</em></p><p>有且仅有1个返回，适合做处理数据后返回一个结果</p><h3 id="一、创建语法-1"><a href="#一、创建语法-1" class="headerlink" title="一、创建语法"></a>一、创建语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> 函数名(参数列表) <span class="keyword">RETURNS</span> 返回类型</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">函数体</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li><p>参数列表 包含两部分：</p><p> 参数名 参数类型</p></li><li><p>函数体：肯定会有return语句，如果没有会报错</p><p> 如果return语句没有放在函数体的最后也不报错，但不建议</p><p> return 值;</p></li><li><p>函数体中仅有一句话，则可以省略begin end</p></li><li><p>使用 delimiter语句设置结束标记</p></li></ol><h3 id="二、调用语法-1"><a href="#二、调用语法-1" class="headerlink" title="二、调用语法"></a>二、调用语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 函数名(参数列表)</span><br></pre></td></tr></table></figure><h4 id="1-无参有返回"><a href="#1-无参有返回" class="headerlink" title="1.无参有返回"></a>1.无参有返回</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：返回公司的员工个数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf1() <span class="keyword">RETURNS</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> c <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;<span class="comment">#定义局部变量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">INTO</span> c<span class="comment">#赋值</span></span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line">RETURN c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf1()$</span><br></pre></td></tr></table></figure><h4 id="2-有参有返回"><a href="#2-有参有返回" class="headerlink" title="2.有参有返回"></a>2.有参有返回</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：根据员工名，返回它的工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf2(empName <span class="built_in">VARCHAR</span>(<span class="number">20</span>)) <span class="keyword">RETURNS</span> <span class="keyword">DOUBLE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @sal=<span class="number">0</span>;<span class="comment">#定义用户变量 </span></span><br><span class="line"><span class="keyword">SELECT</span> salary <span class="keyword">INTO</span> @sal   <span class="comment">#赋值</span></span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name = empName;</span><br><span class="line"></span><br><span class="line">RETURN @sal;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf2(<span class="string">'k_ing'</span>) $</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：根据部门名，返回该部门的平均工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf3(deptName <span class="built_in">VARCHAR</span>(<span class="number">20</span>)) <span class="keyword">RETURNS</span> <span class="keyword">DOUBLE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> sal <span class="keyword">DOUBLE</span> ;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">INTO</span> sal</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.department_id = d.department_id</span><br><span class="line"><span class="keyword">WHERE</span> d.department_name=deptName;</span><br><span class="line">RETURN sal;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> myf3(<span class="string">'IT'</span>)$</span><br></pre></td></tr></table></figure><h3 id="三、查看函数"><a href="#三、查看函数" class="headerlink" title="三、查看函数"></a>三、查看函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> myf3;</span><br></pre></td></tr></table></figure><h3 id="四、删除函数"><a href="#四、删除函数" class="headerlink" title="四、删除函数"></a>四、删除函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> myf3;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例</span></span><br><span class="line"><span class="comment">#一、创建函数，实现传入两个float，返回二者之和</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> test_fun1(num1 <span class="built_in">FLOAT</span>,num2 <span class="built_in">FLOAT</span>) <span class="keyword">RETURNS</span> <span class="built_in">FLOAT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">SUM</span> <span class="built_in">FLOAT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">SUM</span>=num1+num2;</span><br><span class="line">RETURN SUM;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> test_fun1(<span class="number">1</span>,<span class="number">2</span>)$</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量</title>
      <link href="/2020/06/13/Database18/"/>
      <url>/2020/06/13/Database18/</url>
      
        <content type="html"><![CDATA[<ul><li>系统变量</li><li>自定义变量</li></ul><a id="more"></a><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>系统变量：</p><ul><li>全局变量</li><li>会话变量</li></ul></li><li><p>自定义变量：</p><ul><li>用户变量</li><li>局部变量</li></ul></li></ul><h3 id="一、系统变量"><a href="#一、系统变量" class="headerlink" title="一、系统变量"></a>一、系统变量</h3><p>说明：</p><p>变量由系统定义，不是用户定义，属于服务器层面</p><p>注意：</p><p>全局变量需要添加global关键字，会话变量需要添加session关键字，如果不写，默认会话级别</p><p>使用步骤：</p><ol><li>查看所有系统变量</li></ol><p><code>show global|【session】variables;</code></p><ol start="2"><li>查看满足条件的部分系统变量</li></ol><p><code>show global|【session】 variables like &#39;%char%&#39;;</code></p><ol start="3"><li>查看指定的系统变量的值</li></ol><p><code>select @@global|【session】系统变量名;</code></p><ol start="4"><li><p>为某个系统变量赋值</p><p> 方式一：</p><p> <code>set global|【session】系统变量名=值;</code></p><p> 方式二：</p><p> <code>set @@global|【session】系统变量名=值;</code></p></li></ol><h4 id="1-全局变量"><a href="#1-全局变量" class="headerlink" title="1 全局变量"></a>1 全局变量</h4><p>作用域：</p><p>针对于所有会话（连接）有效，但不能跨重启</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#①查看所有全局变量</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span>;</span><br><span class="line"><span class="comment">#②查看满足条件的部分系统变量</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'%char%'</span>;</span><br><span class="line"><span class="comment">#③查看指定的系统变量的值</span></span><br><span class="line"><span class="keyword">SELECT</span> @@global.autocommit;</span><br><span class="line"><span class="comment">#④为某个系统变量赋值</span></span><br><span class="line"><span class="keyword">SET</span> @@global.autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> autocommit=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h4 id="2-会话变量"><a href="#2-会话变量" class="headerlink" title="2 会话变量"></a>2 会话变量</h4><p>作用域</p><p>针对于当前会话（连接）有效</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#①查看所有会话变量</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">SESSION</span> <span class="keyword">VARIABLES</span>;</span><br><span class="line"><span class="comment">#②查看满足条件的部分会话变量</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">SESSION</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'%char%'</span>;</span><br><span class="line"><span class="comment">#③查看指定的会话变量的值</span></span><br><span class="line"><span class="keyword">SELECT</span> @@autocommit;</span><br><span class="line"><span class="keyword">SELECT</span> @@session.tx_isolation;</span><br><span class="line"><span class="comment">#④为某个会话变量赋值</span></span><br><span class="line"><span class="keyword">SET</span> @@session.tx_isolation=<span class="string">'read-uncommitted'</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">SESSION</span> tx_isolation=<span class="string">'read-committed'</span>;</span><br></pre></td></tr></table></figure><h3 id="二、自定义变量"><a href="#二、自定义变量" class="headerlink" title="二、自定义变量"></a>二、自定义变量</h3><p>说明：</p><p>变量由用户自定义，而不是系统提供的</p><p>使用步骤：</p><ol><li>声明</li><li>赋值</li><li>使用（查看、比较、运算等）</li></ol><h4 id="1-用户变量"><a href="#1-用户变量" class="headerlink" title="1 用户变量"></a>1 用户变量</h4><p>作用域：</p><p>针对于当前会话（连接）有效，作用域同于会话变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#赋值操作符：=或:=</span></span><br><span class="line"><span class="comment">#①声明并初始化</span></span><br><span class="line"><span class="keyword">SET</span> @变量名=值;</span><br><span class="line"><span class="keyword">SET</span> @变量名:=值;</span><br><span class="line"><span class="keyword">SELECT</span> @变量名:=值;</span><br><span class="line"></span><br><span class="line"><span class="comment">#②赋值（更新变量的值）</span></span><br><span class="line"><span class="comment">#方式一：</span></span><br><span class="line"><span class="keyword">SET</span> @变量名=值;</span><br><span class="line"><span class="keyword">SET</span> @变量名:=值;</span><br><span class="line"><span class="keyword">SELECT</span> @变量名:=值;</span><br><span class="line"><span class="comment">#方式二：</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 <span class="keyword">INTO</span> @变量名</span><br><span class="line"><span class="keyword">FROM</span> 表;</span><br><span class="line"></span><br><span class="line"><span class="comment">#③使用（查看变量的值）</span></span><br><span class="line"><span class="keyword">SELECT</span> @变量名;</span><br></pre></td></tr></table></figure><h4 id="2-局部变量"><a href="#2-局部变量" class="headerlink" title="2 局部变量"></a>2 局部变量</h4><p>作用域：</p><p>仅仅在定义它的begin end块中有效</p><p>应用在 begin end中的第一句话</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#①声明</span></span><br><span class="line"><span class="keyword">DECLARE</span> 变量名 类型;</span><br><span class="line"><span class="keyword">DECLARE</span> 变量名 类型 【<span class="keyword">DEFAULT</span> 值】;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#②赋值（更新变量的值）</span></span><br><span class="line"><span class="comment">#方式一：</span></span><br><span class="line"><span class="keyword">SET</span> 局部变量名=值;</span><br><span class="line"><span class="keyword">SET</span> 局部变量名:=值;</span><br><span class="line"><span class="keyword">SELECT</span> 局部变量名:=值;</span><br><span class="line"><span class="comment">#方式二：</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 <span class="keyword">INTO</span> 具备变量名</span><br><span class="line"><span class="keyword">FROM</span> 表;</span><br><span class="line"></span><br><span class="line"><span class="comment">#③使用（查看变量的值）</span></span><br><span class="line"><span class="keyword">SELECT</span> 局部变量名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：声明两个变量，求和并打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用户变量</span></span><br><span class="line"><span class="keyword">SET</span> @m=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> @n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sum</span>=@m+@n;</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">sum</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#局部变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> m <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> n <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">SUM</span> <span class="built_in">INT</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">SUM</span>=m+n;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>;</span><br></pre></td></tr></table></figure><p><strong>用户变量和局部变量的对比</strong></p><table><thead><tr><th>名称</th><th>作用域</th><th>定义位置</th><th>语法</th></tr></thead><tbody><tr><td>用户变量</td><td>当前会话</td><td>会话的任何地方</td><td>加@符号，不用指定类型</td></tr><tr><td>局部变量</td><td>定义它的BEGIN END中</td><td>BEGIN END的第一句话</td><td>一般不用加@,需要指定类型</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视图</title>
      <link href="/2020/06/13/Database17/"/>
      <url>/2020/06/13/Database17/</url>
      
        <content type="html"><![CDATA[<ul><li>创建</li><li>修改</li><li>删除</li><li>查看</li><li>更新</li></ul><a id="more"></a><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>含义：</p><p>虚拟表，和普通表一样使用</p><p>mysql5.1版本出现的新特性，是通过表动态生成的数据</p><table><thead><tr><th>名称</th><th>创建语法的关键字</th><th>是否实际占用物理空间</th><th>使用</th></tr></thead><tbody><tr><td>视图</td><td>create view</td><td>只是保存了sql逻辑</td><td>增删改查，只是一般不能增删改</td></tr><tr><td>表</td><td>create table</td><td>保存了数据</td><td>增删改查</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询姓张的学生名和专业名</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname,majorname</span><br><span class="line"><span class="keyword">FROM</span> stuinfo s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m <span class="keyword">ON</span> s.<span class="string">`majorid`</span>= m.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> s.<span class="string">`stuname`</span> <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> stuname,majorname</span><br><span class="line"><span class="keyword">FROM</span> stuinfo s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> major m <span class="keyword">ON</span> s.<span class="string">`majorid`</span>= m.<span class="string">`id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> v1 <span class="keyword">WHERE</span> stuname <span class="keyword">LIKE</span> <span class="string">'张%'</span>;</span><br></pre></td></tr></table></figure><h3 id="一、创建视图"><a href="#一、创建视图" class="headerlink" title="一、创建视图"></a>一、创建视图</h3><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.查询姓名中包含a字符的员工名、部门名和工种信息</span></span><br><span class="line"><span class="comment">#①创建</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.department_id  = d.department_id</span><br><span class="line"><span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> j.job_id  = e.job_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#②使用</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv1 <span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%a%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2.查询各部门的平均工资级别</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①创建视图查看每个部门的平均工资</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv2</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#②使用</span></span><br><span class="line"><span class="keyword">SELECT</span> myv2.<span class="string">`ag`</span>,g.grade_level</span><br><span class="line"><span class="keyword">FROM</span> myv2</span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> myv2.<span class="string">`ag`</span> <span class="keyword">BETWEEN</span> g.<span class="string">`lowest_sal`</span> <span class="keyword">AND</span> g.<span class="string">`highest_sal`</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.查询平均工资最低的部门信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> ag <span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查询平均工资最低的部门名和工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv3</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> ag <span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.*,m.ag</span><br><span class="line"><span class="keyword">FROM</span> myv3 m</span><br><span class="line"><span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> m.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span>;</span><br></pre></td></tr></table></figure><h3 id="二、视图的修改"><a href="#二、视图的修改" class="headerlink" title="二、视图的修改"></a>二、视图的修改</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">view</span>  视图名</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv3</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv3</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id;</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> 视图名</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> myv3</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h3 id="三、删除视图"><a href="#三、删除视图" class="headerlink" title="三、删除视图"></a>三、删除视图</h3><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名,视图名,...;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> emp_v1,emp_v2,myv3;</span><br></pre></td></tr></table></figure><h3 id="四、查看视图"><a href="#四、查看视图" class="headerlink" title="四、查看视图"></a>四、查看视图</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DESC myv3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv3;</span><br></pre></td></tr></table></figure><h3 id="五、视图的更新"><a href="#五、视图的更新" class="headerlink" title="五、视图的更新"></a>五、视图的更新</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,email,salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="keyword">IFNULL</span>(commission_pct,<span class="number">0</span>)) <span class="string">"annual salary"</span></span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,email</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="1-插入"><a href="#1-插入" class="headerlink" title="1.插入"></a>1.插入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> myv1 <span class="keyword">VALUES</span>(<span class="string">'张飞'</span>,<span class="string">'zf@qq.com'</span>);</span><br></pre></td></tr></table></figure><h4 id="2-修改"><a href="#2-修改" class="headerlink" title="2.修改"></a>2.修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> myv1 <span class="keyword">SET</span> last_name = <span class="string">'张无忌'</span> <span class="keyword">WHERE</span> last_name=<span class="string">'张飞'</span>;</span><br></pre></td></tr></table></figure><h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> myv1 <span class="keyword">WHERE</span> last_name = <span class="string">'张无忌'</span>;</span><br></pre></td></tr></table></figure><p><strong>具备以下特点的视图不允许更新</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#①包含以下关键字的sql语句：分组函数、distinct、group  by、having、union或者union all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary) m,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"><span class="keyword">UPDATE</span> myv1 <span class="keyword">SET</span> m=<span class="number">9000</span> <span class="keyword">WHERE</span> department_id=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#②常量视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv2</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'john'</span> <span class="keyword">NAME</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv2;</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"><span class="keyword">UPDATE</span> myv2 <span class="keyword">SET</span> <span class="keyword">NAME</span>=<span class="string">'lucy'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#③Select中包含子查询</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv3</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_id,(<span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary) <span class="keyword">FROM</span> employees) 最高工资</span><br><span class="line"><span class="keyword">FROM</span> departments;</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv3;</span><br><span class="line"><span class="keyword">UPDATE</span> myv3 <span class="keyword">SET</span> 最高工资=<span class="number">100000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#④join</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv4</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.department_id  = d.department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv4;</span><br><span class="line"><span class="keyword">UPDATE</span> myv4 <span class="keyword">SET</span> last_name  = <span class="string">'张飞'</span> <span class="keyword">WHERE</span> last_name=<span class="string">'Whalen'</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> myv4 <span class="keyword">VALUES</span>(<span class="string">'陈真'</span>,<span class="string">'xxxx'</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#⑤from一个不能更新的视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv5</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv3;</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> myv5 <span class="keyword">SET</span> 最高工资=<span class="number">10000</span> <span class="keyword">WHERE</span> department_id=<span class="number">60</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#⑥where子句的子查询引用了from子句中的表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> myv6</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,email,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span>  manager_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> manager_id <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> myv6;</span><br><span class="line"><span class="keyword">UPDATE</span> myv6 <span class="keyword">SET</span> salary=<span class="number">10000</span> <span class="keyword">WHERE</span> last_name = <span class="string">'k_ing'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCL语言————事务</title>
      <link href="/2020/06/13/Database16/"/>
      <url>/2020/06/13/Database16/</url>
      
        <content type="html"><![CDATA[<ul><li>演示事务的使用步骤</li><li>演示事务对于delete和truncate的处理的区别</li><li>演示savepoint 的使用</li></ul><a id="more"></a><h2 id="TCL"><a href="#TCL" class="headerlink" title="TCL"></a>TCL</h2><p>Transaction Control Language 事务控制语言</p><p>事务：</p><p>一个或一组sql语句组成一个执行单元，这个执行单元要么全部执行，要么全部不执行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：转账</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#张三丰  1000</span></span><br><span class="line"><span class="comment">#郭襄  1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 张三丰的余额=<span class="number">500</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'张三丰'</span></span><br><span class="line">意外</span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 郭襄的余额=<span class="number">1500</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'郭襄'</span></span><br></pre></td></tr></table></figure><p><strong>事务的特性：</strong></p><p><strong>ACID</strong></p><ul><li>原子性：一个事务不可再分割，要么都执行要么都不执行</li><li>一致性：一个事务执行会使数据从一个一致状态切换到另外一个一致状态</li><li>隔离性：一个事务的执行不受其他事务的干扰</li><li>持久性：一个事务一旦提交，则会永久的改变数据库的数据.</li></ul><p><strong>事务的创建</strong></p><ul><li><p>隐式事务：事务没有明显的开启和结束的标记</p><p>  比如insert、update、delete语句</p><p>  delete from 表 where id =1;</p></li><li><p>显式事务：事务具有明显的开启和结束的标记</p><p>  前提：必须先设置自动提交功能为禁用</p><p>  set autocommit=0;</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#步骤1：开启事务</span></span><br><span class="line"><span class="keyword">set</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;可选的</span><br><span class="line"><span class="comment">#步骤2：编写事务中的sql语句(select insert update delete)</span></span><br><span class="line">语句1;</span><br><span class="line">语句2;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#步骤3：结束事务</span></span><br><span class="line"><span class="keyword">commit</span>;提交事务</span><br><span class="line"><span class="keyword">rollback</span>;回滚事务</span><br><span class="line"></span><br><span class="line"><span class="keyword">savepoint</span> 节点名;设置保存点</span><br></pre></td></tr></table></figure><p><strong>并发事务</strong></p><ol><li><p>事务的并发问题是如何发生的？</p><p> 多个事务 同时 操作 同一个数据库的相同数据时</p></li><li><p>并发问题都有哪些？</p><p> 脏读：一个事务读取了其他事务还没有提交的数据，读到的是其他事务“更新”的数据</p><p> 不可重复读：一个事务多次读取，结果不一样</p><p> 幻读：一个事务读取了其他事务还没有提交的数据，只是读到的是 其他事务“插入”的数据</p></li><li><p>如何解决并发问题</p><p> 通过设置隔离级别来解决并发问题</p></li><li><p>隔离级别</p><p> 事务的隔离级别：</p></li></ol><table><thead><tr><th><code></code></th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>read uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>read committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>repeatable read</td><td>×</td><td>×</td><td>√</td></tr><tr><td>serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><p>mysql中默认第三个隔离级别 repeatable read</p><p>oracle中默认第二个隔离级别 read committed</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看隔离级别</span><br><span class="line"><span class="keyword">select</span> @@tx_isolation;</span><br><span class="line">设置隔离级别</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span>|<span class="keyword">global</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> 隔离级别;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">开启事务的语句;</span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 张三丰的余额=<span class="number">500</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'张三丰'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> 表 <span class="keyword">set</span> 郭襄的余额=<span class="number">1500</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'郭襄'</span></span><br><span class="line">结束事务的语句;</span><br></pre></td></tr></table></figure><h3 id="1-演示事务的使用步骤"><a href="#1-演示事务的使用步骤" class="headerlink" title="1.演示事务的使用步骤"></a>1.演示事务的使用步骤</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"><span class="comment">#编写一组事务的语句</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> balance = <span class="number">1000</span> <span class="keyword">WHERE</span> username=<span class="string">'张无忌'</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> balance = <span class="number">1000</span> <span class="keyword">WHERE</span> username=<span class="string">'赵敏'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#结束事务</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br><span class="line"><span class="comment">#commit;</span></span><br></pre></td></tr></table></figure><h3 id="2-演示事务对于delete和truncate的处理的区别"><a href="#2-演示事务对于delete和truncate的处理的区别" class="headerlink" title="2.演示事务对于delete和truncate的处理的区别"></a>2.演示事务对于delete和truncate的处理的区别</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">account</span>;</span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure><h3 id="3-演示savepoint-的使用"><a href="#3-演示savepoint-的使用" class="headerlink" title="3.演示savepoint 的使用"></a>3.演示savepoint 的使用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> autocommit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">account</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">25</span>;</span><br><span class="line"><span class="keyword">SAVEPOINT</span> a;<span class="comment">#设置保存点</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">account</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">28</span>;</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> a;<span class="comment">#回滚到保存点</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【补充】标识列</title>
      <link href="/2020/06/13/Database15/"/>
      <url>/2020/06/13/Database15/</url>
      
        <content type="html"><![CDATA[<ul><li>标识列</li></ul><a id="more"></a><h2 id="标识列"><a href="#标识列" class="headerlink" title="标识列"></a>标识列</h2><p>又称为自增长列</p><p>含义：可以不用手动的插入值，系统提供默认的序列值</p><p>特点：</p><ol><li><p>标识列必须和主键搭配吗？不一定，但要求是一个key</p></li><li><p>一个表可以有几个标识列？至多一个！</p></li><li><p>标识列的类型只能是数值型</p></li><li><p>标识列可以通过 SET auto_increment_increment=3;设置步长</p><p> 可以通过 手动插入值，设置起始值</p></li></ol><h3 id="一、创建表时设置标识列"><a href="#一、创建表时设置标识列" class="headerlink" title="一、创建表时设置标识列"></a>一、创建表时设置标识列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> tab_identity;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_identity(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>  ,</span><br><span class="line"><span class="keyword">NAME</span> <span class="built_in">FLOAT</span> <span class="keyword">UNIQUE</span> AUTO_INCREMENT,</span><br><span class="line">seat <span class="built_in">INT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> tab_identity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_identity(<span class="keyword">id</span>,<span class="keyword">NAME</span>) <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'john'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_identity(<span class="keyword">NAME</span>) <span class="keyword">VALUES</span>(<span class="string">'lucy'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_identity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'%auto_increment%'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> auto_increment_increment=<span class="number">3</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDL语言————常见约束</title>
      <link href="/2020/06/13/Database14/"/>
      <url>/2020/06/13/Database14/</url>
      
        <content type="html"><![CDATA[<ul><li>NOT NULL</li><li>DEFAULT</li><li>PRIMARY KEY</li><li>UNIQUE</li><li>CHECK</li><li>FOREIGN KEY</li></ul><a id="more"></a><h2 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h2><p><strong>含义：</strong></p><p>一种限制，用于限制表中的数据，为了保证表中的数据的准确和可靠性</p><p><strong>分类：六大约束</strong></p><ol><li><p>NOT NULL：非空，用于保证该字段的值不能为空</p><p> 比如姓名、学号等</p></li><li><p>DEFAULT:默认，用于保证该字段有默认值</p><p> 比如性别</p></li><li><p>PRIMARY KEY:主键，用于保证该字段的值具有唯一性，并且非空</p><p> 比如学号、员工编号等</p></li><li><p>UNIQUE:唯一，用于保证该字段的值具有唯一性，可以为空</p><p> 比如座位号</p></li><li><p>CHECK:检查约束【mysql中不支持】</p><p> 比如年龄、性别</p></li><li><p>FOREIGN KEY:外键，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值</p><p> 在从表添加外键约束，用于引用主表中某列的值</p><p> 比如学生表的专业编号，员工表的部门编号，员工表的工种编号</p></li></ol><p><strong>添加约束的时机：</strong></p><ol><li>创建表时</li><li>修改表时</li></ol><p><strong>约束的添加分类：</strong></p><ul><li><p>列级约束：</p><p>  六大约束语法上都支持，但外键约束没有效果</p></li><li><p>表级约束：</p><p>  除了非空、默认，其他的都支持</p></li></ul><p><strong>主键和唯一的大对比：</strong></p><table><thead><tr><th>名称</th><th>保证唯一性</th><th>是否允许为空</th><th>一个表中可以有多少个</th><th>是否允许组合</th></tr></thead><tbody><tr><td>主键</td><td>√</td><td>×</td><td>至多有1个</td><td>√，但不推荐</td></tr><tr><td>外键</td><td>唯一</td><td>√</td><td>√</td><td>可以有多个</td></tr></tbody></table><ol><li><p>区别：</p><p> ①、一个表至多有一个主键，但可以有多个唯一</p><p> ②、主键不允许为空，唯一可以为空</p></li><li><p>相同点</p><p> 都具有唯一性</p><p> 都支持组合键，但不推荐</p></li></ol><p>外键：</p><ol><li><p>要求在从表设置外键关系</p></li><li><p>从表的外键列的类型和主表的关联列的类型要求一致或兼容，名称无要求</p></li><li><p>主表的关联列必须是一个key（一般是主键或唯一）</p></li><li><p>插入数据时，先插入主表，再插入从表</p><p> 删除数据时，先删除从表，再删除主表</p></li></ol><p><strong>可以通过以下两种方式来删除主表的记录</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式一：级联删除</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_stu_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#方式二：级联置空</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_stu_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段名 字段类型 列级约束,</span><br><span class="line">字段名 字段类型,</span><br><span class="line">表级约束</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="一、创建表时添加约束"><a href="#一、创建表时添加约束" class="headerlink" title="一、创建表时添加约束"></a>一、创建表时添加约束</h3><h4 id="1-添加列级约束"><a href="#1-添加列级约束" class="headerlink" title="1.添加列级约束"></a>1.添加列级约束</h4><p>语法：</p><p>直接在字段名和类型后面追加 约束类型即可。</p><p>只支持：默认、非空、主键、唯一</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> students;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,<span class="comment">#主键</span></span><br><span class="line">stuName <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,<span class="comment">#非空</span></span><br><span class="line">gender <span class="built_in">CHAR</span>(<span class="number">1</span>) <span class="keyword">CHECK</span>(gender=<span class="string">'男'</span> <span class="keyword">OR</span> gender =<span class="string">'女'</span>),<span class="comment">#检查</span></span><br><span class="line">seat <span class="built_in">INT</span> <span class="keyword">UNIQUE</span>,<span class="comment">#唯一</span></span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">DEFAULT</span>  <span class="number">18</span>,<span class="comment">#默认约束</span></span><br><span class="line">majorId <span class="built_in">INT</span> <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>)<span class="comment">#外键</span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> major(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">majorName <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看stuinfo中的所有索引，包括主键、外键、唯一</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure><h4 id="2-添加表级约束"><a href="#2-添加表级约束" class="headerlink" title="2.添加表级约束"></a>2.添加表级约束</h4><p>语法：在各个字段的最下面</p><p>【constraint 约束名】 约束类型(字段名)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="built_in">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">seat <span class="built_in">INT</span>,</span><br><span class="line">age <span class="built_in">INT</span>,</span><br><span class="line">majorid <span class="built_in">INT</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>),<span class="comment">#主键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> uq <span class="keyword">UNIQUE</span>(seat),<span class="comment">#唯一键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> ck <span class="keyword">CHECK</span>(gender =<span class="string">'男'</span> <span class="keyword">OR</span> gender  = <span class="string">'女'</span>),<span class="comment">#检查</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>)<span class="comment">#外键</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通用的写法：★</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> stuinfo(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>,</span><br><span class="line">seat <span class="built_in">INT</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">majorid <span class="built_in">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>)</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="二、修改表时添加约束"><a href="#二、修改表时添加约束" class="headerlink" title="二、修改表时添加约束"></a>二、修改表时添加约束</h3><h4 id="1、添加列级约束"><a href="#1、添加列级约束" class="headerlink" title="1、添加列级约束"></a>1、添加列级约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> <span class="keyword">column</span> 字段名 字段类型 新约束;</span><br></pre></td></tr></table></figure><h4 id="2、添加表级约束"><a href="#2、添加表级约束" class="headerlink" title="2、添加表级约束"></a>2、添加表级约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 【<span class="keyword">constraint</span> 约束名】 约束类型(字段名) 【外键的引用】;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> stuinfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stuinfo(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="built_in">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">seat <span class="built_in">INT</span>,</span><br><span class="line">age <span class="built_in">INT</span>,</span><br><span class="line">majorid <span class="built_in">INT</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.添加非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>)  <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.添加默认约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> age <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.添加主键</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①列级约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#②表级约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.添加唯一</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①列级约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> seat <span class="built_in">INT</span> <span class="keyword">UNIQUE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#②表级约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(seat);</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.添加外键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_stuinfo_major <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(majorid) <span class="keyword">REFERENCES</span> major(<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure><h3 id="三、修改表时删除约束"><a href="#三、修改表时删除约束" class="headerlink" title="三、修改表时删除约束"></a>三、修改表时删除约束</h3><h4 id="1-删除非空约束"><a href="#1-删除非空约束" class="headerlink" title="1.删除非空约束"></a>1.删除非空约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> stuname <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h4 id="2-删除默认约束"><a href="#2-删除默认约束" class="headerlink" title="2.删除默认约束"></a>2.删除默认约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> age <span class="built_in">INT</span> ;</span><br></pre></td></tr></table></figure><h4 id="3-删除主键"><a href="#3-删除主键" class="headerlink" title="3.删除主键"></a>3.删除主键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;</span><br></pre></td></tr></table></figure><h4 id="4-删除唯一"><a href="#4-删除唯一" class="headerlink" title="4.删除唯一"></a>4.删除唯一</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> <span class="keyword">INDEX</span> seat;</span><br></pre></td></tr></table></figure><h4 id="5-删除外键"><a href="#5-删除外键" class="headerlink" title="5.删除外键"></a>5.删除外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stuinfo <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> fk_stuinfo_major;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDL语言————常见的数据类型</title>
      <link href="/2020/06/13/Database13/"/>
      <url>/2020/06/13/Database13/</url>
      
        <content type="html"><![CDATA[<ul><li>整型</li><li>小数</li><li>字符型</li><li>日期型</li></ul><a id="more"></a><h2 id="常见的数据类型"><a href="#常见的数据类型" class="headerlink" title="常见的数据类型"></a>常见的数据类型</h2><p>数值型：</p><ul><li>整型</li><li>小数：<ul><li>定点数</li><li>浮点数</li></ul></li><li>字符型：<ul><li>较短的文本：char、varchar</li><li>较长的文本：text、blob（较长的二进制数据）</li></ul></li><li>日期型</li></ul><h3 id="一、整型"><a href="#一、整型" class="headerlink" title="一、整型"></a>一、整型</h3><p>分类：</p><table><thead><tr><th>tinyint</th><th>smallint</th><th>mediumint</th><th>int/integer</th><th>bigint</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td><td>4</td><td>8</td></tr></tbody></table><p>特点：</p><ul><li>如果不设置无符号还是有符号，默认是有符号，如果想设置无符号，需要添加unsigned关键字</li><li>如果插入的数值超出了整型的范围,会报out of range异常，并且插入临界值</li><li>如果不设置长度，会有默认的长度<br>长度代表了显示的最大宽度，如果不够会用0在左边填充，但必须搭配zerofill使用！</li></ul><h4 id="1-如何设置无符号和有符号"><a href="#1-如何设置无符号和有符号" class="headerlink" title="1.如何设置无符号和有符号"></a>1.如何设置无符号和有符号</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> tab_int;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_int(</span><br><span class="line">t1 <span class="built_in">INT</span>(<span class="number">7</span>) ZEROFILL,</span><br><span class="line">t2 <span class="built_in">INT</span>(<span class="number">7</span>) ZEROFILL</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">DESC tab_int;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_int <span class="keyword">VALUES</span>(<span class="number">-123456</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_int <span class="keyword">VALUES</span>(<span class="number">-123456</span>,<span class="number">-123456</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_int <span class="keyword">VALUES</span>(<span class="number">2147483648</span>,<span class="number">4294967296</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_int <span class="keyword">VALUES</span>(<span class="number">123</span>,<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_int;</span><br></pre></td></tr></table></figure><h3 id="二、小数"><a href="#二、小数" class="headerlink" title="二、小数"></a>二、小数</h3><p>分类：</p><ul><li>1.浮点型<br><code>float(M,D)double(M,D)</code></li><li>2.定点型<br><code>dec(M,D)decimal(M,D)</code></li></ul><p>特点：</p><p>①<br>M：整数部位+小数部位</p><p>D：小数部位</p><p>如果超过范围，则插入临界值</p><p>②<br>M和D都可以省略</p><p>如果是decimal，则M默认为10，D默认为0</p><p>如果是float和double，则会根据插入的数值的精度来决定精度</p><p>③定点型的精确度较高，如果要求插入数值的精度较高如货币运算等则考虑使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#测试M和D</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> tab_float;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_float(</span><br><span class="line">f1 <span class="built_in">FLOAT</span>,</span><br><span class="line">f2 <span class="keyword">DOUBLE</span>,</span><br><span class="line">f3 <span class="built_in">DECIMAL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_float;</span><br><span class="line">DESC tab_float;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_float <span class="keyword">VALUES</span>(<span class="number">123.4523</span>,<span class="number">123.4523</span>,<span class="number">123.4523</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_float <span class="keyword">VALUES</span>(<span class="number">123.456</span>,<span class="number">123.456</span>,<span class="number">123.456</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_float <span class="keyword">VALUES</span>(<span class="number">123.4</span>,<span class="number">123.4</span>,<span class="number">123.4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_float <span class="keyword">VALUES</span>(<span class="number">1523.4</span>,<span class="number">1523.4</span>,<span class="number">1523.4</span>);</span><br></pre></td></tr></table></figure><p><strong>原则：<br>所选择的类型越简单越好，能保存数值的类型越小越好</strong></p><h3 id="三、字符型"><a href="#三、字符型" class="headerlink" title="三、字符型"></a>三、字符型</h3><ol><li>较短的文本：</li></ol><p>char</p><p>varchar</p><ol start="2"><li>其他：</li></ol><p>binary和varbinary用于保存较短的二进制</p><p>enum用于保存枚举</p><p>set用于保存集合</p><ol start="3"><li>较长的文本：</li></ol><p>text</p><p>blob(较大的二进制)</p><p>特点：</p><p>| 写法 | M的意思 | 特点 | 空间的耗费 | 效率 |<br>| —- | ——- | —- | ———- | —- ||<br>| char    | char(M)    | 最大的字符数，可以省略，默认为1 固定长度的字符 | 比较耗费   | 高   |<br>| varchar | varchar(M) | 最大的字符数，不可以省略 可变长度的字符        | 比较节省   | 低   |</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_char(</span><br><span class="line">c1 ENUM(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'b'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'c'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'m'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_char <span class="keyword">VALUES</span>(<span class="string">'A'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_set;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_set(</span><br><span class="line"></span><br><span class="line">s1 <span class="keyword">SET</span>(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'A,B'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_set <span class="keyword">VALUES</span>(<span class="string">'a,c,d'</span>);</span><br></pre></td></tr></table></figure><h3 id="四、日期型"><a href="#四、日期型" class="headerlink" title="四、日期型"></a>四、日期型</h3><p>分类：</p><p>date只保存日期</p><p>time 只保存时间</p><p>year只保存年</p><p>datetime保存日期+时间</p><p>timestamp保存日期+时间</p><p>特点：</p><table><thead><tr><th>名称</th><th>字节</th><th>范围</th><th>时区等的影响</th></tr></thead><tbody><tr><td>datetime</td><td>8</td><td>1000——9999</td><td>不受</td></tr><tr><td>timestamp</td><td>4</td><td>1970-2038</td><td>受</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_date(</span><br><span class="line">t1 DATETIME,</span><br><span class="line">t2 <span class="built_in">TIMESTAMP</span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_date <span class="keyword">VALUES</span>(<span class="keyword">NOW</span>(),<span class="keyword">NOW</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tab_date;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'time_zone'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">time_zone</span>=<span class="string">'+9:00'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDL语言————库和表的管理</title>
      <link href="/2020/06/13/Database12/"/>
      <url>/2020/06/13/Database12/</url>
      
        <content type="html"><![CDATA[<ul><li>库的管理</li><li>表的管理</li></ul><a id="more"></a><h2 id="库和表的管理"><a href="#库和表的管理" class="headerlink" title="库和表的管理"></a>库和表的管理</h2><p>一、库的管理</p><p>创建、修改、删除</p><p>二、表的管理</p><p>创建、修改、删除</p><p>创建： create<br>修改： alter<br>删除： drop</p><h3 id="一、库的管理"><a href="#一、库的管理" class="headerlink" title="一、库的管理"></a>一、库的管理</h3><h4 id="1、库的创建"><a href="#1、库的创建" class="headerlink" title="1、库的创建"></a>1、库的创建</h4><p>语法：</p><p><code>create database  [if not exists]库名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：创建库Books</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> books ;</span><br></pre></td></tr></table></figure><h4 id="2、库的修改"><a href="#2、库的修改" class="headerlink" title="2、库的修改"></a>2、库的修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sql版本5.1.7中有，新版本不支持</span></span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">DATABASE</span> books <span class="keyword">TO</span> 新库名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更改库的字符集</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> books <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> gbk;</span><br></pre></td></tr></table></figure><h4 id="3、库的删除"><a href="#3、库的删除" class="headerlink" title="3、库的删除"></a>3、库的删除</h4><p><code>DROP DATABASE IF EXISTS books;</code></p><h3 id="二、表的管理"><a href="#二、表的管理" class="headerlink" title="二、表的管理"></a>二、表的管理</h3><h4 id="1-表的创建-★"><a href="#1-表的创建-★" class="headerlink" title="1.表的创建 ★"></a>1.表的创建 ★</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">...</span><br><span class="line">列名 列的类型【(长度) 约束】</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：创建表Book</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> book(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,<span class="comment">#编号</span></span><br><span class="line">bName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="comment">#图书名</span></span><br><span class="line">price <span class="keyword">DOUBLE</span>,<span class="comment">#价格</span></span><br><span class="line">authorId  <span class="built_in">INT</span>,<span class="comment">#作者编号</span></span><br><span class="line">publishDate DATETIME<span class="comment">#出版日期</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：创建表author</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> author(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">au_name <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">nation <span class="built_in">VARCHAR</span>(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="2-表的修改"><a href="#2-表的修改" class="headerlink" title="2.表的修改"></a>2.表的修改</h4><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span>|<span class="keyword">drop</span>|<span class="keyword">modify</span>|<span class="keyword">change</span> <span class="keyword">column</span> 列名 【列类型 约束】;</span><br></pre></td></tr></table></figure><ul><li>修改列名</li><li>修改列的类型或约束</li><li>添加新列</li><li>删除列</li><li>修改表名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#①修改列名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> book <span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> publishdate pubDate DATETIME;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#②修改列的类型或约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> book <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> pubdate <span class="built_in">TIMESTAMP</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#③添加新列</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> author <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> annual <span class="keyword">DOUBLE</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">#④删除列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> book_author <span class="keyword">DROP</span> <span class="keyword">COLUMN</span>  annual;</span><br><span class="line"><span class="comment">#⑤修改表名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> author <span class="keyword">RENAME</span> <span class="keyword">TO</span> book_author;</span><br></pre></td></tr></table></figure><h4 id="3-表的删除"><a href="#3-表的删除" class="headerlink" title="3.表的删除"></a>3.表的删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> book_author;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通用的写法：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> 旧库名;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 新库名;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> 旧表名;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span>  表名();</span><br></pre></td></tr></table></figure><h4 id="4-表的复制"><a href="#4-表的复制" class="headerlink" title="4.表的复制"></a>4.表的复制</h4><h5 id="1-仅仅复制表的结构"><a href="#1-仅仅复制表的结构" class="headerlink" title="1.仅仅复制表的结构"></a>1.仅仅复制表的结构</h5><p>CREATE TABLE copy LIKE author;</p><h5 id="2-复制表的结构-数据"><a href="#2-复制表的结构-数据" class="headerlink" title="2.复制表的结构+数据"></a>2.复制表的结构+数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy2</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> author;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只复制部分数据</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy3</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,au_name</span><br><span class="line"><span class="keyword">FROM</span> author</span><br><span class="line"><span class="keyword">WHERE</span> nation=<span class="string">'中国'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#仅仅复制某些字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> copy4</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,au_name</span><br><span class="line"><span class="keyword">FROM</span> author</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DML语言</title>
      <link href="/2020/06/12/Database11/"/>
      <url>/2020/06/12/Database11/</url>
      
        <content type="html"><![CDATA[<ul><li>插入语句</li><li>修改语句</li><li>删除语句</li></ul><a id="more"></a><h2 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h2><p>数据操作语言：</p><p>插入：insert</p><p>修改：update</p><p>删除：delete</p><h3 id="一、插入语句"><a href="#一、插入语句" class="headerlink" title="一、插入语句"></a>一、插入语句</h3><h4 id="方式一：经典的插入"><a href="#方式一：经典的插入" class="headerlink" title="方式一：经典的插入"></a>方式一：经典的插入</h4><p>语法：</p><figure class="highlight plain"><figcaption><span>into 表名(列名,...) values(值1,...);```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 插入的值的类型要与列的类型一致或兼容</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;sql</span><br><span class="line">INSERT INTO beauty(id,NAME,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">VALUES(13,&#39;唐艺昕&#39;,&#39;女&#39;,&#39;1990-4-23&#39;,&#39;1898888888&#39;,NULL,2);</span><br></pre></td></tr></table></figure><ol start="2"><li>不可以为null的列必须插入值。可以为null的列如何插入值？</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式一：</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">id</span>,<span class="keyword">NAME</span>,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">13</span>,<span class="string">'唐艺昕'</span>,<span class="string">'女'</span>,<span class="string">'1990-4-23'</span>,<span class="string">'1898888888'</span>,<span class="literal">NULL</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式二：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">id</span>,<span class="keyword">NAME</span>,sex,phone)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">15</span>,<span class="string">'娜扎'</span>,<span class="string">'女'</span>,<span class="string">'1388888888'</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>列的顺序是否可以调换</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">NAME</span>,sex,<span class="keyword">id</span>,phone)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'蒋欣'</span>,<span class="string">'女'</span>,<span class="number">16</span>,<span class="string">'110'</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>列数和值的个数必须一致</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">NAME</span>,sex,<span class="keyword">id</span>,phone)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'关晓彤'</span>,<span class="string">'女'</span>,<span class="number">17</span>,<span class="string">'110'</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>可以省略列名，默认所有列，而且列的顺序和表中列的顺序一致</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">18</span>,<span class="string">'张飞'</span>,<span class="string">'男'</span>,<span class="literal">NULL</span>,<span class="string">'119'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名</span><br><span class="line"><span class="keyword">set</span> 列名=值,列名=值,...</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">id</span>=<span class="number">19</span>,<span class="keyword">NAME</span>=<span class="string">'刘涛'</span>,phone=<span class="string">'999'</span>;</span><br></pre></td></tr></table></figure><h5 id="两种方式大pk-★"><a href="#两种方式大pk-★" class="headerlink" title="两种方式大pk ★"></a>两种方式大pk ★</h5><ol><li>方式一支持插入多行,方式二不支持</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">23</span>,<span class="string">'唐艺昕1'</span>,<span class="string">'女'</span>,<span class="string">'1990-4-23'</span>,<span class="string">'1898888888'</span>,<span class="literal">NULL</span>,<span class="number">2</span>)</span><br><span class="line">,(<span class="number">24</span>,<span class="string">'唐艺昕2'</span>,<span class="string">'女'</span>,<span class="string">'1990-4-23'</span>,<span class="string">'1898888888'</span>,<span class="literal">NULL</span>,<span class="number">2</span>)</span><br><span class="line">,(<span class="number">25</span>,<span class="string">'唐艺昕3'</span>,<span class="string">'女'</span>,<span class="string">'1990-4-23'</span>,<span class="string">'1898888888'</span>,<span class="literal">NULL</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>方式一支持子查询，方式二不支持</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">id</span>,<span class="keyword">NAME</span>,phone)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">26</span>,<span class="string">'宋茜'</span>,<span class="string">'11809866'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> beauty(<span class="keyword">id</span>,<span class="keyword">NAME</span>,phone)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,boyname,<span class="string">'1234567'</span></span><br><span class="line"><span class="keyword">FROM</span> boys <span class="keyword">WHERE</span> <span class="keyword">id</span>&lt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="二、修改语句"><a href="#二、修改语句" class="headerlink" title="二、修改语句"></a>二、修改语句</h3><ol><li>修改单表的记录★</li></ol><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名</span><br><span class="line"><span class="keyword">set</span> 列=新值,列=新值,...</span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改多表的记录【补充】</li></ol><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sql92语法：</span></span><br><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名,表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">set</span> 列=值,...</span><br><span class="line"><span class="keyword">where</span> 连接条件</span><br><span class="line"><span class="keyword">and</span> 筛选条件;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sql99语法：</span></span><br><span class="line"><span class="keyword">update</span> 表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">inner</span>|<span class="keyword">left</span>|<span class="keyword">right</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">set</span> 列=值,...</span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure><h4 id="1-修改单表的记录"><a href="#1-修改单表的记录" class="headerlink" title="1.修改单表的记录"></a>1.修改单表的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：修改beauty表中姓唐的女神的电话为13899888899</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> beauty <span class="keyword">SET</span> phone = <span class="string">'13899888899'</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">LIKE</span> <span class="string">'唐%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：修改boys表中id好为2的名称为张飞，魅力值 10</span></span><br><span class="line"><span class="keyword">UPDATE</span> boys <span class="keyword">SET</span> boyname=<span class="string">'张飞'</span>,usercp=<span class="number">10</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="2-修改多表的记录"><a href="#2-修改多表的记录" class="headerlink" title="2.修改多表的记录"></a>2.修改多表的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例 1：修改张无忌的女朋友的手机号为114</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> boys bo</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.<span class="string">`id`</span>=b.<span class="string">`boyfriend_id`</span></span><br><span class="line"><span class="keyword">SET</span> b.<span class="string">`phone`</span>=<span class="string">'119'</span>,bo.<span class="string">`userCP`</span>=<span class="number">1000</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.<span class="string">`boyName`</span>=<span class="string">'张无忌'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：修改没有男朋友的女神的男朋友编号都为2号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> boys bo</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> beauty b <span class="keyword">ON</span> bo.<span class="string">`id`</span>=b.<span class="string">`boyfriend_id`</span></span><br><span class="line"><span class="keyword">SET</span> b.<span class="string">`boyfriend_id`</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.<span class="string">`id`</span> <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> boys;</span><br></pre></td></tr></table></figure><h3 id="三、删除语句"><a href="#三、删除语句" class="headerlink" title="三、删除语句"></a>三、删除语句</h3><p><strong>方式一：delete</strong></p><p>语法：</p><ol><li>单表的删除【★】</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 筛选条件</span><br></pre></td></tr></table></figure><ol start="2"><li>多表的删除【补充】</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sql92语法：</span></span><br><span class="line"><span class="keyword">delete</span> 表<span class="number">1</span>的别名,表<span class="number">2</span>的别名</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名,表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">where</span> 连接条件</span><br><span class="line"><span class="keyword">and</span> 筛选条件;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sql99语法：</span></span><br><span class="line"><span class="keyword">delete</span> 表<span class="number">1</span>的别名,表<span class="number">2</span>的别名</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">inner</span>|<span class="keyword">left</span>|<span class="keyword">right</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名 <span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">where</span> 筛选条件;</span><br></pre></td></tr></table></figure><p><strong>方式二：truncate</strong></p><p>语法：</p><figure class="highlight plain"><figcaption><span>table 表名;```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 方式一：delete</span><br><span class="line"></span><br><span class="line">1. 单表的删除</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;sql</span><br><span class="line">#案例：删除手机号以9结尾的女神信息</span><br><span class="line"></span><br><span class="line">DELETE FROM beauty WHERE phone LIKE &#39;%9&#39;;</span><br><span class="line">SELECT * FROM beauty;</span><br></pre></td></tr></table></figure><ol start="2"><li>多表的删除</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：删除张无忌的女朋友的信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> b</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> boys bo <span class="keyword">ON</span> b.<span class="string">`boyfriend_id`</span> = bo.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.<span class="string">`boyName`</span>=<span class="string">'张无忌'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：删除黄晓明的信息以及他女朋友的信息</span></span><br><span class="line"><span class="keyword">DELETE</span> b,bo</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> boys bo <span class="keyword">ON</span> b.<span class="string">`boyfriend_id`</span>=bo.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> bo.<span class="string">`boyName`</span>=<span class="string">'黄晓明'</span>;</span><br></pre></td></tr></table></figure><h4 id="方式二：truncate语句"><a href="#方式二：truncate语句" class="headerlink" title="方式二：truncate语句"></a>方式二：truncate语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：将魅力值&gt;100的男神信息删除</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> boys ;</span><br></pre></td></tr></table></figure><h3 id="delete-pk-truncate【面试题★】"><a href="#delete-pk-truncate【面试题★】" class="headerlink" title="delete pk truncate【面试题★】"></a>delete pk truncate【面试题★】</h3><ol><li>delete 可以加where 条件，truncate不能加</li><li>truncate删除，效率高一丢丢</li><li>假如要删除的表中有自增长列，</li></ol><p>如果用delete删除后，再插入数据，自增长列的值从断点开始，</p><p>而truncate删除后，再插入数据，自增长列的值从1开始。<br>4. truncate删除没有返回值，delete删除有返回值<br>5. truncate删除不能回滚，delete删除可以回滚.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> boys;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> boys;</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> boys;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> boys (boyname,usercp)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'张飞'</span>,<span class="number">100</span>),(<span class="string">'刘备'</span>,<span class="number">100</span>),(<span class="string">'关云长'</span>,<span class="number">100</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————联合查询</title>
      <link href="/2020/06/12/Database10/"/>
      <url>/2020/06/12/Database10/</url>
      
        <content type="html"><![CDATA[<ul><li>语法</li><li>应用场景</li><li>特点</li><li>案例</li></ul><a id="more"></a><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>union 联合 合并：将多条查询语句的结果合并成一个结果</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询语句1</span><br><span class="line">union</span><br><span class="line">查询语句2</span><br><span class="line">union</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时</p><h3 id="特点：★"><a href="#特点：★" class="headerlink" title="特点：★"></a>特点：★</h3><ol><li>要求多条查询语句的查询列数是一致的！</li><li>要求多条查询语句的查询的每一列的类型和顺序最好一致</li><li>union关键字默认去重，如果使用union all 可以包含重复项</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入的案例：查询部门编号&gt;90或邮箱包含a的员工信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%a%'</span> <span class="keyword">OR</span> department_id&gt;<span class="number">90</span>;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees  <span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%a%'</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees  <span class="keyword">WHERE</span> department_id&gt;<span class="number">90</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询中国用户中男性的信息以及外国用户中年男性的用户信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,cname <span class="keyword">FROM</span> t_ca <span class="keyword">WHERE</span> csex=<span class="string">'男'</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> t_id,tname <span class="keyword">FROM</span> t_ua <span class="keyword">WHERE</span> tGender=<span class="string">'male'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————分页查询</title>
      <link href="/2020/06/11/Database09/"/>
      <url>/2020/06/11/Database09/</url>
      
        <content type="html"><![CDATA[<ul><li>应用场景</li><li>语法</li><li>特点</li><li>案例</li></ul><a id="more"></a><h2 id="分页查询-★"><a href="#分页查询-★" class="headerlink" title="分页查询 ★"></a>分页查询 ★</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>当要显示的数据，一页显示不全，需要分页提交sql请求</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line">【<span class="keyword">join</span> <span class="keyword">type</span> <span class="keyword">join</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line"><span class="keyword">where</span> 筛选条件</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 分组字段</span><br><span class="line"><span class="keyword">having</span> 分组后的筛选</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序的字段】</span><br><span class="line"><span class="keyword">limit</span> 【<span class="keyword">offset</span>,】<span class="keyword">size</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#offset要显示条目的起始索引（起始索引从0开始）</span></span><br><span class="line"><span class="comment">#size 要显示的条目个数</span></span><br></pre></td></tr></table></figure><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>limit语句放在查询语句的最后</li><li>公式</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">要显示的页数 page，每页的条目数size</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line"><span class="keyword">limit</span> (page<span class="number">-1</span>)*<span class="keyword">size</span>,<span class="keyword">size</span>;</span><br><span class="line"></span><br><span class="line">size=10</span><br><span class="line">page  </span><br><span class="line">1   0</span><br><span class="line">2   10</span><br><span class="line">3   20</span><br></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询前五条员工信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  employees <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  employees <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询第11条——第25条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  employees <span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">15</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3：有奖金的员工信息，并且工资较高的前10名显示出来</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span> ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言———子查询</title>
      <link href="/2020/06/10/Database08/"/>
      <url>/2020/06/10/Database08/</url>
      
        <content type="html"><![CDATA[<ul><li>select后面</li><li>from后面</li><li>where或having后面★</li><li>exists后面</li></ul><a id="more"></a><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>含义：</p><p>出现在其他语句中的select语句，称为子查询或内查询</p><p>外部的查询语句，称为主查询或外查询</p><p>分类：</p><ul><li><p>按子查询出现的位置：</p><ul><li><p>select后面：<br>  仅仅支持标量子查询</p></li><li><p>from后面：<br>  支持表子查询</p></li><li><p>where或having后面：★</p><p>  标量子查询（单行） √</p><p>  列子查询  （多行） √</p><p>  行子查询</p></li><li><p>exists后面（相关子查询）<br>  表子查询</p></li></ul></li><li><p>按结果集的行列数不同：</p><ul><li>标量子查询（结果集只有一行一列）</li><li>列子查询（结果集只有一列多行）</li><li>行子查询（结果集有一行多列）</li><li>表子查询（结果集一般为多行多列）</li></ul></li></ul><h3 id="一、where或having后面"><a href="#一、where或having后面" class="headerlink" title="一、where或having后面"></a>一、where或having后面</h3><ol><li>标量子查询（单行子查询）</li><li>列子查询（多行子查询）</li><li>行子查询（多列多行）</li></ol><p>特点：</p><ul><li>子查询放在小括号内</li><li>子查询一般放在条件的右侧</li><li><ul><li>标量子查询，一般搭配着单行操作符使用 <code>&gt; &lt; &gt;= &lt;= = &lt;&gt;</code></li><li>列子查询，一般搭配着多行操作符使用<br><code>in、any/some、all</code></li></ul></li><li>子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果</li></ul><h4 id="1-标量子查询★"><a href="#1-标量子查询★" class="headerlink" title="1.标量子查询★"></a>1.标量子查询★</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#案例1：谁的工资比 Abel 高?</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询Abel的工资</span></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name = <span class="string">'Abel'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询员工的信息，满足 salary&gt;①结果</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&gt;(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> last_name = <span class="string">'Abel'</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：返回job_id与141号员工相同，salary比143号员工多的员工 姓名，job_id 和工资</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询141号员工的job_id</span></span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">141</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询143号员工的salary</span></span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">143</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#③查询员工的姓名，job_id 和工资，要求job_id=①并且salary&gt;②</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = (</span><br><span class="line"><span class="keyword">SELECT</span> job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">141</span></span><br><span class="line">) <span class="keyword">AND</span> salary&gt;(</span><br><span class="line"><span class="keyword">SELECT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id = <span class="number">143</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3：返回公司工资最少的员工的last_name,job_id和salary</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询公司的 最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询last_name,job_id和salary，要求salary=①</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary=(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询50号部门的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询每个部门的最低工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"></span><br><span class="line"><span class="comment">#③ 在②基础上筛选，满足min(salary)&gt;①</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">MIN</span>(salary)&gt;(</span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#非法使用标量子查询</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">MIN</span>(salary)&gt;(</span><br><span class="line"><span class="keyword">SELECT</span>  salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id = <span class="number">250</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-列子查询（多行子查询）★"><a href="#2-列子查询（多行子查询）★" class="headerlink" title="2.列子查询（多行子查询）★"></a>2.列子查询（多行子查询）★</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#案例1：返回location_id是1400或1700的部门中的所有员工姓名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询location_id是1400或1700的部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="keyword">IN</span>(<span class="number">1400</span>,<span class="number">1700</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询员工姓名，要求部门号是①列表中的某一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id  &lt;&gt;<span class="keyword">ALL</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">WHERE</span> location_id <span class="keyword">IN</span>(<span class="number">1400</span>,<span class="number">1700</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：返回其它工种中比job_id为‘IT_PROG’工种任一工资低的员工的员工号、姓名、job_id 以及salary</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询job_id为‘IT_PROG’部门任一工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询员工号、姓名、job_id 以及salary，salary&lt;(①)的任意一个</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&lt;<span class="keyword">ANY</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">) <span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&lt;(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">) <span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3：返回其它部门中比job_id为‘IT_PROG’部门所有工资都低的员工   的员工号、姓名、job_id 以及salary</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&lt;<span class="keyword">ALL</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">) <span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,employee_id,job_id,salary</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> salary&lt;(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>( salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id = <span class="string">'IT_PROG'</span></span><br><span class="line"></span><br><span class="line">) <span class="keyword">AND</span> job_id&lt;&gt;<span class="string">'IT_PROG'</span>;</span><br></pre></td></tr></table></figure><h4 id="3、行子查询（结果集一行多列或多行多列）"><a href="#3、行子查询（结果集一行多列或多行多列）" class="headerlink" title="3、行子查询（结果集一行多列或多行多列）"></a>3、行子查询（结果集一行多列或多行多列）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工编号最小并且工资最高的员工信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> (employee_id,salary)=(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(employee_id),<span class="keyword">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询最小的员工编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#②查询最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#③查询员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id=(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(employee_id)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)<span class="keyword">AND</span> salary=(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="二、select后面"><a href="#二、select后面" class="headerlink" title="二、select后面"></a>二、select后面</h3><p>仅仅支持标量子查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询每个部门的员工个数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.*,(</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">WHERE</span> e.department_id = d.<span class="string">`department_id`</span></span><br><span class="line"> ) 个数</span><br><span class="line"> <span class="keyword">FROM</span> departments d;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">#案例2：查询员工号=102的部门名</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> (</span><br><span class="line"><span class="keyword">SELECT</span> department_name,e.department_id</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees e</span><br><span class="line"><span class="keyword">ON</span> d.department_id=e.department_id</span><br><span class="line"><span class="keyword">WHERE</span> e.employee_id=<span class="number">102</span></span><br><span class="line"></span><br><span class="line">) 部门名;</span><br></pre></td></tr></table></figure><h3 id="三、from后面"><a href="#三、from后面" class="headerlink" title="三、from后面"></a>三、from后面</h3><p>将子查询结果充当一张表，要求必须起别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询每个部门的平均工资的工资等级</span></span><br><span class="line"><span class="comment">#①查询每个部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> job_grades;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#②连接①的结果集和job_grades表，筛选条件平均工资 between lowest_sal and highest_sal</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span>  ag_dep.*,g.<span class="string">`grade_level`</span></span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) ag,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line">) ag_dep</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> ag_dep.ag <span class="keyword">BETWEEN</span> lowest_sal <span class="keyword">AND</span> highest_sal;</span><br></pre></td></tr></table></figure><h3 id="四、exists后面（相关子查询）"><a href="#四、exists后面（相关子查询）" class="headerlink" title="四、exists后面（相关子查询）"></a>四、exists后面（相关子查询）</h3><p>语法：</p><p>exists(完整的查询语句)</p><p>结果：<br>1或0</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> employee_id <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> salary=<span class="number">300000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询有员工的部门名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#in</span></span><br><span class="line"><span class="keyword">SELECT</span> department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="string">`department_id`</span> <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#exists</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="string">`department_id`</span>=e.<span class="string">`department_id`</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询没有女朋友的男神信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#in</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> bo.*</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">WHERE</span> bo.id <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> boyfriend_id</span><br><span class="line"><span class="keyword">FROM</span> beauty</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#exists</span></span><br><span class="line"><span class="keyword">SELECT</span> bo.*</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> boyfriend_id</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">WHERE</span> bo.<span class="string">`id`</span>=b.<span class="string">`boyfriend_id`</span></span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言———连接查询</title>
      <link href="/2020/06/10/Database07/"/>
      <url>/2020/06/10/Database07/</url>
      
        <content type="html"><![CDATA[<ul><li>含义</li><li>分类<ul><li>sql92标准</li><li>sql99标准</li></ul></li></ul><a id="more"></a><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><h3 id="1-含义"><a href="#1-含义" class="headerlink" title="1. 含义"></a>1. 含义</h3><p>又称多表查询，当查询的字段来自于多个表时，就会用到连接查询</p><p>笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行</p><p>发生原因：没有有效的连接条件<br>如何避免：添加有效的连接条件</p><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2. 分类"></a>2. 分类</h3><ul><li><p>按年代分类：</p><ul><li>sql92标准:仅仅支持内连接</li><li>sql99标准【推荐】：支持内连接+外连接（左外和右外）+交叉连接</li></ul></li><li><p>按功能分类：</p><ul><li>内连接：<ul><li>等值连接</li><li>非等值连接</li><li>自连接</li></ul></li><li>外连接：<ul><li>左外连接</li><li>右外连接</li><li>全外连接</li><li>交叉连接</li></ul></li></ul></li></ul><h4 id="一、sql92标准"><a href="#一、sql92标准" class="headerlink" title="一、sql92标准"></a>一、sql92标准</h4><h5 id="1-等值连接"><a href="#1-等值连接" class="headerlink" title="1. 等值连接"></a>1. 等值连接</h5><ul><li>多表等值连接的结果为多表的交集部分</li><li>n表连接，至少需要n-1个连接条件</li><li>多表的顺序没有要求</li><li>一般需要为表起别名</li><li>可以搭配前面介绍的所有子句使用，比如排序、分组、筛选</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询女神名和对应的男神名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,boyName</span><br><span class="line"><span class="keyword">FROM</span> boys,beauty</span><br><span class="line"><span class="keyword">WHERE</span> beauty.boyfriend_id= boys.id;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询员工名和对应的部门名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees,departments</span><br><span class="line"><span class="keyword">WHERE</span> employees.<span class="string">`department_id`</span>=departments.<span class="string">`department_id`</span>;</span><br></pre></td></tr></table></figure><h5 id="2-为表起别名"><a href="#2-为表起别名" class="headerlink" title="2. 为表起别名"></a>2. 为表起别名</h5><ul><li>提高语句的简洁度</li><li>区分多个重名的字段</li></ul><p><strong>注意：如果为表起了别名，则查询的字段就不能使用原来的表名去限定</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询员工名、工种号、工种名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,e.job_id,j.job_title</span><br><span class="line"><span class="keyword">FROM</span> employees  e,jobs j</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`job_id`</span>=j.<span class="string">`job_id`</span>;</span><br></pre></td></tr></table></figure><h5 id="3-两个表的顺序是否可以调换"><a href="#3-两个表的顺序是否可以调换" class="headerlink" title="3. 两个表的顺序是否可以调换"></a>3. 两个表的顺序是否可以调换</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询员工名、工种号、工种名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,e.job_id,j.job_title</span><br><span class="line"><span class="keyword">FROM</span> jobs j,employees e</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`job_id`</span>=j.<span class="string">`job_id`</span>;</span><br></pre></td></tr></table></figure><h5 id="4、可以加筛选"><a href="#4、可以加筛选" class="headerlink" title="4、可以加筛选"></a>4、可以加筛选</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询有奖金的员工名、部门名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name,commission_pct</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> employees e,departments d</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> e.<span class="string">`commission_pct`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询城市名中第二个字符为o的部门名和城市名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_name,city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations l</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="string">`location_id`</span> = l.<span class="string">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> city <span class="keyword">LIKE</span> <span class="string">'_o%'</span>;</span><br></pre></td></tr></table></figure><h5 id="5、可以加分组"><a href="#5、可以加分组" class="headerlink" title="5、可以加分组"></a>5、可以加分组</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询每个城市的部门个数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) 个数,city</span><br><span class="line"><span class="keyword">FROM</span> departments d,locations l</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="string">`location_id`</span>=l.<span class="string">`location_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> department_name,d.<span class="string">`manager_id`</span>,<span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> departments d,employees e</span><br><span class="line"><span class="keyword">WHERE</span> d.<span class="string">`department_id`</span>=e.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name,d.<span class="string">`manager_id`</span>;</span><br></pre></td></tr></table></figure><h5 id="6、可以加排序"><a href="#6、可以加排序" class="headerlink" title="6、可以加排序"></a>6、可以加排序</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询每个工种的工种名和员工的个数，并且按员工个数降序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_title,<span class="keyword">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> employees e,jobs j</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`job_id`</span>=j.<span class="string">`job_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_title</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h5 id="7、可以实现三表连接"><a href="#7、可以实现三表连接" class="headerlink" title="7、可以实现三表连接"></a>7、可以实现三表连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工名、部门名和所在的城市</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name,city</span><br><span class="line"><span class="keyword">FROM</span> employees e,departments d,locations l</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">AND</span> d.<span class="string">`location_id`</span>=l.<span class="string">`location_id`</span></span><br><span class="line"><span class="keyword">AND</span> city <span class="keyword">LIKE</span> <span class="string">'s%'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h4 id="2、非等值连接"><a href="#2、非等值连接" class="headerlink" title="2、非等值连接"></a>2、非等值连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询员工的工资和工资级别</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e,job_grades g</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> g.<span class="string">`lowest_sal`</span> <span class="keyword">AND</span> g.<span class="string">`highest_sal`</span></span><br><span class="line"><span class="keyword">AND</span> g.<span class="string">`grade_level`</span>=<span class="string">'A'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> salary,employee_id <span class="keyword">from</span> employees;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> job_grades;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job_grades</span><br><span class="line">(grade_level <span class="built_in">VARCHAR</span>(<span class="number">3</span>),</span><br><span class="line"> lowest_sal  <span class="built_in">int</span>,</span><br><span class="line"> highest_sal <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'A'</span>, <span class="number">1000</span>, <span class="number">2999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'B'</span>, <span class="number">3000</span>, <span class="number">5999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'C'</span>, <span class="number">6000</span>, <span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'D'</span>, <span class="number">10000</span>, <span class="number">14999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'E'</span>, <span class="number">15000</span>, <span class="number">24999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'F'</span>, <span class="number">25000</span>, <span class="number">40000</span>);</span><br></pre></td></tr></table></figure><h4 id="3、自连接"><a href="#3、自连接" class="headerlink" title="3、自连接"></a>3、自连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询 员工名和上级的名称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> e.employee_id,e.last_name,m.employee_id,m.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees e,employees m</span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`manager_id`</span>=m.<span class="string">`employee_id`</span>;</span><br></pre></td></tr></table></figure><h4 id="二、sql99语法"><a href="#二、sql99语法" class="headerlink" title="二、sql99语法"></a>二、sql99语法</h4><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名 【连接类型】</span><br><span class="line"><span class="keyword">join</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">on</span> 连接条件</span><br><span class="line">【<span class="keyword">where</span> 筛选条件】</span><br><span class="line">【<span class="keyword">group</span> <span class="keyword">by</span> 分组】</span><br><span class="line">【<span class="keyword">having</span> 筛选条件】</span><br><span class="line">【<span class="keyword">order</span> <span class="keyword">by</span> 排序列表】</span><br></pre></td></tr></table></figure><p>分类</p><p>内连接（★）：inner</p><p>外连接</p><ul><li>左外(★):left 【outer】</li><li>右外(★)：right 【outer】</li><li>全外：full【outer】</li><li>交叉连接：cross</li></ul><h4 id="一、内连接"><a href="#一、内连接" class="headerlink" title="一、内连接"></a>一、内连接</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">on</span> 连接条件;</span><br></pre></td></tr></table></figure><p>分类：</p><ul><li>等值</li><li>非等值</li><li>自连接</li></ul><p>特点：</p><ul><li>添加排序、分组、筛选</li><li>inner可以省略</li><li>筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读</li><li>inner join连接和sql92语法中的等值连接效果是一样的，都是查询多表的交集</li></ul><h5 id="一）等值连接"><a href="#一）等值连接" class="headerlink" title="一）等值连接"></a>一）等值连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1.查询员工名、部门名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">JOIN</span>  employees e</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`department_id`</span> = d.<span class="string">`department_id`</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2.查询名字中包含e的员工名和工种名（添加筛选）</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`job_id`</span>=  j.<span class="string">`job_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`last_name`</span> <span class="keyword">LIKE</span> <span class="string">'%e%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3. 查询部门个数&gt;3的城市名和部门个数，（添加分组+筛选）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询每个城市的部门个数</span></span><br><span class="line"><span class="comment">#②在①结果上筛选满足条件的</span></span><br><span class="line"><span class="keyword">SELECT</span> city,<span class="keyword">COUNT</span>(*) 部门个数</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> locations l</span><br><span class="line"><span class="keyword">ON</span> d.<span class="string">`location_id`</span>=l.<span class="string">`location_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例4.查询哪个部门的员工个数&gt;3的部门名和员工个数，并按个数降序（添加排序）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询每个部门的员工个数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name</span><br><span class="line"></span><br><span class="line"><span class="comment">#② 在①结果上筛选员工个数&gt;3的记录，并排序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) 个数,department_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_name</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">3</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(*) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例5.查询员工名、部门名、工种名，并按部门名降序（添加三表连接）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,department_name,job_title</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> departments d <span class="keyword">ON</span> e.<span class="string">`department_id`</span>=d.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> jobs j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`job_id`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> department_name <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h5 id="二）非等值连接"><a href="#二）非等值连接" class="headerlink" title="二）非等值连接"></a>二）非等值连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询员工的工资级别</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary,grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> g.<span class="string">`lowest_sal`</span> <span class="keyword">AND</span> g.<span class="string">`highest_sal`</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询工资级别的个数&gt;20的个数，并且按工资级别降序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),grade_level</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> job_grades g</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> g.<span class="string">`lowest_sal`</span> <span class="keyword">AND</span> g.<span class="string">`highest_sal`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grade_level</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">20</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> grade_level <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h5 id="三）自连接"><a href="#三）自连接" class="headerlink" title="三）自连接"></a>三）自连接</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询员工的名字、上级的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,m.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`manager_id`</span>= m.<span class="string">`employee_id`</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询姓名中包含字符k的员工的名字、上级的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> e.last_name,m.last_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.<span class="string">`manager_id`</span>= m.<span class="string">`employee_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`last_name`</span> <span class="keyword">LIKE</span> <span class="string">'%k%'</span>;</span><br></pre></td></tr></table></figure><h4 id="二、外连接"><a href="#二、外连接" class="headerlink" title="二、外连接"></a>二、外连接</h4><p>应用场景：用于查询一个表中有，另一个表没有的记录</p><p>特点：</p><ol><li>外连接的查询结果为主表中的所有记录</li></ol><p>如果从表中有和它匹配的，则显示匹配的值</p><p>如果从表中没有和它匹配的，则显示null</p><p>外连接查询结果=内连接结果+主表中有而从表没有的记录</p><ol start="2"><li><p>左外连接，left join左边的是主表</p><p>右外连接，right join右边的是主表</p></li><li><p>左外和右外交换两个表的顺序，可以实现同样的效果</p></li><li><p>全外连接=内连接的结果+表1中有但表2没有的+表2中有但表1没有的</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入：查询男朋友 不在男神表的的女神名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> beauty;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> boys;</span><br><span class="line"></span><br><span class="line"><span class="comment">#左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> b.*,bo.*</span><br><span class="line"><span class="keyword">FROM</span> boys bo</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> beauty b</span><br><span class="line"><span class="keyword">ON</span> b.<span class="string">`boyfriend_id`</span> = bo.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> b.<span class="string">`id`</span> <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询哪个部门没有员工</span></span><br><span class="line"><span class="comment">#左外</span></span><br><span class="line"><span class="keyword">SELECT</span> d.*,e.employee_id</span><br><span class="line"><span class="keyword">FROM</span> departments d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employees e</span><br><span class="line"><span class="keyword">ON</span> d.<span class="string">`department_id`</span> = e.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`employee_id`</span> <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#右外</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.*,e.employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> departments d</span><br><span class="line"><span class="keyword">ON</span> d.<span class="string">`department_id`</span> = e.<span class="string">`department_id`</span></span><br><span class="line"><span class="keyword">WHERE</span> e.<span class="string">`employee_id`</span> <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全外</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> girls;</span><br><span class="line"><span class="keyword">SELECT</span> b.*,bo.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> boys bo</span><br><span class="line"><span class="keyword">ON</span> b.<span class="string">`boyfriend_id`</span> = bo.id;</span><br></pre></td></tr></table></figure><h4 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> b.*,bo.*</span><br><span class="line"><span class="keyword">FROM</span> beauty b</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> boys bo;</span><br></pre></td></tr></table></figure><h3 id="sql92和-sql99pk"><a href="#sql92和-sql99pk" class="headerlink" title="sql92和 sql99pk"></a>sql92和 sql99pk</h3><p>功能：sql99支持的较多</p><p>可读性：sql99实现连接条件和筛选条件的分离，可读性较高</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————分组查询</title>
      <link href="/2020/06/09/Database06/"/>
      <url>/2020/06/09/Database06/</url>
      
        <content type="html"><![CDATA[<ul><li>语法</li><li>特点</li><li>案例</li></ul><a id="more"></a><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line">【<span class="keyword">where</span> 筛选条件】</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 分组的字段</span><br><span class="line">【<span class="keyword">order</span> <span class="keyword">by</span> 排序的字段】;</span><br></pre></td></tr></table></figure><h3 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h3><ol><li>和分组函数一同查询的字段必须是group by后出现的字段</li><li>筛选分为两类：分组前筛选和分组后筛选</li></ol><table><thead><tr><th><code></code></th><th>针对的表</th><th>位置</th><th>连接的关键字</th></tr></thead><tbody><tr><td>分组前筛选</td><td>原始表</td><td>group by前</td><td>where</td></tr><tr><td>分组后筛选</td><td>group by后的结果集</td><td>group by后</td><td>having</td></tr></tbody></table><p>问题1：分组函数做筛选能不能放在where后面<br>答：不能</p><p>问题2：where——group by——having</p><p>一般来讲，能用分组前筛选的，尽量使用分组前筛选，提高效率</p><ol start="3"><li>分组可以按单个字段也可以按多个字段</li><li>可以搭配着排序使用</li></ol><h3 id="3，-案例"><a href="#3，-案例" class="headerlink" title="3， 案例"></a>3， 案例</h3><h4 id="0-引入：查询每个部门的员工个数"><a href="#0-引入：查询每个部门的员工个数" class="headerlink" title="0. 引入：查询每个部门的员工个数"></a>0. 引入：查询每个部门的员工个数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> department_id=<span class="number">90</span>;</span><br></pre></td></tr></table></figure><h4 id="1-简单的分组"><a href="#1-简单的分组" class="headerlink" title="1. 简单的分组"></a>1. 简单的分组</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询每个工种的员工平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary),job_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询每个位置的部门个数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),location_id</span><br><span class="line"><span class="keyword">FROM</span> departments</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> location_id;</span><br></pre></td></tr></table></figure><h4 id="2-可以实现分组前的筛选"><a href="#2-可以实现分组前的筛选" class="headerlink" title="2. 可以实现分组前的筛选"></a>2. 可以实现分组前的筛选</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询邮箱中包含a字符的 每个部门的最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">'%a%'</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询有奖金的每个领导手下员工的平均工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary),employee_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id;</span><br></pre></td></tr></table></figure><h4 id="3-分组后筛选"><a href="#3-分组后筛选" class="headerlink" title="3. 分组后筛选"></a>3. 分组后筛选</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询哪个部门的员工个数&gt;5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#①查询每个部门的员工个数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#② 筛选刚才①结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">5</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_id,<span class="keyword">MAX</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">MAX</span>(salary)&gt;<span class="number">12000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3：领导编号&gt;102的每个领导手下的最低工资大于5000的领导编号和最低工资</span></span><br><span class="line"></span><br><span class="line">manager_id&gt;102</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> manager_id,<span class="keyword">MIN</span>(salary)</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">MIN</span>(salary)&gt;<span class="number">5000</span>;</span><br></pre></td></tr></table></figure><h4 id="4-添加排序"><a href="#4-添加排序" class="headerlink" title="4. 添加排序"></a>4. 添加排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：每个工种有奖金的员工的最高工资&gt;6000的工种编号和最高工资,按最高工资升序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_id,<span class="keyword">MAX</span>(salary) m</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">HAVING</span> m&gt;<span class="number">6000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> m ;</span><br></pre></td></tr></table></figure><h4 id="5-按多个字段分组"><a href="#5-按多个字段分组" class="headerlink" title="5. 按多个字段分组"></a>5. 按多个字段分组</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询每个工种每个部门的最低工资,并按最低工资降序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary),job_id,department_id</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id,job_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">MIN</span>(salary) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————常用函数</title>
      <link href="/2020/06/09/Database05/"/>
      <url>/2020/06/09/Database05/</url>
      
        <content type="html"><![CDATA[<ul><li>好处</li><li>调用</li><li>特点</li><li>分类</li></ul><a id="more"></a><h2 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h2><p>概念：类似于java的方法，将一组逻辑语句封装在方法体中，对外暴露方法名</p><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ol><li>隐藏了实现细节  </li><li>提高代码的重用性</li></ol><h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><p><code>select 函数名(实参列表) 【from 表】;</code></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>叫什么（函数名）</li><li>干什么（函数功能）</li></ul><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h3 id="1-单行函数"><a href="#1-单行函数" class="headerlink" title="1. 单行函数"></a>1. 单行函数</h3><p>如 concat、length、ifnull等</p><h4 id="一、字符函数"><a href="#一、字符函数" class="headerlink" title="一、字符函数"></a>一、字符函数</h4><ol><li>length 获取参数值的字节个数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'john'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="string">'张三丰hahaha'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'%char%'</span></span><br></pre></td></tr></table></figure><ol start="2"><li>concat 拼接字符串</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(last_name,<span class="string">'_'</span>,first_name) 姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ol start="3"><li>upper、lower</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="string">'john'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOWER</span>(<span class="string">'joHn'</span>);</span><br><span class="line"><span class="comment">#示例：将姓变大写，名变小写，然后拼接</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="keyword">UPPER</span>(last_name),<span class="keyword">LOWER</span>(first_name))  姓名 <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>4.bsubstr、substring</p><p><strong>注意：索引从1开始</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#截取从指定索引处后面所有字符</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'李莫愁爱上了陆展元'</span>,<span class="number">7</span>)  out_put;</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取从指定索引处指定字符长度的字符</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'李莫愁爱上了陆展元'</span>,<span class="number">1</span>,<span class="number">3</span>) out_put;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：姓名中首字符大写，其他字符小写然后用_拼接，显示出来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="keyword">UPPER</span>(<span class="keyword">SUBSTR</span>(last_name,<span class="number">1</span>,<span class="number">1</span>)),<span class="string">'_'</span>,<span class="keyword">LOWER</span>(<span class="keyword">SUBSTR</span>(last_name,<span class="number">2</span>)))  out_put</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ol start="5"><li>instr</li></ol><p>返回子串第一次出现的索引，如果找不到返回0</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ELECT INSTR('杨不殷六侠悔爱上了殷六侠','殷八侠') AS out_put;</span><br></pre></td></tr></table></figure><ol><li>trim</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(<span class="keyword">TRIM</span>(<span class="string">'    张翠山    '</span>)) <span class="keyword">AS</span> out_put;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TRIM</span>(<span class="string">'aa'</span> <span class="keyword">FROM</span> <span class="string">'aaaaaaaaa张aaaaaaaaaaaa翠山aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'</span>)  <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><ol start="7"><li>lpad 用指定的字符实现左填充指定长度</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LPAD</span>(<span class="string">'殷素素'</span>,<span class="number">2</span>,<span class="string">'*'</span>) <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><ol start="8"><li>rpad 用指定的字符实现右填充指定长度</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> RPAD(<span class="string">'殷素素'</span>,<span class="number">12</span>,<span class="string">'ab'</span>) <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><ol start="9"><li>replace 替换</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(<span class="string">'周芷若周芷若周芷若周芷若张无忌爱上了周芷若'</span>,<span class="string">'周芷若'</span>,<span class="string">'赵敏'</span>) <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><h4 id="二、数学函数"><a href="#二、数学函数" class="headerlink" title="二、数学函数"></a>二、数学函数</h4><ol><li><p>round 四舍五入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="number">-1.55</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="number">1.567</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>ceil 向上取整,返回&gt;=该参数的最小整数</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CEIL</span>(<span class="number">-1.02</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>floor 向下取整，返回&lt;=该参数的最大整数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FLOOR</span>(<span class="number">-9.99</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>truncate 截断</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TRUNCATE</span>(<span class="number">1.69999</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>mod取余</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">mod(a,b) ：  a-a/b*b</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">mod(-10,-3):-10- (-10)/(-3)*（-3）=-1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">10</span>,<span class="number">-3</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">10</span>%<span class="number">3</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>rand:获取随机数，返回0-1之间的小数</li></ol><h4 id="三、日期函数"><a href="#三、日期函数" class="headerlink" title="三、日期函数"></a>三、日期函数</h4><ol><li>now 返回当前系统日期+时间</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>();</span><br></pre></td></tr></table></figure><ol start="2"><li>curdate 返回当前系统日期，不包含时间</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>();</span><br></pre></td></tr></table></figure><ol start="3"><li>curtime 返回当前时间，不包含日期</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURTIME</span>();</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以获取指定的部分，年、月、日、小时、分钟、秒</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="keyword">NOW</span>()) 年;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="string">'1998-1-1'</span>) 年;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">YEAR</span>(hiredate) 年 <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="keyword">NOW</span>()) 月;</span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="keyword">NOW</span>()) 月;</span><br></pre></td></tr></table></figure><ol start="4"><li>str_to_date 将字符通过指定的格式转换成日期</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">STR_TO_DATE</span>(<span class="string">'1998-3-2'</span>,<span class="string">'%Y-%c-%d'</span>) <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询入职日期为1992-4-3的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> hiredate = <span class="string">'1992-4-3'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> hiredate = <span class="keyword">STR_TO_DATE</span>(<span class="string">'4-3 1992'</span>,<span class="string">'%c-%d %Y'</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>date_format 将日期转换成字符</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">'%y年%m月%d日'</span>) <span class="keyword">AS</span> out_put;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询有奖金的员工名和入职日期(xx月/xx日 xx年)</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,<span class="keyword">DATE_FORMAT</span>(hiredate,<span class="string">'%m月/%d日 %y年'</span>) 入职日期</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>格式符</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td>%Y</td><td>四位的年份</td></tr><tr><td>2</td><td>%y</td><td>2位的年份</td></tr><tr><td>3</td><td>%m</td><td>月份(01,02,…11,12)</td></tr><tr><td>4</td><td>%c</td><td>月份(1,2…11,12)</td></tr><tr><td>5</td><td>%d</td><td>日(01,02…)</td></tr><tr><td>6</td><td>%H</td><td>小时(24小时制)</td></tr><tr><td>7</td><td>%h</td><td>小时(12小时制)</td></tr><tr><td>8</td><td>%i</td><td>分钟(00,01,…59 )</td></tr><tr><td>9</td><td>%s</td><td>秒( 00,01,…59 )</td></tr></tbody></table><ol start="6"><li>其他</li></ol><p>datediff:返回两个日期相差的天数<br>monthname:以英文形式返回月<br>year:返回年<br>month：返回月<br>day:返回日<br>hour:小时<br>minute:分钟<br>second：秒</p><h4 id="四、其他函数"><a href="#四、其他函数" class="headerlink" title="四、其他函数"></a>四、其他函数</h4><p>version 当前数据库服务器的版本</p><p>database 当前打开的数据库</p><p>user当前用户</p><p>password(‘字符’)：返回该字符的密码形式</p><p>md5(‘字符’):返回该字符的md5加密形式</p><h4 id="五、流程控制函数"><a href="#五、流程控制函数" class="headerlink" title="五、流程控制函数"></a>五、流程控制函数</h4><ol><li>if函数： if else 的效果</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="number">10</span>&lt;<span class="number">5</span>,<span class="string">'大'</span>,<span class="string">'小'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> last_name,commission_pct,<span class="keyword">IF</span>(commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span>,<span class="string">'没奖金，呵呵'</span>,<span class="string">'有奖金，嘻嘻'</span>) 备注</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ol start="2"><li>case函数的使用一： switch case 的效果</li></ol><p><strong>java中</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(变量或表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 常量<span class="number">1</span>：语句<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:语句n;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mysql中</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case 要判断的字段或表达式</span><br><span class="line">when 常量1 then 要显示的值1或语句1;</span><br><span class="line">when 常量2 then 要显示的值2或语句2;</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或语句n;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*案例：查询员工的工资，要求</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">部门号=30，显示的工资为1.1倍</span></span><br><span class="line"><span class="comment">部门号=40，显示的工资为1.2倍</span></span><br><span class="line"><span class="comment">部门号=50，显示的工资为1.3倍</span></span><br><span class="line"><span class="comment">其他部门，显示的工资为原工资</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary 原始工资,department_id,</span><br><span class="line"><span class="keyword">CASE</span> department_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">30</span> <span class="keyword">THEN</span> salary*<span class="number">1.1</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">40</span> <span class="keyword">THEN</span> salary*<span class="number">1.2</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">50</span> <span class="keyword">THEN</span> salary*<span class="number">1.3</span></span><br><span class="line"><span class="keyword">ELSE</span> salary</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 新工资</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><ol start="3"><li>case 函数的使用二：类似于 多重if</li></ol><p><strong>java中：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件<span class="number">1</span>)&#123;</span><br><span class="line">语句<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(条件<span class="number">2</span>)&#123;</span><br><span class="line">语句<span class="number">2</span>；</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">语句n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mysql中：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case </span><br><span class="line">when 条件1 then 要显示的值1或语句1</span><br><span class="line">when 条件2 then 要显示的值2或语句2</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或语句n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*案例：查询员工的工资的情况</span></span><br><span class="line"><span class="comment">如果工资&gt;20000,显示A级别</span></span><br><span class="line"><span class="comment">如果工资&gt;15000,显示B级别</span></span><br><span class="line"><span class="comment">如果工资&gt;10000，显示C级别</span></span><br><span class="line"><span class="comment">否则，显示D级别</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">20000</span> <span class="keyword">THEN</span> <span class="string">'A'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">15000</span> <span class="keyword">THEN</span> <span class="string">'B'</span></span><br><span class="line"><span class="keyword">WHEN</span> salary&gt;<span class="number">10000</span> <span class="keyword">THEN</span> <span class="string">'C'</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'D'</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 工资级别</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h3 id="2-分组函数"><a href="#2-分组函数" class="headerlink" title="2. 分组函数"></a>2. 分组函数</h3><p>功能：做统计使用，又称为统计函数、聚合函数、组函数</p><p>分类：</p><p>sum 求和、avg 平均值、max 最大值 、min 最小值 、count 计算个数</p><p>特点：</p><ol><li>sum、avg一般用于处理数值型<br>max、min、count可以处理任何类型</li><li>以上分组函数都忽略null值</li><li>可以和distinct搭配实现去重的运算</li><li>count函数的单独介绍<br>一般使用count(*)用作统计行数</li><li>和分组函数一同查询的字段要求是group by后的字段</li></ol><h4 id="1-简单的使用"><a href="#1-简单的使用" class="headerlink" title="1.简单的使用"></a>1.简单的使用</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(salary) 和,<span class="keyword">AVG</span>(salary) 平均,<span class="keyword">MAX</span>(salary) 最高,<span class="keyword">MIN</span>(salary) 最低,<span class="keyword">COUNT</span>(salary) 个数</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(salary) 和,<span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(salary),<span class="number">2</span>) 平均,<span class="keyword">MAX</span>(salary) 最高,<span class="keyword">MIN</span>(salary) 最低,<span class="keyword">COUNT</span>(salary) 个数</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="2-参数支持哪些类型"><a href="#2-参数支持哪些类型" class="headerlink" title="2.参数支持哪些类型"></a>2.参数支持哪些类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(last_name) ,<span class="keyword">AVG</span>(last_name) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(hiredate) ,<span class="keyword">AVG</span>(hiredate) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(last_name),<span class="keyword">MIN</span>(last_name) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(hiredate),<span class="keyword">MIN</span>(hiredate) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(commission_pct) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(last_name) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="3-是否忽略null"><a href="#3-是否忽略null" class="headerlink" title="3.是否忽略null"></a>3.是否忽略null</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(commission_pct) ,<span class="keyword">AVG</span>(commission_pct),<span class="keyword">SUM</span>(commission_pct)/<span class="number">35</span>,<span class="keyword">SUM</span>(commission_pct)/<span class="number">107</span> <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(commission_pct) ,<span class="keyword">MIN</span>(commission_pct) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(commission_pct) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> commission_pct <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="4-和distinct搭配"><a href="#4-和distinct搭配" class="headerlink" title="4.和distinct搭配"></a>4.和distinct搭配</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(<span class="keyword">DISTINCT</span> salary),<span class="keyword">SUM</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> salary),<span class="keyword">COUNT</span>(salary) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><h4 id="5-count函数的详细介绍"><a href="#5-count函数的详细介绍" class="headerlink" title="5.count函数的详细介绍"></a>5.count函数的详细介绍</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><p>效率：</p><p>MYISAM存储引擎下，COUNT(<em>)的效率高<br>INNODB存储引擎下，COUNT(</em>)和COUNT(1)的效率差不多，比COUNT(字段)要高一些</p><h4 id="6-和分组函数一同查询的字段有限制"><a href="#6-和分组函数一同查询的字段有限制" class="headerlink" title="6.和分组函数一同查询的字段有限制"></a>6.和分组函数一同查询的字段有限制</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary),employee_id  <span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————排序查询</title>
      <link href="/2020/06/09/Database04/"/>
      <url>/2020/06/09/Database04/</url>
      
        <content type="html"><![CDATA[<ul><li>语法</li><li>特点</li><li>示例</li></ul><a id="more"></a><h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表名</span><br><span class="line">【<span class="keyword">where</span>  筛选条件】</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 排序的字段或表达式;</span><br></pre></td></tr></table></figure><h3 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h3><ol><li><p>asc代表的是升序，可以省略<br>desc代表的是降序</p></li><li><p>order by子句可以支持 单个字段、别名、表达式、函数、多个字段</p></li><li><p>order by子句在查询语句的最后面，除了limit子句</p></li></ol><h3 id="3-案例"><a href="#3-案例" class="headerlink" title="3.案例"></a>3.案例</h3><ol><li>按单个字段排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加筛选条件再排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询部门编号&gt;=90的员工信息，并按员工编号降序</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id&gt;=<span class="number">90</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> employee_id <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>按表达式排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工信息 按年薪降序</span></span><br><span class="line"><span class="keyword">SELECT</span> *,salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="keyword">IFNULL</span>(commission_pct,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="keyword">IFNULL</span>(commission_pct,<span class="number">0</span>)) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>按别名排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工信息 按年薪升序</span></span><br><span class="line"><span class="keyword">SELECT</span> *,salary*<span class="number">12</span>*(<span class="number">1</span>+<span class="keyword">IFNULL</span>(commission_pct,<span class="number">0</span>)) 年薪</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>按函数排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工名，并且按名字的长度降序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LENGTH</span>(last_name),last_name</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">LENGTH</span>(last_name) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>按多个字段排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工信息，要求先按工资降序，再按employee_id升序</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>,employee_id <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————条件查询</title>
      <link href="/2020/06/09/Database03/"/>
      <url>/2020/06/09/Database03/</url>
      
        <content type="html"><![CDATA[<ul><li>语法</li><li>特点</li><li>示例</li></ul><a id="more"></a><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">查询列表</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">筛选条件;</span><br></pre></td></tr></table></figure><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2. 分类"></a>2. 分类</h3><ol><li>按条件表达式筛选</li></ol><p>简单条件运算符：&gt; &lt; = != &lt;&gt; &gt;= &lt;=</p><ol start="2"><li>按逻辑表达式筛选</li></ol><p>逻辑运算符：</p><p>作用：用于连接条件表达式</p><p>&amp;&amp; || !</p><p>and or not</p><ul><li>&amp;&amp;和and： 两个条件都为true，结果为true，反之为false</li><li>||或or： 只要有一个条件为true，结果为true，反之为false</li><li>!或not： 如果连接的条件本身为false，结果为true，反之为false</li></ul><ol start="3"><li>模糊查询</li></ol><ul><li>like</li><li>between and</li><li>in</li><li>is null</li></ul><h3 id="3-案例"><a href="#3-案例" class="headerlink" title="3. 案例"></a>3. 案例</h3><h4 id="一、按条件表达式筛选"><a href="#一、按条件表达式筛选" class="headerlink" title="一、按条件表达式筛选"></a>一、按条件表达式筛选</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询工资&gt;12000的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">salary&gt;<span class="number">12000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询部门编号不等于90号的员工名和部门编号</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">last_name,</span><br><span class="line">department_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">department_id&lt;&gt;<span class="number">90</span>;</span><br></pre></td></tr></table></figure><h4 id="二、按逻辑表达式筛选"><a href="#二、按逻辑表达式筛选" class="headerlink" title="二、按逻辑表达式筛选"></a>二、按逻辑表达式筛选</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询工资z在10000到20000之间的员工名、工资以及奖金</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">salary&gt;=<span class="number">10000</span> <span class="keyword">AND</span> salary&lt;=<span class="number">20000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询部门编号不是在90到110之间，或者工资高于15000的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">NOT</span>(department_id&gt;=<span class="number">90</span> <span class="keyword">AND</span>  department_id&lt;=<span class="number">110</span>) <span class="keyword">OR</span> salary&gt;<span class="number">15000</span>;</span><br></pre></td></tr></table></figure><h4 id="三、模糊查询"><a href="#三、模糊查询" class="headerlink" title="三、模糊查询"></a>三、模糊查询</h4><h5 id="1-like"><a href="#1-like" class="headerlink" title="1. like"></a>1. like</h5><p>特点：</p><ul><li>一般和通配符搭配使用</li><li>通配符：<ul><li>% 任意多个字符,包含0个字符</li><li>_ 任意单个字符</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询员工名中包含字符a的员工信息</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">last_name <span class="keyword">like</span> <span class="string">'%a%'</span>;<span class="comment">#abc</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询员工名中第三个字符为e，第五个字符为a的员工名和工资</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">last_name <span class="keyword">LIKE</span> <span class="string">'__n_l%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例3：查询员工名中第二个字符为_的员工名</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">last_name <span class="keyword">LIKE</span> <span class="string">'_$_%'</span> ESCAPE <span class="string">'$'</span>;</span><br></pre></td></tr></table></figure><h5 id="2-between-and"><a href="#2-between-and" class="headerlink" title="2. between and"></a>2. between and</h5><ul><li>使用between and 可以提高语句的简洁度</li><li>包含临界值</li><li>两个临界值不要调换顺序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询员工编号在100到120之间的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">employee_id &gt;= <span class="number">120</span> <span class="keyword">AND</span> employee_id&lt;=<span class="number">100</span>;</span><br><span class="line"><span class="comment">#----------------------</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">employee_id <span class="keyword">BETWEEN</span> <span class="number">120</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br></pre></td></tr></table></figure><h5 id="3-in"><a href="#3-in" class="headerlink" title="3. in"></a>3. in</h5><p>含义：判断某字段的值是否属于in列表中的某一项</p><p>特点：</p><ul><li>使用in提高语句简洁度</li><li>in列表的值类型必须一致或兼容</li><li>in列表中不支持通配符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例：查询员工的工种编号是 IT_PROG、AD_VP、AD_PRES中的一个员工名和工种编号</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">job_id = <span class="string">'IT_PROT'</span> <span class="keyword">OR</span> job_id = <span class="string">'AD_VP'</span> <span class="keyword">OR</span> JOB_ID =<span class="string">'AD_PRES'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">job_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">job_id <span class="keyword">IN</span>( <span class="string">'IT_PROT'</span> ,<span class="string">'AD_VP'</span>,<span class="string">'AD_PRES'</span>);</span><br></pre></td></tr></table></figure><h5 id="4-is-null"><a href="#4-is-null" class="headerlink" title="4. is null"></a>4. is null</h5><p>=或&lt;&gt;不能用于判断null值</p><p>is null或is not null 可以判断null值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询没有奖金的员工名和奖金率</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询有奖金的员工名和奖金率</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#----------以下为×</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">salary <span class="keyword">IS</span> <span class="number">12000</span>;</span><br></pre></td></tr></table></figure><h5 id="5-安全等于-lt-gt"><a href="#5-安全等于-lt-gt" class="headerlink" title="5. 安全等于  &lt;=&gt;"></a>5. 安全等于  &lt;=&gt;</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例1：查询没有奖金的员工名和奖金率</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">commission_pct &lt;=&gt;<span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#案例2：查询工资为12000的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">salary &lt;=&gt; <span class="number">12000</span>;</span><br></pre></td></tr></table></figure><h5 id="6-is-null-pk-lt-gt"><a href="#6-is-null-pk-lt-gt" class="headerlink" title="6. is null pk &lt;=&gt;"></a>6. is null pk &lt;=&gt;</h5><p>IS NULL:仅仅可以判断NULL值，可读性较高，建议使用</p><p>&lt;=&gt;:既可以判断NULL值，又可以判断普通的数值，可读性较低</p><table><thead><tr><th><code></code></th><th>普通类型的数值</th><th>null值</th><th>可读性</th></tr></thead><tbody><tr><td>is null</td><td>×</td><td>√</td><td>√</td></tr><tr><td>&lt;=&gt;</td><td>√</td><td>√</td><td>×</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DQL语言————基础查询</title>
      <link href="/2020/06/09/Database02/"/>
      <url>/2020/06/09/Database02/</url>
      
        <content type="html"><![CDATA[<ul><li>语法</li><li>特点</li><li>示例</li></ul><a id="more"></a><h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询列表</span><br><span class="line"><span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h3><ol><li><p>查询列表可以是字段、常量、表达式、函数，也可以是多个</p></li><li><p>查询结果是一个虚拟表</p></li></ol><h3 id="3-示例"><a href="#3-示例" class="headerlink" title="3. 示例"></a>3. 示例</h3><ol><li>查询单个字段</li></ol><p><code>select 字段名 from 表名;</code></p><ol start="2"><li>查询多个字段</li></ol><p><code>select 字段名，字段名 from 表名;</code></p><ol start="3"><li>查询所有字段</li></ol><p><code>select * from 表名</code></p><ol start="4"><li>查询常量</li></ol><p><code>select 常量值;</code></p><p><strong>注意：字符型和日期型的常量值必须用单引号引起来，数值型不需要</strong></p><ol start="5"><li>查询函数</li></ol><p><code>select 函数名(实参列表);</code></p><ol start="6"><li>查询表达式</li></ol><p><code>select 100/1234;</code></p><ol start="7"><li>起别名</li></ol><ul><li>as</li><li>空格</li></ul><ol start="8"><li>去重</li></ol><p><code>select distinct 字段名 from 表名;</code></p><ol start="9"><li><code>+</code></li></ol><p>作用：做加法运算</p><p><code>select 数值+数值;</code> 直接运算</p><p><code>select 字符+数值;</code> 先试图将字符转换成数值，如果转换成功，则继续运算；否则转换成0，再做运算</p><p><code>select null+值;</code> 结果都为null</p><ol start="10"><li>[补充] concat函数</li></ol><p>功能：拼接字符</p><p><code>select concat(字符1，字符2，字符3,...);</code></p><ol start="11"><li>[补充] ifnull函数</li></ol><p>功能：判断某字段或表达式是否为null，如果为null 返回指定的值，否则返回原本的值</p><p><code>select ifnull(commission_pct,0) from employees;</code></p><ol start="12"><li>[补充] isnull函数</li></ol><p>功能：判断某字段或表达式是否为null，如果是，则返回1，否则返回0</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库相关概念</title>
      <link href="/2020/06/08/Database01/"/>
      <url>/2020/06/08/Database01/</url>
      
        <content type="html"><![CDATA[<ul><li>数据库的好处</li><li>数据库根本概念</li><li>数据库存储数据的特点</li><li>MySQL服务的启动和停止</li><li>MySQL服务的登录和退出</li><li>MySQL的常见命令</li><li>MySQL的语法规范</li><li>SQL的语言分类</li><li>SQL的常见命令</li></ul><a id="more"></a><h1 id="MySQL基础"><a href="#MySQL基础" class="headerlink" title="MySQL基础"></a>MySQL基础</h1><h2 id="数据库的好处"><a href="#数据库的好处" class="headerlink" title="数据库的好处"></a>数据库的好处</h2><ol><li>持久化数据到本地</li><li>可以实现结构化查询。方便管理</li></ol><h2 id="数据库根本概念"><a href="#数据库根本概念" class="headerlink" title="数据库根本概念"></a>数据库根本概念</h2><ol><li>DB:数据库,保存一组有组织的数据的容器</li><li>DBMS:数据库管理系统。又称为数据库软件(产品),用于管理DB中的数据</li><li>SQL:结构化查询语言。用于和DBMS通信的语言</li></ol><h2 id="数据库存储数据的特点"><a href="#数据库存储数据的特点" class="headerlink" title="数据库存储数据的特点"></a>数据库存储数据的特点</h2><ol><li>将数据放到表中,表再放到库中</li><li>一个数据库中可以有多个表,每个表都有一个的名字,用来标识自己。表名具有唯一性。</li><li>表具有一些特性,这些特性定义了数据在表中如何存储，类似java中”类”的设计</li><li>表由列组成，也称为字段。所有表都是由一个或多个列组成的，每一列类似java中的”属性”</li><li>表中的数据是按行存储的，每一行类似于java中的”对象”</li></ol><h2 id="MySQL服务的启动和停止"><a href="#MySQL服务的启动和停止" class="headerlink" title="MySQL服务的启动和停止"></a>MySQL服务的启动和停止</h2><ul><li>计算机-右击管理一服务</li><li>通过管理员身份运行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start 服务名(启动服务)</span><br><span class="line">net stop 服务名(停止服务)</span><br></pre></td></tr></table></figure><h2 id="MySQL服务的登录和退出"><a href="#MySQL服务的登录和退出" class="headerlink" title="MySQL服务的登录和退出"></a>MySQL服务的登录和退出</h2><ul><li>通过mysql自带的客户端 只限于root用户</li><li>通过windows自带的客户端登录:<br><code>mysql [-h主机名 -P端口号] -u用户名-p密码</code></li></ul><p>退出：<br>exit或ctrl+C</p><h2 id="MySQL的常见命令"><a href="#MySQL的常见命令" class="headerlink" title="MySQL的常见命令"></a>MySQL的常见命令</h2><ol><li><p>查看当前所有的数据库<br><code>show databases;</code></p></li><li><p>打开指定的库<br><code>use 库名</code></p></li><li><p>查看当前库的所有表<br><code>show tables;</code></p></li><li><p>查看其它库的所有表<br><code>show tables from 库名;</code></p></li><li><p>创建表</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">列名列类型,</span><br><span class="line">列名列类型,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol start="6"><li><p>查看表结构<br><code>desc 表名;</code></p></li><li><p>查看服务器的版本</p></li></ol><ul><li><p>登录到mysq1服务端<br><code>select version();</code></p></li><li><p>没有登录到mysq1服务端<br><code>mysql --verslon</code><br>或<br><code>mysql --V</code></p></li></ul><h2 id="MySQL的语法规范"><a href="#MySQL的语法规范" class="headerlink" title="MySQL的语法规范"></a>MySQL的语法规范</h2><ol><li>不区分大小写,但建议关键字大写，表名、列名小写</li><li>每条命令最好用分号结尾</li><li>每条命令根据需要,可以进行缩进或换行</li><li>注释</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单行注释: #注释文字</span><br><span class="line">单行注释: --注释文字</span><br><span class="line">多行注释: &#x2F;* 注释文字 *&#x2F;</span><br></pre></td></tr></table></figure><h2 id="SQL的语言分类"><a href="#SQL的语言分类" class="headerlink" title="SQL的语言分类"></a>SQL的语言分类</h2><p>DQL（Data Query Language）：数据查询语言</p><p><code>select</code></p><p>DML(Data Manipulate Language):数据操作语言</p><p><code>insert 、update、delete</code></p><p>DDL（Data Define Languge）：数据定义语言</p><p><code>create、drop、alter</code></p><p>TCL（Transaction Control Language）：事务控制语言</p><p><code>commit、rollback</code></p><h2 id="SQL的常见命令"><a href="#SQL的常见命令" class="headerlink" title="SQL的常见命令"></a>SQL的常见命令</h2><p><code>show databases;</code> 查看所有的数据库</p><p><code>use 库名;</code> 打开指定的库</p><p><code>show tables;</code> 显示库中的所有表</p><p><code>show tables from 库名;</code> 显示指定库中的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    字段名 字段类型,</span><br><span class="line">    字段名 字段类型</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>创建表</p><p><code>desc 表名;</code> 查看指定表的结构</p><p><code>select * from 表名;</code> 显示表中的所有数据</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS样式04————浮动</title>
      <link href="/2020/06/08/Frontend07/"/>
      <url>/2020/06/08/Frontend07/</url>
      
        <content type="html"><![CDATA[<ul><li>浮动</li><li>常见网页布局</li><li>清除浮动</li></ul><a id="more"></a><h1 id="1-浮动-float"><a href="#1-浮动-float" class="headerlink" title="1. 浮动( float)"></a>1. 浮动( float)</h1><h2 id="1-1-传统网页布局的三种方式"><a href="#1-1-传统网页布局的三种方式" class="headerlink" title="1.1 传统网页布局的三种方式"></a>1.1 传统网页布局的三种方式</h2><p>网页布局的本质————用CSS来摆放盒子。把盒子摆放到相应位置</p><p>CSS提供了三种传统布局方式(简单说就是盒子如何进行排列顺序):</p><ul><li>普通流(标准流)</li><li>浮动</li><li>定位</li></ul><p>这三种布局方式都是用来摆放盒子的,盒子摆放到合适位置。布局自然就完成了。</p><p>注意:实际开发中,一个页面基本都包含了这三种布局方式。</p><h2 id="1-2-标准流-普通流-文档流"><a href="#1-2-标准流-普通流-文档流" class="headerlink" title="1.2 标准流(普通流/文档流)"></a>1.2 标准流(普通流/文档流)</h2><p>所谓的标准流就是标签按照规定好默认方式排列</p><ol><li>块级元素会独占一行。从上向下顺序排列。</li></ol><ul><li>常用元素:div, hr, p, h1~h6, ul, ol, dl, form, table</li></ul><ol start="2"><li>行内元素会按照顺序,从左到右顺序排列.碰到父元素边缘则自动换行。</li></ol><ul><li>常用元素:span, a, i, em等</li></ul><p>以上都是标准流布局,前面学习的就是标准流,标准流是最基本的布局方式。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS样式03————盒子模型</title>
      <link href="/2020/06/07/Frontend06/"/>
      <url>/2020/06/07/Frontend06/</url>
      
        <content type="html"><![CDATA[<ul><li>盒子模型</li><li>圆角边框</li><li>盒子阴影</li><li>文字阴影</li></ul><a id="more"></a><h1 id="1-盒子模型"><a href="#1-盒子模型" class="headerlink" title="1. 盒子模型"></a>1. 盒子模型</h1><h2 id="1-1-看透网页布局的本质"><a href="#1-1-看透网页布局的本质" class="headerlink" title="1.1 看透网页布局的本质"></a>1.1 看透网页布局的本质</h2><p>网页布局过程:</p><ol><li>先准备好相关的网页元素。网页元素基本都是盒子Box.</li><li>利用CSS设置好盒子样式,然后摆放到相应位置，</li><li>往盒子里面装内容，</li></ol><p>网页布局的核心本质:就是利用CSS摆盒子。</p><h2 id="1-2-盒子模型-Box-Model-组成"><a href="#1-2-盒子模型-Box-Model-组成" class="headerlink" title="1.2 盒子模型( Box Model )组成"></a>1.2 盒子模型( Box Model )组成</h2><p>所谓盒子模型:就是把HTML页面中的布局元素看作是一个矩形的盒子,也就是一个盛装内容的容器。</p><p>CSS盒子模型本质上是一个盒子。封装周围的HTML元素,它包括:边框、外边距、内边距、和实际内容</p><h2 id="1-3-边框-border"><a href="#1-3-边框-border" class="headerlink" title="1.3 边框(border)"></a>1.3 边框(border)</h2><p>border可以设置元素的边框。边框有三部分组成边框宽度(粗细)、边框样式、边框颜色。</p><p><code>border: border-width | border-style | border-color</code></p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>border-width</td><td>定义边框粗细,单位是px</td></tr><tr><td>border-style</td><td>边框的样式</td></tr><tr><td>border-color</td><td>边框颜色</td></tr></tbody></table><p>CSS 边框属性允许你指定一个元素边框的样式和颜色。</p><p>边框简写:</p><p><code>border: 1px solid red;没有顺序</code></p><p>边框分开写法:</p><p><code>border-top: 1px solid red; /* 只设定上边框，其余同理 */</code></p><h2 id="1-4-表格的细线边框"><a href="#1-4-表格的细线边框" class="headerlink" title="1.4 表格的细线边框"></a>1.4 表格的细线边框</h2><p>border-collapse属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><p><code>border-col1apse: collapse;</code></p><ul><li>border-collapse: collapse;表示相邻边框合并在一起</li></ul><h2 id="1-5-边框会影响盒子实际大小"><a href="#1-5-边框会影响盒子实际大小" class="headerlink" title="1.5 边框会影响盒子实际大小"></a>1.5 边框会影响盒子实际大小</h2><p>边框会额外增加盒子的实际大小。</p><ol><li>测量盒子大小的时候不量边框.</li><li>如果测量的时候包含了边框,则需要width/height减去边框宽度</li></ol><h2 id="1-6-内边距-padding"><a href="#1-6-内边距-padding" class="headerlink" title="1.6 内边距(padding)"></a>1.6 内边距(padding)</h2><p>padding属性用于设置内边距,即边框与内容之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>padding-left</td><td>左内边距</td></tr><tr><td>padding-right</td><td>右内边距</td></tr><tr><td>padding-top</td><td>上内边距</td></tr><tr><td>padding- bottom</td><td>下内边距</td></tr></tbody></table><p>padding属性(简写属性)可以有一到四个值。</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>padding: 5px;</td><td>1个值，代表上下左右都有5像素内边距</td></tr><tr><td>padding: 5px 10px;</td><td>2个值，代表上下内边距是5像素左右内边距是10像素:</td></tr><tr><td>padding: Spx 10px 20px;</td><td>3个值, 代表上内边距5像素左右内边距10像索 下内边距20像索;</td></tr><tr><td>padding: 5px 10px 20px 30px;</td><td>4个值，上是5像素 右10像素下20像素左是30像素顺时针</td></tr></tbody></table><p>当给盒子指定padding值之后,发生了2件事情:</p><ol><li>内容和边框有了距离,添加了内边距。</li><li>padding影响了盒子实际大小。</li></ol><p>也就是说，如果盒子已经有了宽度和高度,此时再指定内边框,会撑大盒子。</p><p><strong>解决方案:</strong></p><p>如果保证盒子跟效果图大小保持一致,则让width/height减去多出来的内边距大小如可。</p><p>如果盒子本身没有指定width/height属性,则此时padding不会撑开盒子大小</p><h2 id="1-7-外边距-margin"><a href="#1-7-外边距-margin" class="headerlink" title="1.7 外边距(margin)"></a>1.7 外边距(margin)</h2><p>margin属性用于设置外边距,即控制盒子和盒子之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>margin-left</td><td>左外边距</td></tr><tr><td>margin-right</td><td>右外边距</td></tr><tr><td>margin-top</td><td>上外边距</td></tr><tr><td>margin-bottom</td><td>下外边距</td></tr></tbody></table><p>margin简写方式代表的意义跟padding完全一致。</p><p><strong>外边距典型应用</strong></p><p>外边距可以让块圾盒子水平居中,但是必须满足两个条件:</p><ul><li>盒子必须指定了宽度(width)</li><li>盒子左右的外边距都设置为auto</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header&#123; width:960px; margin:0 auto;&#125;</span><br></pre></td></tr></table></figure><p>常见的写法,以下三种都可以:</p><ul><li>margin-left: auto; margin-right auto;</li><li>margin: auto;</li><li>margin: 0 auto;</li></ul><p><strong>注意</strong>:以上方法是让块级元素水平居中。行内元素或者行内块元素水平居中使其父元素添加text-align:center即可。</p><h2 id="1-8-外边距合并"><a href="#1-8-外边距合并" class="headerlink" title="1.8 外边距合并"></a>1.8 外边距合并</h2><p>使用margin定义块元素的重直外边距时,可能会出现外边距的合并。</p><h3 id="1-相邻块元素垂直外边距的合并"><a href="#1-相邻块元素垂直外边距的合并" class="headerlink" title="1. 相邻块元素垂直外边距的合并"></a>1. 相邻块元素垂直外边距的合并</h3><p>当上下相邻的两个块元素(兄弟关系)相遇时,如果上面的元素有下外边距margin-bottom,下面的元素有<br>上外边距margin-top ,则他们之间的重直间距不是margin-bottom与margin-top之和。<strong>取两个值中的较大者</strong>这种现象被称为相邻块元素垂直外边距的合井。</p><p><strong>解决方案:</strong></p><p>尽量只给一个盒子添加margin值。</p><h3 id="2-嵌套块元素垂直外边距的塌陷"><a href="#2-嵌套块元素垂直外边距的塌陷" class="headerlink" title="2. 嵌套块元素垂直外边距的塌陷"></a>2. 嵌套块元素垂直外边距的塌陷</h3><p>对于两个嵌套关系(父子关系)的块元素,父元素有上外边距同时子元素也有上外边距,此时父元素会塌陷较大的外边距值。</p><p>解决方案:</p><ul><li>可以为父元素定义上边框。</li><li>可以为父元素定义上内边距。</li><li>可以为父元素添加owerflow:hidden.</li></ul><p>还有其他方法,比如浮动、固定,绝对定位的盒子不会有塌陷问题</p><h2 id="1-9-清除内外边距"><a href="#1-9-清除内外边距" class="headerlink" title="1.9 清除内外边距"></a>1.9 清除内外边距</h2><p>网页元素很多都带有默认的内外边距,而且不同浏览器默认的也不一致。因此在布局前,首先要清除下网<br>页元素的内外边距。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">padding:0; /* 清除内边距*/</span><br><span class="line">margin:0; /* 清除外边距*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:行内元素为了照顾兼容性,尽量只设置左右内外边距,不要设置上下内外边距。但是转换为块级和行内块元素就可以了</p><h1 id="2-圆角边框-重点"><a href="#2-圆角边框-重点" class="headerlink" title="2.圆角边框(重点)"></a>2.圆角边框(重点)</h1><p><code>border-radius</code>属性用于设置元素的外边框圆角。</p><p><code>border-radiua :length;</code></p><p>radius半径(圆的半径)原理: (椭)圆与边框的交集形成圆角效果</p><ul><li>参数值可以为数值或百分比的形式</li><li>如果小正方形,想要设置为一个圆,把数值修改为高度或者宽度的一半即可,或者直接写为50%</li><li>如果是个矩形,设置为高度的一半就可以做</li><li>该属性是一个简写属性,可以跟四个值,分别代表左上角、右上角、右下角、左下角</li><li>分开写: border-top-left-radius,border-top-right-radius,border-bottom-right-radius和border-bottom-left-radius</li></ul><h1 id="3-盒子阴影-重点"><a href="#3-盒子阴影-重点" class="headerlink" title="3. 盒子阴影(重点)"></a>3. 盒子阴影(重点)</h1><p>CSS3中新增了盒子阴影。可以使用box- shadow属性为盒子添加阴影。</p><p>box-shadow: h-shadow v-shadow blur spread color inset;</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平胡影的位置。允许负值,</td></tr><tr><td>v-shadow</td><td>必需。重直阴影的位置。允许负值。</td></tr><tr><td>blur</td><td>可选。横糊距离，</td></tr><tr><td>spread</td><td>可选。阴影的尺寸。</td></tr><tr><td>color</td><td>可选。阴影的颜色，请参阅CSsS颜色值，</td></tr><tr><td>inset</td><td>可选。将外部阴影(outset)改为内部阴影。</td></tr></tbody></table><p>注意:</p><ol><li>默认的是外阴影(outset).但是不可以写这个单词否则导致阴影无效</li><li>盒子阴影不占用空间,不会影响其他盒子排列。</li></ol><h1 id="6-文字阴影"><a href="#6-文字阴影" class="headerlink" title="6. 文字阴影"></a>6. 文字阴影</h1><p>在CSS3中,可以使用text-shadow属性将阴影应用于文本。</p><p><code>text-shadow: h-shadow v-shadow blur color;</code></p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平阴影的位置，允许负值。</td></tr><tr><td>v-shadow</td><td>必需，垂直阴影的位置，允许负值。</td></tr><tr><td>blur</td><td>可选。模糊的距离。</td></tr><tr><td>color</td><td>可选。阴影的颜色。参阅CSsS颜色值。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3样式02</title>
      <link href="/2020/06/04/Frontend05/"/>
      <url>/2020/06/04/Frontend05/</url>
      
        <content type="html"><![CDATA[<ul><li>Emmet语法</li><li>CSS的复合选择器</li><li>CSS的元素显示模式</li><li>CSS的背景</li><li>CSS的三大特性</li></ul><a id="more"></a><h1 id="1-Emmet语法"><a href="#1-Emmet语法" class="headerlink" title="1. Emmet语法"></a>1. Emmet语法</h1><h2 id="1-1-快速生成HTML结构语法"><a href="#1-1-快速生成HTML结构语法" class="headerlink" title="1.1 快速生成HTML结构语法"></a>1.1 快速生成HTML结构语法</h2><ol><li>生成标签直接输入标签名按tab健即可,比如div然后tab键。就可以生成<code>&lt;div&gt; &lt;/div&gt;</code></li><li>如果想要生成多个相同标签加上<code>*</code>就可以了比如<code>div*3</code>,就可以快速生成3个div</li><li>如果有父子级关系的标签,可以用&gt;比如ul&gt;li就可以了</li><li>如果有兄弟关系的标签,用+就可以了比如div+p</li><li>如果生成带有类名或者id名字的,直接写.demo 或者#two tab键就可以了</li><li>如果生成的div类名是有顺序的,可以用自增符号$</li><li>如果想要在生成的标签内部写内容可以用{}表示</li></ol><h2 id="1-2-快速生成CSS样式语法"><a href="#1-2-快速生成CSS样式语法" class="headerlink" title="1.2 快速生成CSS样式语法"></a>1.2 快速生成CSS样式语法</h2><p>CSS基本采取简写形式即可。</p><ol><li>比如w200按tab可以生成width: 200px</li><li>比如lh26按tab可以生成line-height: 26px;</li></ol><h2 id="1-3-快速格式化代码"><a href="#1-3-快速格式化代码" class="headerlink" title="1.3 快速格式化代码"></a>1.3 快速格式化代码</h2><p>Vscode快速格式化代码: shift+alt+f</p><p>也可以设置当保存页面的时候自动格式化代码:</p><p>1)文件—–&gt;[首选项]——-&gt;[设置];<br>2)搜索emmet.include;<br>3)在settings.json下的[用户]中添加以下语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;editor.formatOnType&quot;: true,</span><br><span class="line">&quot;editor.formatOnSave&quot;: true</span><br></pre></td></tr></table></figure><p>只需要设置一次即可,以后都可以自动保存格式化代码</p><h1 id="2-CSS的复合选择器"><a href="#2-CSS的复合选择器" class="headerlink" title="2. CSS的复合选择器"></a>2. CSS的复合选择器</h1><h2 id="2-1-什么是复合选择器"><a href="#2-1-什么是复合选择器" class="headerlink" title="2.1 什么是复合选择器"></a>2.1 什么是复合选择器</h2><p>在CSS中,可以根据选择器的类型把选择器分为基础选择器和复合选择器,复合选择器是建立在基础选择器之上,对基本选择器进行组合形成的。</p><ul><li>复合选择器可以更准确,更高效的选择目标元素(标签)</li><li>复合选择器是由两个或多个基础选择器。通过不同的方式组合而成的</li><li>常用的复合选择器包括:后代选择器、子选择器、并集选择器、伪类选择器等等</li></ul><h2 id="2-2-后代选择器-重要"><a href="#2-2-后代选择器-重要" class="headerlink" title="2.2 后代选择器(重要)"></a>2.2 后代选择器(重要)</h2><p>后代选择器又称为包含选择器,可以选择父元素里面子元素。其写法就是把外层标签写在前面,内层标签写在后面,中间用空格分隔。当标签发生嵌套时,内层标签就成为外层标签的后代。</p><p><code>元素1 元素2 { 样式声明 }</code></p><p>上述语法表示选择元素1里面的所有元素2 (后代元素)。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul li &#123; 样式声明 &#125; /*选择ul里面所有的1i标签元素*/</span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用空格隔开</li><li>元素1是父级,元素2是子级,最终选择的是元素2</li><li>元素2可以是儿子。也可以是孙子等。只要是元素1的后代即可</li><li>元素1和元素2可以是任意基础选择器</li></ul><h2 id="2-3-子选择器-重要"><a href="#2-3-子选择器-重要" class="headerlink" title="2.3 子选择器(重要)"></a>2.3 子选择器(重要)</h2><p>子元素选择器(子选择器)只能选挥作为某元素的最近一级子元素。简单理解就是选亲儿子元素.</p><p><code>元素1 &gt; 元素2 { 样式声明 }</code></p><p>上述语法表示选择元素1里面的所有直接后代(子元素)元素2.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &gt; P&#123; 样式声明 &#125;/*选择div里面所有最近一级P标签元素*/</span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用大于号隔开</li><li>元素1是父级,元素2是子级,最终选择的是元索2</li><li>元素2必须是亲儿子,其孙子、重孙之类都不归他管</li></ul><h2 id="2-4-并集选择器-重要"><a href="#2-4-并集选择器-重要" class="headerlink" title="2.4 并集选择器(重要)"></a>2.4 并集选择器(重要)</h2><p>并集选择器可以选择多组标签同时为他们定义相同的样式。通常用于集体声明</p><p>并集选择器是各选择器通过英文逗号(.)连接而成,任何形式的选择器都可以作为并集选择器的一部分。</p><p><code>元素1,元素2 { 样式声明 }</code></p><p>上述语法表示选择元素1和元素2。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul,div &#123; 样式声明 &#125; /* 选择ul和div标签元素 */</span><br></pre></td></tr></table></figure><ul><li>元素1和元素2中间用逗号隔开</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li></ul><h2 id="2-5-伪类选择器"><a href="#2-5-伪类选择器" class="headerlink" title="2.5 伪类选择器"></a>2.5 伪类选择器</h2><p>伪类选择器用于向某些选择器添加特殊的效果,比如给链接添加特殊效果,或选择第1个,第n个元素。</p><p>伪类选择器书写最大的特点是用冒号(:)表示,比如:hover、:first-child.</p><h2 id="2-6-链接伪类选择器"><a href="#2-6-链接伪类选择器" class="headerlink" title="2.6 链接伪类选择器"></a>2.6 链接伪类选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link    /*选择所有未被访问的链接*/</span><br><span class="line">a:visited  /*选择所有已被访问的链接。*/</span><br><span class="line">a:hover  /*选择鼠标指针位于其上的链接*/</span><br><span class="line">a:active  /*选择活动链接(鼠标按下未弹起的链接)*/</span><br></pre></td></tr></table></figure><p><strong>链接伪类选择器注意事项</strong></p><ol><li>为了确保生效,请按照LVHA的循顺序声明:link,visited,hover,active.</li><li>记忆法:love hate或者lv包包hao.</li><li>因为a链接在浏览器中具有默认样式,所以实际工作中都需要给链接单独指定样式。</li></ol><p><strong>链接伪类选择器实际工作开发中的写法:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* a是标签选择器 所有的链接*/</span><br><span class="line">a &#123;</span><br><span class="line">    color: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* :hover是链接伪类选择器鼠标经过*/</span><br><span class="line">a:hover &#123;</span><br><span class="line">color: red; /*鼠标经过的时候，由原来的灰色变成了红色。*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-focus伪类选择器"><a href="#2-7-focus伪类选择器" class="headerlink" title="2.7 focus伪类选择器"></a>2.7 focus伪类选择器</h2><p>:focus伪类选择器用于选取获得焦点的表单元素。</p><p>焦点就是光标,一般情兄<code>&lt;input&gt;</code>类表单元素才能获取,因此这个选择器也主要针对于表单元素来说。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input: focus &#123;</span><br><span class="line">background-color: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-CSS的元素显示模式"><a href="#3-CSS的元素显示模式" class="headerlink" title="3. CSS的元素显示模式"></a>3. CSS的元素显示模式</h1><h2 id="3-1-什么是元素显示模式"><a href="#3-1-什么是元素显示模式" class="headerlink" title="3.1 什么是元素显示模式"></a>3.1 什么是元素显示模式</h2><p>作用:网页的标签非常多,在不同地方会用到不同类型的标签,了解他们的特点可以更好的布局我们的网页。</p><p>元素显示模式就是元素(标签)以什么方式进行显示,比如<code>&lt;div&gt;</code>自己占一行, 比如一行可以放多个<code>&lt;span&gt;</code>.</p><p>HTML元素一般分为块元素和行内元素两种类型。</p><h2 id="3-2-块元素"><a href="#3-2-块元素" class="headerlink" title="3.2 块元素"></a>3.2 块元素</h2><p>常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>等,其中<code>&lt;div&gt;</code>标签是最典型的块元素。</p><p>块级元素的特点:</p><ul><li>自己独占-行。</li><li>高度，宽度、外边距以及内边距都可以控制。</li><li>宽度默认是容器(父级宽度)的100%。</li><li>是一个容器及盒子。里面可以放行内或者块级元素。</li></ul><p>注意:</p><ul><li>文字类的元素内不能使用块级元素</li><li><code>&lt;p&gt;</code>标签主要用于存放文字。因此<code>&lt;p&gt;</code>里面不能放块级元素,特别是不能放<code>&lt;div&gt;</code></li><li>同理，<code>&lt;h1&gt;-&lt;h6&gt;</code>等都是文字类块极标签,里面也不能放其他块级元素</li></ul><h2 id="3-3-行内元素"><a href="#3-3-行内元素" class="headerlink" title="3.3 行内元素"></a>3.3 行内元素</h2><p>常见的行内元素有<code>&lt;a&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;b&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;i&gt;</code>、<code>&lt;del&gt;</code>、<code>&lt;s&gt;</code>、<code>&lt;ins&gt;</code>、<code>&lt;u&gt;</code>、<code>&lt;span&gt;</code>等。其中<code>&lt;span&gt;</code>标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p><p>行内元素的特点:</p><ul><li>相邻行内元素在一行上,一行可以显示多个。</li><li>高、宽直接设置是无效的。</li><li>默认宽度就是它本身内容的宽度。</li><li>行内元素只能容纳文本或其他行内元素。</li></ul><p>注意:</p><ul><li>链接里面不能再放链接</li><li>特殊情况链接<code>&lt;a&gt;</code>里面可以放块级元素。但是给<code>&lt;a&gt;</code>转换一下块级模式最安全</li></ul><h2 id="3-4-行内块元素"><a href="#3-4-行内块元素" class="headerlink" title="3.4 行内块元素"></a>3.4 行内块元素</h2><p>在行内元素中有几个特殊的标签<code>&lt;img/&gt;</code>、<code>&lt;input/&gt;</code>、<code>&lt;td&gt;</code>,它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。</p><p>行内块元素的特点:</p><ul><li>和相邻行内元素(行内块)在一行上,但是他们之间会有空白缝随。一行可以显示多个(行内元素特点).</li><li>默认宽度就是它本身内容的宽度(行内元素特点)。</li><li>高度、行高、外边距以及内边距都可以控制(块级元素特点)。</li></ul><h2 id="3-5-元素显示模式转换"><a href="#3-5-元素显示模式转换" class="headerlink" title="3.5 元素显示模式转换"></a>3.5 元素显示模式转换</h2><p>特殊情况下,我们需要元素模式的转换简单理解: 一个模式的元素需要另外一种模式的特性</p><p>比如想要增加链接<code>&lt;a&gt;</code>的触发范围。</p><ul><li>转换为块元素: display: block;</li><li>转换为行内元素: display: inline;</li><li>转换为行内块: display: inline-block;</li></ul><h2 id="3-6-一个小技巧-单行文字垂直居中的代码"><a href="#3-6-一个小技巧-单行文字垂直居中的代码" class="headerlink" title="3.6 一个小技巧 单行文字垂直居中的代码"></a>3.6 一个小技巧 单行文字垂直居中的代码</h2><p>CSS没有提供文字垂直居中的代码。这里可以使用一个小枝巧来实现</p><p>解决方案:<strong>让文字的行高等于盒子的高度</strong>就可以让文字在当前盒子内垂直居中</p><h1 id="4-CSS的背景"><a href="#4-CSS的背景" class="headerlink" title="4. CSS的背景"></a>4. CSS的背景</h1><p>通过CSS背景属性,可以给页面元素添加背景样式。</p><p>背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。</p><h2 id="4-1-背景颜色"><a href="#4-1-背景颜色" class="headerlink" title="4.1 背景颜色"></a>4.1 背景颜色</h2><p>background-color属性定义了元素的背景颜色。</p><p><code>background-color:颜色值;</code></p><p>一般情况下元素背景颜色默认值是transparent(透明),也可以手动指定背景颜色为透明色。</p><h2 id="4-2-背景图片"><a href="#4-2-背景图片" class="headerlink" title="4.2 背景图片"></a>4.2 背景图片</h2><p>background image属性描述了元素的背景图像。实际开发常见于logo或者一些装饰性的小图片或者是超大的背景图片,优点是非常便于控制位置(精灵图也是一种运用场景)</p><p><code>background-image : none | url (url)</code></p><table><thead><tr><th>参数值</th><th>怍用</th></tr></thead><tbody><tr><td>none</td><td>无背景图(默认的)</td></tr><tr><td>url</td><td>使用绝对或相对地址指定背晨图像</td></tr></tbody></table><h2 id="4-3-背景平铺"><a href="#4-3-背景平铺" class="headerlink" title="4.3 背景平铺"></a>4.3 背景平铺</h2><p>如果需要在HTML页面上对背景图像进行平铺。可以使用background-repeat属性。</p><p><code>background-repeat: repeat | no-repeat | repeat-x | repeat-y</code></p><table><thead><tr><th>参数值</th><th>怍用</th></tr></thead><tbody><tr><td>repeat</td><td>背景图像在纵向和横向上平铺(默认的)</td></tr><tr><td>no-repeat</td><td>背景图像不平铺</td></tr><tr><td>repeat-x</td><td>背最图像在横向上平铺</td></tr><tr><td>repeat-y</td><td>背景图像在纵向平铺</td></tr></tbody></table><h2 id="4-4-背景图片位置"><a href="#4-4-背景图片位置" class="headerlink" title="4.4 背景图片位置"></a>4.4 背景图片位置</h2><p>利用background position属性可以改变图片在背景中的位置。</p><p><code>background-position: x y;</code></p><p>参数代表的意思是: x坐标和y坐标。可以使用方位名词或者精确单位</p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>百分数</td></tr><tr><td>position</td><td>top 、 center 、 bottom 、 left 、 center 、 right方位名词</td></tr></tbody></table><ol><li>参数是方位名词</li></ol><ul><li>如果指定的两个值都是方位名词,则两个值前后顺序无关,比如left top和top left效果一致</li><li>如果只指定了一个方位名词,另一个值省略,则第二个值默认居中对齐</li></ul><ol start="2"><li>参数是精确单位</li></ol><ul><li>如果参数值是精确坐标 ,那么第一个肯定是x坐标,第二个一定是y坐标</li><li>如果只指定一个数值。那该数值一定是x坐标,另一个默认重直居中</li></ul><ol start="3"><li>参数是混合单位</li></ol><ul><li>如果指定的两个值是精确单位和方位名词混合使用, 则第一个值是x坐标,第二个值是y坐标</li></ul><h2 id="4-5-背景图像固定-背景附着"><a href="#4-5-背景图像固定-背景附着" class="headerlink" title="4.5 背景图像固定(背景附着)"></a>4.5 背景图像固定(背景附着)</h2><p>background attachment属性设置背景图像是否固定或者随着页面的其余部分滚动。</p><p>background-attachment后期可以制作视差滚动的效果。</p><p><code>background-attachment : scroll | fixed</code></p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>scroll</td><td>背景图像是随对象内容滚动</td></tr><tr><td>fixed</td><td>背景图像固定</td></tr></tbody></table><h2 id="4-6-背景复合写法"><a href="#4-6-背景复合写法" class="headerlink" title="4.6 背景复合写法"></a>4.6 背景复合写法</h2><p>为了简化背景属性的代码,我]可以将这些属性合并简写在同个属性background中.从而节约代码量</p><p>当使用简写属性时,没有特定的书写顺序,一般习惯固定顺序为:</p><p>background: 背景颜色 背景图片地址 背景平铺背置图像滚动 背景图片位置;</p><p>background: transparent url(image.jpg) repeat-y fixced top;</p><p>这是实际开发中更提倡的写法。</p><h2 id="4-7-背景色半透明"><a href="#4-7-背景色半透明" class="headerlink" title="4.7 背景色半透明"></a>4.7 背景色半透明</h2><p>CSS3提供了背景颜色半透明的效果。</p><p><code>background: rgba(O, 0, 0, 0.3);</code></p><ul><li>最后一个参数是alpha透明度,取值范围在0~1之间</li><li>习惯把0.3的 0省略掉,写为background:rgba(0,0,0, .3)</li><li>注意:背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li></ul><h1 id="5-CSS的三大特性"><a href="#5-CSS的三大特性" class="headerlink" title="5. CSS的三大特性"></a>5. CSS的三大特性</h1><h2 id="5-1-层叠性"><a href="#5-1-层叠性" class="headerlink" title="5.1 层叠性"></a>5.1 层叠性</h2><p>CSS有三个非常重要的三个特性:层叠性、继承性、优先级。</p><p>相同选择器给设置相同的样式,此时一个样式就会覆盖(层叠)另一个冲突的样式。层叠性主要解决样式冲突的问题</p><p>层叠性原则:</p><ul><li>样式冲突,遵循的原则是就近原则,哪个样式离结构近,就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><h2 id="5-2-继承性"><a href="#5-2-继承性" class="headerlink" title="5.2 继承性"></a>5.2 继承性</h2><p>CSS中的继承子标签会继承父标签的某些样式,如文本颜色和字号。</p><ul><li>恰当地使用继承可以简化代码,降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式 ( text-,font-,line-这些元素开头的可以继承,以及color属性)</li></ul><p><strong>行高的继承性</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    font:12px/1.5 'Microsoft YaHei' ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以跟单位也可以不跟单位</li><li>如果子元素没有设置行高,则会继承父元素的行高为1.5</li><li>此时子元素的行高是: 当前子元素的文字大小* 1.5</li><li>body行高1.5这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高</li></ul><h2 id="5-3-优先级"><a href="#5-3-优先级" class="headerlink" title="5.3 优先级"></a>5.3 优先级</h2><p>选择器权重如下表所示。</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0,0,0,0</td></tr><tr><td>元素选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器,伪类选择器</td><td>0,0,1,0</td></tr><tr><td>ID选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式syle=”</td><td>1,0,0,0</td></tr><tr><td>important重要的</td><td>∞无穷大</td></tr></tbody></table><p><strong>优先级注意点</strong>:</p><ol><li>权重是有4组数字组成但是不会有进位。</li><li>可以理解为类选择器永远大于元素选择器 id选择器永远大于类选择器以此类推。</li><li>等级判断从左向右,如果某一位数值相同,则判断下一位数值。</li><li>可以简单记忆法:通配符和继承权重为0,标签选择器为1.类(伪类)选择器为10, id选择器100,行内样式表为1000, !important无穷大.</li><li>继承的权重是0.如果该元素没有直接选中.不管父元素权重多高,子元素得到的权重都是0.</li></ol><p><strong>权重叠加</strong>:如果是复合选择器,则会有权重叠加,需要计算权重。</p><ul><li>div ul li ————&gt; 0,0,0,3</li><li>.nav ul li ————&gt; 0,0,1,2</li><li>a:hover ————&gt; 0,0,1,1</li><li>.nav a ————&gt; 0,0,1,1</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3样式01</title>
      <link href="/2020/06/03/Frontend04/"/>
      <url>/2020/06/03/Frontend04/</url>
      
        <content type="html"><![CDATA[<ul><li>CSS基础选择器</li><li>CSS字体属性</li><li>CSS文本属性</li><li>CSS引入方式</li></ul><a id="more"></a><h1 id="1-CSS简介"><a href="#1-CSS简介" class="headerlink" title="1. CSS简介"></a>1. CSS简介</h1><h2 id="1-3-CSS语法规范"><a href="#1-3-CSS语法规范" class="headerlink" title="1.3 CSS语法规范"></a>1.3 CSS语法规范</h2><p>CSS规则由两个主要的部分构成:选择器以及一条或多条声明。</p><ul><li>选择器是用于指定CSS样式的HTML标签,花括号内是对该对象设置的具体样式</li><li>属性和属性值以“键值对”的形式出现</li><li>属性是对指定的对象设置的样式属性,例如字体大小、文本颜色等</li><li>属性和属性值之间用英文“：”分开</li><li>多个“键值对”之间用英文“；” 进行区分</li></ul><h1 id="2-CSS基础选择器"><a href="#2-CSS基础选择器" class="headerlink" title="2.CSS基础选择器"></a>2.CSS基础选择器</h1><h2 id="2-1-CSS选择器的作用"><a href="#2-1-CSS选择器的作用" class="headerlink" title="2.1 CSS选择器的作用"></a>2.1 CSS选择器的作用</h2><p>选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。简单来说,就是选择标签用的。</p><h2 id="2-2-选择器分类"><a href="#2-2-选择器分类" class="headerlink" title="2.2 选择器分类"></a>2.2 选择器分类</h2><p>选择器分为基础选择器和复合选择器两个大类,先了解一下基础选择器。</p><ul><li>基础选择器是由单个选择器组成的</li><li>基础选择器又包括:标签选择器、类选择器、id选择器和通配符选择器</li></ul><h2 id="2-3-标签选择器"><a href="#2-3-标签选择器" class="headerlink" title="2.3 标签选择器"></a>2.3 标签选择器</h2><p>标签选择器(元素选择器)是指用HTML标签名称作为选择器,按标签名称分类,为页面中某一类标签指定统一的CSS样式。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>标签选择器可以把某一类标签全部选择出来,比如所有的<code>&lt;div&gt;</code>标签和所有的<code>&lt;span&gt;</code>标签。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>能快速为页面中同类型的标签统一设置样式。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>不能设计差异化样式,只能选择全部的当前标签。</p><h2 id="2-4-类选择器"><a href="#2-4-类选择器" class="headerlink" title="2.4 类选择器"></a>2.4 类选择器</h2><p>如果想要差异化选择不同的标签,单独选一个或者某几个标签,可以使用类选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名&#123;</span><br><span class="line">属性1: 属性值1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构需要用class属性来调用class类的意思</p><p><code>&lt;div class-&#39;red&#39;&gt;变红色&lt;/div&gt;</code></p><p>类选择器在HTML中以class属性表示，在CSS中,类选择器以一个点”.” 号显示</p><p><strong>注意</strong></p><ol><li>类选择器使用”.”( 英文点号)进行标识,后面紧跟类名(自定义,自己命名的) .</li><li>可以理解为给这个标签起了一个名字,来表示。</li><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不要使用纯数字、中文等命名,尽量使用英文字母来表示</li><li>命名要有意义。尽量使别人一跟就知道这个类名的目的。</li></ol><p>记忆口诀:样式点定义,结构类调用。一个或多个,开发最常用。</p><h3 id="2-4-1-多类名"><a href="#2-4-1-多类名" class="headerlink" title="2.4.1 多类名"></a>2.4.1 多类名</h3><ol><li>多类名使用方式</li></ol><p><code>&lt;div class=&quot;red font20&quot;&gt;亚瑟&lt;/div&gt;</code></p><p>(1)在标签class属性中写多个类名<br>(2)多个类名中间必须用空格分开<br>(3)这个标签就可以分别具有这些类名的样式</p><ol start="2"><li>多类名开发中使用场景</li></ol><p>(1)可以把一些标签元素相同的样式(共同的部分)放到一个类里面.<br>(2)这些标签都可以调用这个公共的类然后再调用自己独有的类.<br>(3)从而节省CSS代码统一修改也非常方便</p><h2 id="2-5-id选择器"><a href="#2-5-id选择器" class="headerlink" title="2.5 id选择器"></a>2.5 id选择器</h2><p>id选择器可以为标有特定id的HTML元素指定特定的样式。</p><p>HTML元素以id属性来设置id选择器, CSS中id选择器以“#”来定义。</p><p><code>#id名{属性1: 属性值1;}</code></p><p>例如,将id为nav元素中的内容设置为红色。</p><p><code>#nav {color: red;}</code></p><p>注意:id属性只能在每个HTML文档中出现一次。口诀:样式#定义,結构id调用,只能调用一次,别人切勿使用。</p><p><strong><em>id选择器和类选择器的区别</em></strong></p><ul><li>类选择器(class)好比人的名字,一个人可以有多个名字,同时一个名字也可以被多个人使用。</li><li>id选择器好比人的身份证号码,全中国是唯一的,不得重复。</li><li>id选择器和类选择器最大的不同在于使用次数上。</li><li>类选择器在修改样式中用的最多,id选择器一般用于页面唯一性的元素上。经常和JavaScript搭配使用。</li></ul><h2 id="2-6-通配符选择器"><a href="#2-6-通配符选择器" class="headerlink" title="2.6 通配符选择器"></a>2.6 通配符选择器</h2><p>在CSS中,通配符选择器使用“*”定义,它表示选取页面中所有元素(标签) .</p><p><code>*{    属性1:属性值1;}</code></p><ul><li>通配符选择器不需要调用，目动就给所有的元素使用样式</li><li>特殊情况才使用,后面讲解使用场景以下是清除所有的元素标签的内外边距</li></ul><p><code>* {    margin: 0;    paddingt 0;}</code></p><h1 id="3-CSS字体属性"><a href="#3-CSS字体属性" class="headerlink" title="3. CSS字体属性"></a>3. CSS字体属性</h1><p>CSS Fonts(字体)属性用于定义字体系列，大小粗细、和文字样式(如斜体)。</p><h2 id="3-1-字体系列"><a href="#3-1-字体系列" class="headerlink" title="3.1 字体系列"></a>3.1 字体系列</h2><p>CSS使用font-family属性定义文本的字体系列。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P &#123; font-family: "微软雅黑";&#125;</span><br><span class="line">div &#123;font- family: Arial, "Microsoft Yahei", "微软雅黑";&#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下，如果有空格隔开的多个单词组成的字体加引号.</li><li>尽量使用系统默认自带字体,保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体: body(font family, “Microsoft YaHei”,tahoma,arial,’HiraginoSans GB’;}</li></ul><h2 id="3-2-字体大小"><a href="#3-2-字体大小" class="headerlink" title="3.2 字体大小"></a>3.2 字体大小</h2><p>CSS使用font-size属性定义字体大小。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P &#123;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px(像素)大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为16px</li><li>不同浏览器可能默认显示的字号大小不一致,我们尽量给一个明确值大小,不要默认大小</li><li>可以给body指定整个页面文字的大小</li></ul><h2 id="3-3-字体粗细"><a href="#3-3-字体粗细" class="headerlink" title="3.3 字体粗细"></a>3.3 字体粗细</h2><p>CSS使用font-welight属性设置文本字体的粗细。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值(不加粗的)</td></tr><tr><td>bold</td><td>定义粗体(加粗的)</td></tr><tr><td>100-900</td><td>400 等同于normal,而700等同于bold 注意这个数字后面不跟单位</td></tr></tbody></table><h2 id="3-4-文字样式"><a href="#3-4-文字样式" class="headerlink" title="3.4 文字样式"></a>3.4 文字样式</h2><p>CSS使用font-style属性设置文本的风格。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P &#123;</span><br><span class="line">    font-style: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>normal</td><td>默认值，浏览器会显示标准的字体样式font-style: normal;</td></tr><tr><td>italic</td><td>浏览器会显示斜体的字体样式。</td></tr></tbody></table><p>注意:平时我们很少给文字加斜体,反而要给斜体标签(em,i)改为不倾斜字体。</p><h2 id="3-5-字体复合属性"><a href="#3-5-字体复合属性" class="headerlink" title="3.5 字体复合属性"></a>3.5 字体复合属性</h2><p>字体属性可以把以上文字样式综合来写，这样可以更节约代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    font: font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用font属性时,必须按上面语法格式中的顺序书写。<strong>不能更换顺序</strong>,并且各个属性间以空格隔开</li><li>不需要设置的属性可以省略(取默认值),但<strong>必须保留font-size和font-family属性</strong>,否则font属性将不起作用</li></ul><h1 id="4-CSS文本属性"><a href="#4-CSS文本属性" class="headerlink" title="4. CSS文本属性"></a>4. CSS文本属性</h1><p>CSS Text(文本)属性可定义文本的外观,比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等。</p><h2 id="4-1-文本颜色"><a href="#4-1-文本颜色" class="headerlink" title="4.1 文本颜色"></a>4.1 文本颜色</h2><p>color属性用于定义文本的颜色。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示表示</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red,green,blue,pink</td></tr><tr><td>十六进制</td><td>#FF000O,#FF6600,#29D794</td></tr><tr><td>RGB代码</td><td>r(255,0.0)或(g(1006.0%,09%0)</td></tr></tbody></table><p>开发中最常用的是十六进制</p><h2 id="4-2-对齐文本"><a href="#4-2-对齐文本" class="headerlink" title="4.2 对齐文本"></a>4.2 对齐文本</h2><p>text-align属性用于设置元素内文本内容的水平对齐方式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐(默认值)</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><h2 id="4-3-装饰文本"><a href="#4-3-装饰文本" class="headerlink" title="4.3 装饰文本"></a>4.3 装饰文本</h2><p>text-decoration属性规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text-decoration: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性值 | 描述<br>none | 默认。没有装饰线(最常用)<br>underline | 下划线。链接a自带下划线(常用)<br>overline | 上划线。(几乎不用)<br>line through | 删除线。(不常用)</p><h2 id="4-4-文本缩进"><a href="#4-4-文本缩进" class="headerlink" title="4.4 文本缩进"></a>4.4 文本缩进</h2><p>text-indent属性用来指定文本的第一行的缩进,通常是将段落的首行缩进。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text- indent: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过设置该属性,所有元素的第一行都可以缩进一个给定的长度 ,甚至该长度可以是负值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P &#123;</span><br><span class="line">    text-indent: 2em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em是一个相对单位,就是当前元素(font-size)1个文字的大小，如果当前元素没有设置大小，则会按照父元素的1个文字大小。</p><h2 id="4-5-行间距"><a href="#4-5-行间距" class="headerlink" title="4.5 行间距"></a>4.5 行间距</h2><p>line-height属性用于设置行间的距离(行高)。可以控制文字行与行之间的距离。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P &#123;</span><br><span class="line">    line-height: 26px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-CSS引入方式"><a href="#5-CSS引入方式" class="headerlink" title="5. CSS引入方式"></a>5. CSS引入方式</h1><h2 id="5-1-CSS的三种样式表"><a href="#5-1-CSS的三种样式表" class="headerlink" title="5.1 CSS的三种样式表"></a>5.1 CSS的三种样式表</h2><p>按照CSS样式书写的位置(或者引入的方式),CSS样式表可以分为三大类:</p><ol><li>行内样式表(行内式)</li><li>内部样式表(嵌入式)</li><li>外部样式表(链接式)</li></ol><p>内部样式表(内嵌样式表)是写到html页面内部是将所有的CSS代码抽取出来.单独放到一个<code>&lt;style&gt;</code>标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line">        color: red;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在HTML文档的任何地方,但般会放在文档的<code>&lt;head&gt;</code>标签中</li><li>通过此种方式,可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰。但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定 CSS ,通常也被称为嵌入式引入</li></ul><p>行内样式表(内联样式表)是在元素标签内部的style属性中设定CSS样式。适合于修改简单样式</p><p><code>&lt;div stylem&quot;color: red; font-size: 12px;&quot;&gt;青春不常在，抓紧谈恋爱&lt;/div&gt;</code></p><ul><li>style其实就是标签的属性</li><li>在双引号中间,写法要符合CSS规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐,并且没有体现出结构与样式相分离的思想,所以不推荐大量使用,只有对当前元素添加简<br>单样式的时候,可以考虑使用</li><li>使用行内样式表设定CSS,通常也被称为行内式引入</li></ul><h2 id="5-4-外部样式表"><a href="#5-4-外部样式表" class="headerlink" title="5.4 外部样式表"></a>5.4 外部样式表</h2><p>实际开发都是外部样式表。适合于样式比较多的情况核心是:样式单独写到CSS文件中,之后把CSS文件引入到HTML页面中使用</p><p>引入外部样式表分为两步:</p><ol><li>新建一个后缀名为.CSS的样式文件,把所有CSS代码都放入此文件中。</li><li>在HTML页面中,使用<code>&lt;link&gt;</code>标签引入这个文件。</li></ol><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;</code></p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系。在这里需要指定为”stylesheet”, 表示被链接的文档是一个样式表文件。</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的URL,可以是相对路径，也可以是绝对路径。</td></tr></tbody></table><ul><li>使用外部样式表设定CSS ,通常也被称为外链式或链接式引入，这种方式是开发中常用的方式</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端02-HTML标签(下)</title>
      <link href="/2020/06/01/Frontend03/"/>
      <url>/2020/06/01/Frontend03/</url>
      
        <content type="html"><![CDATA[<ul><li>书写表格</li><li>无序列表</li><li>常用input表单类型</li><li>下拉列表表单</li><li>使用表单元素实现注册页面</li><li>查阅W3C文档</li></ul><a id="more"></a><h1 id="1-表格标签"><a href="#1-表格标签" class="headerlink" title="1 表格标签"></a>1 表格标签</h1><h2 id="1-1-表格的基本语法"><a href="#1-1-表格的基本语法" class="headerlink" title="1.1 表格的基本语法"></a>1.1 表格的基本语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;table&gt; &lt;/table&gt;</code>是用于定义表格的标签。</li><li><code>&lt;tr&gt; &lt;/tr&gt;</code>标签用于定义表格中的行.必须嵌套在<code>&lt;table&gt; &lt;/table&gt;</code>标签中。</li><li><code>&lt;td&gt; &lt;/td&gt;</code>用于定义表格中的单元格,必须嵌套在<code>&lt;tr&gt; &lt;/tr&gt;</code>标签中。</li><li>字母td指表格数据table data) ,即数据单元格的内容。</li></ol><h2 id="1-2-表头单元格标签"><a href="#1-2-表头单元格标签" class="headerlink" title="1.2 表头单元格标签"></a>1.2 表头单元格标签</h2><p>一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加相居中显示.</p><p><code>&lt;th&gt;</code>标签表示HTML表格的表头部分(table head的缩写)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-3-表格属性"><a href="#1-3-表格属性" class="headerlink" title="1.3 表格属性"></a>1.3 表格属性</h2><p>表格标签这部分属性实际开发不常用,后面通过CSS来设置.</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left. center. right</td><td>规定表格相对周围元素的对齐方式。</td></tr><tr><td>border</td><td>1或-</td><td>规定表格单元是否拥有边框，默认为””，表示没有边框</td></tr><tr><td>elladding</td><td>像素值</td><td>规定单元边汨与其内容之间的空白，默认1像素。</td></tr><tr><td>cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认2像素。</td></tr><tr><td>width</td><td>像素值或百分比</td><td>规定表格的宽度。</td></tr></tbody></table><h2 id="1-4-表格结构标签"><a href="#1-4-表格结构标签" class="headerlink" title="1.4 表格结构标签"></a>1.4 表格结构标签</h2><ol><li><code>&lt;thead&gt; &lt;/thead&gt;</code>:用于定义表格的头部。&lt;<code>thead&gt;</code>内部必须拥有<code>&lt;tr&gt;</code>标签。一般是位于第一行。</li><li><code>&lt;tbody&gt; &lt;/tbody&gt;</code>:用于定义表格的主体,主要用于放数据本体。</li><li>以上标签都是放在<code>&lt;table&gt; &lt;/table&gt;</code>标签中。</li></ol><h2 id="1-5-合并单元格"><a href="#1-5-合并单元格" class="headerlink" title="1.5 合并单元格"></a>1.5 合并单元格</h2><p><strong>合并单元格方式</strong>:</p><ul><li>跨行合并: rowspan=”合并单元格的个数”</li><li>跨列合并: colspan=’合并单元格的个数”</li></ul><p><strong>目标单元格</strong>:<strong>(写合并代码)</strong></p><ul><li>跨行:最上侧单元格为目标单元格,写合井代码</li><li>跨列:最左侧单元格为目标单元格写合井代码</li></ul><p>合并单元格三步曲:</p><ol><li>先确定是跨行还是跨列合并。</li><li>找到目标单元格写上合井方式=合并的单元格数量。比如: <code>&lt;tdcolspan= &quot;2&quot; &gt; &lt;/td&gt;</code>。</li><li>删除多余的单元格。</li></ol><h1 id="2-列表标签"><a href="#2-列表标签" class="headerlink" title="2. 列表标签"></a>2. 列表标签</h1><h2 id="2-1-无序列表-重点"><a href="#2-1-无序列表-重点" class="headerlink" title="2.1 无序列表(重点)"></a>2.1 无序列表(重点)</h2><p><code>&lt;ul&gt;</code>标签表示HTML页面中项目的无序列表,一般会以项目符号呈现列表项,而列表项使用<code>&lt;li&gt;</code>标签定义。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>无序列表的各个列表项之间没有顺序级别之分,并列的。</li><li><code>&lt;ul&gt; &lt;/ul&gt;</code>只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>,直接在<code>&lt;ul&gt; &lt;/ul&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li><li><code>&lt;li&gt;</code>与<code>&lt;/li&gt;</code>之间相当于一个容器,可以容纳所有元素。</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置。</li></ol><h2 id="2-2-有序列表-理解"><a href="#2-2-有序列表-理解" class="headerlink" title="2.2 有序列表(理解)"></a>2.2 有序列表(理解)</h2><p>在HTML标签中，<code>&lt;ol&gt;</code> 标签用于定义有序列表,列表排序以数字来显示,并且使用<code>&lt;li&gt;</code>标签来定义列表项。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;ol&gt; &lt;/ol&gt;</code>中只能嵌套<code>&lt;li&gt; &lt;/li&gt;</code> , 直接在<code>&lt;ol&gt;&lt;/ol&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li><li><code>&lt;li&gt;</code> 与<code>&lt;/li&gt;</code>之间相当于一个容器,可以容纳所有元素。</li><li>有序列表会带有自己样式属性,但在实际使用时，我们会使用CSS来设置。</li></ol><h2 id="2-3自定义列表-重点"><a href="#2-3自定义列表-重点" class="headerlink" title="2.3自定义列表(重点)"></a>2.3自定义列表(重点)</h2><p>在HTML标签中，<code>&lt;dl&gt;</code>标签用于定义描述列表(或定义列表) , 该标签会与<code>&lt;dt&gt;</code>(定义项目/名字)和<code>&lt;dd&gt;</code> (描述每一个项目/名字)一起使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;dl&gt; &lt;/dl&gt;</code>里面只能包含<code>&lt;dt&gt;</code>和<code>&lt;dd&gt;</code>.</li><li><code>&lt;dt&gt;</code> 和<code>&lt;dd&gt;</code>个数没有限制,经常是一个<code>&lt;dt&gt;</code>对应多个<code>&lt;dd&gt;</code>.</li></ol><h1 id="3-表单标签"><a href="#3-表单标签" class="headerlink" title="3. 表单标签"></a>3. 表单标签</h1><p><strong>收集用户信息</strong></p><h2 id="3-1-表单的组成"><a href="#3-1-表单的组成" class="headerlink" title="3.1 表单的组成"></a>3.1 表单的组成</h2><p>在HTML中, 一个完整的表单通常由表单域、表单控件(也称为表单元素)和提示信息3个部分构成。</p><h2 id="3-2-表单域"><a href="#3-2-表单域" class="headerlink" title="3.2 表单域"></a>3.2 表单域</h2><p>表单域是一个包含表单元素的区域。</p><p>在HTML标签中，<code>&lt;form&gt;</code> 标签用于定义表单域,以实现用户信息的收集和传递。</p><p><code>&lt;form</code>&gt;会把它范围内的表单元素信息提交给服务器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span> <span class="attr">method</span>=<span class="string">"提交方式"</span> <span class="attr">name</span>=<span class="string">"表单域名称"</span>&gt;</span></span><br><span class="line">    各种表单元素控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单域。</td></tr></tbody></table><h2 id="3-3-表单控件-表单元素"><a href="#3-3-表单控件-表单元素" class="headerlink" title="3.3 表单控件(表单元素)"></a>3.3 表单控件(表单元素)</h2><p>在表单域中可以定义各种表单元素,这些表单元素就是允许用户在表单中输入或者选择的内容控件。</p><h2 id="3-3-1-lt-input-gt-表单元素"><a href="#3-3-1-lt-input-gt-表单元素" class="headerlink" title="3.3.1 &lt;input&gt;表单元素"></a>3.3.1 <code>&lt;input&gt;</code>表单元素</h2><p>在表单元素中<code>&lt;input&gt;</code>标签用于收集用户信息。</p><p>在<code>&lt;input&gt;</code>标签中,包含一个type属性,根据不同的type属性值,输入字段拥有很多种形式(可以文本字段、复选框、掩码后的文本控件、单选按钮、按钮等)。</p><p><code>&lt;input type=&quot;属性值&quot; /&gt;</code></p><ul><li><code>&lt;input /&gt;</code>标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li></ul><p>type属性的属性值及其描述如下:</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可点击按钮(多数情况下，用于通过JavaScript启动脚本)。</td></tr><tr><td>checkbox</td><td>定义复选框。</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，供文件上传。</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段。</td></tr><tr><td>image</td><td>定义图像形式的提交按钮。</td></tr><tr><td>password</td><td>定义密码字段。该字段中的字符被掩码。</td></tr><tr><td>radio</td><td>定义单选按钮。</td></tr><tr><td>reset</td><td>定义重置按钮。重置按钮会清除表单中的所有数据。</td></tr><tr><td>submit</td><td>定义提交按钮。提交按钮会把表单数据发送到服务器。</td></tr><tr><td>text</td><td>定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符。</td></tr></tbody></table><p>除type属性外, <code>&lt;input&gt;</code>标签还有其他很多属性,其常用属性如下:</p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>由用户自定义</td><td>定义input元素的名称。</td></tr><tr><td>value</td><td>由用户自定义</td><td>规定input元素的值。</td></tr><tr><td>checked</td><td>checked</td><td>规定此input元素首次加载时应当被选中。</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字段中的字符的最大长度。</td></tr></tbody></table><ol><li>name和value是每个表单元素都有的属性值主要给后台人员使用</li><li>name表单元素的名字，要求<strong>单选按钮和复选框要有相同的name值</strong></li><li>checked属性主要针对于单选按钮和复选框主要作用一打开页面,就要可以默认选中某个表单元素</li><li>maxlength 是用户可以在表单元素输入的最大字符数,一般较少使用.</li></ol><h2 id="3-3-2-lt-label-gt-标签"><a href="#3-3-2-lt-label-gt-标签" class="headerlink" title="3.3.2 &lt;label&gt;标签"></a>3.3.2 <code>&lt;label&gt;</code>标签</h2><p><code>&lt;label&gt;</code>标签为input元素定义标注(标签)。</p><p><code>&lt;label&gt;</code>标签用于绑定一个弹元素当点击<code>&lt;label&gt;</code>标签内的文本时,浏览器就会自动将焦点(光标转到或者选择对应的表单元素上用来增加用户体验.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sex"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>核心: <code>&lt;label&gt;</code>标签的for属性应当与相关元素的id属性相同。</p><h2 id="3-3-3-lt-select-gt-表单元素"><a href="#3-3-3-lt-select-gt-表单元素" class="headerlink" title="3.3.3 &lt;select&gt; 表单元素"></a>3.3.3 <code>&lt;select&gt;</code> 表单元素</h2><p>在页面中,如果有多个选项让用户选择,并且想要节页面空间时,可以使用<code>&lt;select&gt;</code>标签控件定义下拉列表.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;select&gt;</code>中至少包含一对<code>&lt;option&gt;</code></li><li>在<code>&lt;option&gt;</code>中定义selected =”selected”时,当前项即为默认选中项。</li></ol><h2 id="3-3-4-lt-textarea-gt-表单元素"><a href="#3-3-4-lt-textarea-gt-表单元素" class="headerlink" title="3.3.4 &lt;textarea&gt;表单元素"></a>3.3.4 <code>&lt;textarea&gt;</code>表单元素</h2><p>当用户输入内容较多的情况下,就不能使用文本框表单了,此时可以使用<code>&lt;textarea&gt;</code>标签。</p><p>在表单元素中,<code>&lt;textarea&gt;</code>标签是用于定义多行文本输入的控件。</p><p>使用多行文本输入控件,可以输入更多的文字,该控件常见于留言板,评论。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端02-HTML标签(上)</title>
      <link href="/2020/05/30/Frontend02/"/>
      <url>/2020/05/30/Frontend02/</url>
      
        <content type="html"><![CDATA[<ul><li>HTML语法规范</li><li>HTML基本结构标签</li><li>HTML常用标签</li><li>HTML中的注释和特殊字符</li></ul><a id="more"></a><h1 id="1-HTML语法规范"><a href="#1-HTML语法规范" class="headerlink" title="1.HTML语法规范"></a>1.HTML语法规范</h1><h2 id="1-1-基本语法概述"><a href="#1-1-基本语法概述" class="headerlink" title="1.1 基本语法概述"></a>1.1 基本语法概述</h2><ol><li>HTML标签是由尖括号包围的关键词,例如<code>&lt;html&gt;</code>。</li><li>HTML标签通常是成对出现的,例妇<code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>,称为双标签。标签对中的第一个标签是<br>开始标签,第二个标签是结束标签。</li><li>有些特殊的标签必须是单个标签(极少情况),例如<code>&lt;br/&gt;</code>,我们称为单标签。</li></ol><h2 id="1-2-标签关系"><a href="#1-2-标签关系" class="headerlink" title="1.2 标签关系"></a>1.2 标签关系</h2><p>双标签关系可以分为两类:<strong>包含关系</strong>和<strong>并列关系</strong>。</p><p>包含关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并列关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="2-HTML基本结构标签"><a href="#2-HTML基本结构标签" class="headerlink" title="2. HTML基本结构标签"></a>2. HTML基本结构标签</h1><h2 id="2-1-第一个HTML"><a href="#2-1-第一个HTML" class="headerlink" title="2.1 第一个HTML"></a>2.1 第一个HTML</h2><p>每个网页都会有一个基本的结构标签 (也称为骨架标签) ,页面内容也是在这些基本标签上书写。</p><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;html&gt;&lt;/html&gt;</code></td><td>HTML标签</td><td>页面中最大的标签，称为根标签</td></tr><tr><td><code>&lt;head&gt;&lt;/head&gt;</code></td><td>文档的头部</td><td>注意在head标签中必须要设置的标签是title</td></tr><tr><td><code>&lt;titile&gt;&lt;/title&gt;</code></td><td>文档的标题</td><td>让页面拥有一个属于自己的网页标题</td></tr><tr><td><code>&lt;body&gt;&lt;/body&gt;</code></td><td>文档的主体</td><td>元素包含文档的所有内容，页面内容基本都是放到body里面的</td></tr></tbody></table><p>HTML文档的的后缀名必须是.html或.htm ,浏览器的作用是读取HTML文档,并以网页的形式显示出它们。</p><p>此时,用浏览器打开这个网页,就可以预览写的第一个HTML文件了。</p><h2 id="2-2-基本结构标签总结"><a href="#2-2-基本结构标签总结" class="headerlink" title="2.2 基本结构标签总结"></a>2.2 基本结构标签总结</h2><p><img src="https://raw.githubusercontent.com/Duvin0512/images/master/images/20200531155814.png?token=APUBCG2J6JX7MGXA6HMOXNK62NR5O" alt="标签结构"></p><h1 id="3-HTML常用标签"><a href="#3-HTML常用标签" class="headerlink" title="3.HTML常用标签"></a>3.HTML常用标签</h1><h2 id="3-1-标题标签-lt-h1-gt-lt-h6-gt-重要"><a href="#3-1-标题标签-lt-h1-gt-lt-h6-gt-重要" class="headerlink" title="3.1 标题标签&lt;h1&gt;-&lt;h6&gt;(重要)"></a>3.1 标题标签<code>&lt;h1&gt;-&lt;h6&gt;</code>(重要)</h2><p>HTML 提供了6个等级的网页标题,即<code>&lt;h1&gt;- &lt;h6&gt;</code></p><p><code>&lt;h1&gt;我是一级标题&lt;/h1&gt;</code></p><p>标签语义:作为标题使用,并诅依据重要性减。</p><p><strong>特点</strong>:</p><ol><li>加了标题的文字会变的加粗,字号也会依次变大。</li><li>一个标题独占一行。</li></ol><h2 id="3-2-段落和换行标签-重要"><a href="#3-2-段落和换行标签-重要" class="headerlink" title="3.2 段落和换行标签(重要)"></a>3.2 段落和换行标签(重要)</h2><p>在HTML标签中, <code>&lt;p&gt;</code> 标签用于定义段落</p><p><code>&lt;p&gt;我是一个段落标签&lt;/p&gt;</code></p><p>标签语义:可以把HTML文档分割为若干段落。</p><p><strong>特点</strong>:</p><ol><li>文本在一个段落中会根据浏览 器窗口的大小自动换行。</li><li>段落和段落之间保有空隙。</li></ol><p>某段文本强制换行显示,需要使用换行标签<code>&lt;br/&gt;</code></p><p><code>&lt;br /&gt;</code></p><p>标签语义:强制换行。</p><p><strong>特点</strong>:</p><ol><li><code>&lt;br/&gt;</code>是个单标签。</li><li><code>&lt;br/&gt;</code>标签只是简单地开始新的一行,跟段落不-样,段落之间会插入一些垂直的间距。</li></ol><h2 id="3-3-文本格式化标签"><a href="#3-3-文本格式化标签" class="headerlink" title="3.3 文本格式化标签"></a>3.3 文本格式化标签</h2><p>标签语义:突出重要性,比普通文字更重要.</p><table><thead><tr><th>语义</th><th>标签</th></tr></thead><tbody><tr><td>加粗</td><td><code>&lt;strong&gt;&lt;/strong&gt;</code>或者<code>&lt;b&gt;&lt;/b&gt;</code></td></tr><tr><td>倾斜</td><td><code>&lt;em&gt;&lt;/em&gt;</code>或者<code>&lt;i&gt;&lt;/i&gt;</code></td></tr><tr><td>删除线</td><td><code>&lt;del&gt;&lt;/del&gt;</code>或者<code>&lt;s&gt;&lt;/s&gt;</code></td></tr><tr><td>下划线</td><td><code>&lt;ins&gt;&lt;/ins&gt;</code>或者<code>&lt;u&gt;&lt;/u&gt;</code></td></tr></tbody></table><h2 id="3-4-lt-div-gt-和-lt-span-gt-标签"><a href="#3-4-lt-div-gt-和-lt-span-gt-标签" class="headerlink" title="3.4 &lt;div&gt;和&lt;span&gt;标签"></a>3.4 <code>&lt;div&gt;</code>和<code>&lt;span&gt;</code>标签</h2><p><code>&lt;div&gt;</code>和<code>&lt;span&gt;</code>是没有语义的,它们就是一个盒子,用来装内容的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这是头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>特点</strong>:</p><ol><li><code>&lt;div&gt;</code>标签用来布局,但是现在一行只能放一个<code>&lt;div&gt;</code><strong><em>大盒子</em></strong></li><li><code>&lt;span&gt;</code>标签用来布局,一行上可以多个<code>&lt;span&gt;</code><strong><em>小盒子</em></strong></li></ol><h2 id="3-5-图像标签和路径-重点"><a href="#3-5-图像标签和路径-重点" class="headerlink" title="3.5 图像标签和路径(重点)"></a>3.5 图像标签和路径(重点)</h2><h3 id="3-5-1-图像标签"><a href="#3-5-1-图像标签" class="headerlink" title="3.5.1 图像标签"></a>3.5.1 图像标签</h3><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>SrC</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本。图像不能显示的文字</td></tr><tr><td>title</td><td>文本</td><td>提示文本。鼠标放到图像上,显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框粗细</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img.jpg"</span> <span class="attr">alt</span>=<span class="string">"图像显示不出来的文字"</span> <span class="attr">title</span>=<span class="string">"鼠标到图片上显示的文字"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">border</span>=<span class="string">"15"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>图像标签属性注意点:</p><ul><li><ol><li>图像标签可以拥有多个属性,必须写在标签名的后面。</li></ol></li><li><ol start="2"><li>属性之间不分先后顺序,标签名与属性、属性与属性之间均以空格分开。</li></ol></li><li><ol start="3"><li>属性采取键值对的格式,即key= “value” 的格式,属性=“属性值”。</li></ol></li></ul><h3 id="3-5-2-路径"><a href="#3-5-2-路径" class="headerlink" title="3.5.2 路径"></a>3.5.2 路径</h3><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><p>相对路径:以引用文件所在位置为参考基础,而建立出的目录路径。</p><p><strong>图片相对于HTML页面的位置</strong></p><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td></td><td>图像文件位于HTML文件同一级如<code>&lt;img src=&quot;baidu.gif&quot; /&gt;</code></td></tr><tr><td>下一级路径</td><td>/</td><td>图像文件位于HTML文件下一级 如<code>&lt;img src=&quot;images/baidu.gif /&gt;</code></td></tr><tr><td>上一级路径</td><td>../</td><td>图像文件位于HTML文件上一级如<code>&lt;img src=&quot;../baidu.gif&quot; /&gt;</code></td></tr></tbody></table><h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h4><p>绝对路径:是指目录下的绝对位置,直接到达目标位置,通常是从盘符开始的路径。</p><h2 id="3-6-超链接标签-重点"><a href="#3-6-超链接标签-重点" class="headerlink" title="3.6 超链接标签(重点)"></a>3.6 超链接标签(重点)</h2><h3 id="3-6-1-链接的语法格式"><a href="#3-6-1-链接的语法格式" class="headerlink" title="3.6.1 链接的语法格式"></a>3.6.1 链接的语法格式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转目标"</span> <span class="attr">target</span>=<span class="string">" 目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>href</td><td>用于指定链接目标的url地址，(必须属性)当为标签应用href属性时， 它就具有了超链接的功能</td></tr><tr><td>target</td><td>用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式。</td></tr></tbody></table><h3 id="3-6-2-链接分类"><a href="#3-6-2-链接分类" class="headerlink" title="3.6.2 链接分类:"></a>3.6.2 链接分类:</h3><ol><li>外部链接: 例如<code>&lt;a href= *http://www.baidu.com*&gt;百度&lt;/a&gt;</code></li><li>内部链接:网站内部页面之间的相互链接直接链接内部页面名称即可,例如<code>&lt;a href= *index.html*&gt;首页&lt;/a&gt;</code></li><li>空链接: 如果当时没有确定链接目标时, &lt;<code>a href=&quot;#&quot;&gt;首页&lt;/&gt;</code></li><li>下载链接: 如果href里面地址是一个文件或者压缩包,会下载这个文件。</li><li>网页元素链接:在网页中的各种网页元素,如文本、图像、表格、音频、视频等都可以添加超链接。</li><li>锚点链接:点击链接,可以快速定位到页面中的某个位置。</li></ol><ul><li>在链接文本的href属性中,设置属性值为#名字的形式,如<code>&lt;a href=&quot; #two&quot;&gt;第2集&lt;/a&gt;</code></li><li>找到目标位置标签,里面添加一个id属性=刚才的名字,如:<code>&lt;h3 id= &quot;two&quot;&gt;第2集介绍&lt;/h3&gt;</code></li></ul><h1 id="4-HTML中的注释和特殊字符"><a href="#4-HTML中的注释和特殊字符" class="headerlink" title="4. HTML中的注释和特殊字符"></a>4. HTML中的注释和特殊字符</h1><h2 id="4-1-注释"><a href="#4-1-注释" class="headerlink" title="4.1 注释"></a>4.1 注释</h2><p><code>&lt;!--注释语句--&gt;</code></p><p>快捷键: ctrl + /</p><h2 id="4-2-特殊字符"><a href="#4-2-特殊字符" class="headerlink" title="4.2 特殊字符"></a>4.2 特殊字符</h2><table><thead><tr><th>特殊字符</th><th>描述</th><th>字符的代码</th></tr></thead><tbody><tr><td><code></code></td><td>空格符</td><td><code>&amp;nbsp;</code></td></tr><tr><td>＜</td><td>小于号</td><td><code>&amp;lt;</code></td></tr><tr><td>＞</td><td>大于号</td><td><code>&amp;gt;</code></td></tr><tr><td>&amp;</td><td>和号</td><td><code>&amp;amp;</code></td></tr><tr><td>￥</td><td>人民币</td><td><code>&amp;yen;</code></td></tr><tr><td>©</td><td>版权</td><td><code>&amp;copy;</code></td></tr><tr><td>®</td><td>注册商标</td><td><code>&amp;reg;</code></td></tr><tr><td>℃</td><td>摄氏度</td><td><code>&amp;deg;</code></td></tr><tr><td>±</td><td>正负号</td><td><code>&amp;plusmn;</code></td></tr><tr><td>×</td><td>乘号</td><td><code>&amp;times;</code></td></tr><tr><td>÷</td><td>除号</td><td><code>&amp;divide;</code></td></tr><tr><td>²</td><td>平方2 (上标2)</td><td><code>&amp;sup2;</code></td></tr><tr><td>³</td><td>立方3 (上标3)</td><td><code>&amp;sup3;</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端01-HTML简介</title>
      <link href="/2020/05/29/Frontend01/"/>
      <url>/2020/05/29/Frontend01/</url>
      
        <content type="html"><![CDATA[<ul><li>网页的基本组成</li><li>常用浏览器</li><li>Web标准</li></ul><a id="more"></a><h1 id="1-网页"><a href="#1-网页" class="headerlink" title="1.网页"></a><strong>1.网页</strong></h1><h2 id="1-1-网页的概念"><a href="#1-1-网页的概念" class="headerlink" title="1.1 网页的概念"></a>1.1 网页的概念</h2><p>网站是指在因特网上根据定的规则,使用HTML等制作的用于展示特定内容相关的网页集合.</p><p>网页是网站中的一“页”, 通常是HTML格式的文件,它要通过浏览器来阅读。</p><p>网页是构成网站的基本元素,它通常由图片、链接、文字声音、视频等元素组成，通常我们看到的网页,常见以.htm或.html后缀结尾的文件,因此将其俗称为HTML文件。</p><h2 id="1-2-什么是HTML"><a href="#1-2-什么是HTML" class="headerlink" title="1.2 什么是HTML"></a>1.2 什么是HTML</h2><p>HTML指的是超文本标记语言(Hyper Text Markup Language) ,它是用来描述网页的一种语言，</p><p>HTML不是一种编程语言,而是一种标记语言(markup language)。</p><p>标记语言是一套标记标签(markup tag)。</p><p>所谓超文本,有2层含义:</p><ol><li>它可以加入图片、声音、动画、多媒体等内容(超越了文本限制)。</li><li>它还可以从一个文件跳转到另一个文件,与世界各地主机的文件连接(超级链接文本)。</li></ol><h2 id="1-3-网页的形成"><a href="#1-3-网页的形成" class="headerlink" title="1.3 网页的形成"></a>1.3 网页的形成</h2><p>前端人员开发代码————&gt;浏览器显示代码（解析、渲染）————&gt;生成Web页面</p><h1 id="2-常用浏览器"><a href="#2-常用浏览器" class="headerlink" title="2.常用浏览器"></a><strong>2.常用浏览器</strong></h1><h2 id="2-1-浏览器内核"><a href="#2-1-浏览器内核" class="headerlink" title="2.1 浏览器内核"></a>2.1 浏览器内核</h2><p>浏览器内核(渲染引擎):负责读取网页内容,整理讯息,计算网页的显示方式并显示页面。</p><h1 id="3-Web标准"><a href="#3-Web标准" class="headerlink" title="3.Web标准"></a><strong>3.Web标准</strong></h1><h2 id="3-1-为什么需要Web标准"><a href="#3-1-为什么需要Web标准" class="headerlink" title="3.1 为什么需要Web标准"></a>3.1 为什么需要Web标准</h2><p>遵循Web标准除了可以让不同的开发人员写出的页面更标准、更统外,还有以下优点:</p><ol><li>让Web的发展前景更广阔。</li><li>内容能被更广泛的设备访问。</li><li>更容易被搜寻引擎搜索。</li><li>降低网站流量费用。</li><li>使网站更易于维护。</li><li>提高页面浏览速度。</li></ol><h2 id="3-2-Web标准的构成"><a href="#3-2-Web标准的构成" class="headerlink" title="3.2 Web标准的构成"></a>3.2 Web标准的构成</h2><p>主要包括结构(Structure)、表现(Presentation)和行为(Behavior)三个方面。</p><table><thead><tr><th>标准</th><th>说明</th></tr></thead><tbody><tr><td>结构</td><td>结构用于对网页元素进行整理和分类，现阶段主要学的是HTML</td></tr><tr><td>表现</td><td>表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS</td></tr><tr><td>行为</td><td>行为是指网页模型的定义及交互的编写，现阶段主要学的是Javascript</td></tr></tbody></table><p>Web标准提出的最佳体验方案:结构、样式、行为相分离。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
